// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$824 {

    static final FunctionDescriptor SSL_CTX_dane_clear_flags$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SSL_CTX_dane_clear_flags$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_dane_clear_flags",
        constants$824.SSL_CTX_dane_clear_flags$FUNC, false
    );
    static final FunctionDescriptor SSL_dane_set_flags$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SSL_dane_set_flags$MH = RuntimeHelper.downcallHandle(
        "SSL_dane_set_flags",
        constants$824.SSL_dane_set_flags$FUNC, false
    );
    static final FunctionDescriptor SSL_dane_clear_flags$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SSL_dane_clear_flags$MH = RuntimeHelper.downcallHandle(
        "SSL_dane_clear_flags",
        constants$824.SSL_dane_clear_flags$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_set1_param$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set1_param$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set1_param",
        constants$824.SSL_CTX_set1_param$FUNC, false
    );
    static final FunctionDescriptor SSL_set1_param$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_set1_param$MH = RuntimeHelper.downcallHandle(
        "SSL_set1_param",
        constants$824.SSL_set1_param$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_get0_param$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_get0_param$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_get0_param",
        constants$824.SSL_CTX_get0_param$FUNC, false
    );
}


