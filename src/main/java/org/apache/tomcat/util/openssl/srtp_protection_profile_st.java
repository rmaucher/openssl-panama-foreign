// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class srtp_protection_profile_st {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        ADDRESS.withName("name"),
        JAVA_LONG.withName("id")
    ).withName("srtp_protection_profile_st");
    public static MemoryLayout $LAYOUT() {
        return srtp_protection_profile_st.$struct$LAYOUT;
    }
    static final VarHandle name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("name"));
    public static VarHandle name$VH() {
        return srtp_protection_profile_st.name$VH;
    }
    public static MemoryAddress name$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)srtp_protection_profile_st.name$VH.get(seg);
    }
    public static void name$set( MemorySegment seg, MemoryAddress x) {
        srtp_protection_profile_st.name$VH.set(seg, x);
    }
    public static MemoryAddress name$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)srtp_protection_profile_st.name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void name$set(MemorySegment seg, long index, MemoryAddress x) {
        srtp_protection_profile_st.name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("id"));
    public static VarHandle id$VH() {
        return srtp_protection_profile_st.id$VH;
    }
    public static long id$get(MemorySegment seg) {
        return (long)srtp_protection_profile_st.id$VH.get(seg);
    }
    public static void id$set( MemorySegment seg, long x) {
        srtp_protection_profile_st.id$VH.set(seg, x);
    }
    public static long id$get(MemorySegment seg, long index) {
        return (long)srtp_protection_profile_st.id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, long x) {
        srtp_protection_profile_st.id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


