// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1045 {

    static final FunctionDescriptor sk_IPAddressFamily_set_cmp_func$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle sk_IPAddressFamily_set_cmp_func$MH = RuntimeHelper.downcallHandle(
        "sk_IPAddressFamily_set_cmp_func",
        constants$1045.sk_IPAddressFamily_set_cmp_func$FUNC, false
    );
    static final FunctionDescriptor IPAddressRange_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle IPAddressRange_new$MH = RuntimeHelper.downcallHandle(
        "IPAddressRange_new",
        constants$1045.IPAddressRange_new$FUNC, false
    );
    static final FunctionDescriptor IPAddressRange_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle IPAddressRange_free$MH = RuntimeHelper.downcallHandle(
        "IPAddressRange_free",
        constants$1045.IPAddressRange_free$FUNC, false
    );
    static final FunctionDescriptor d2i_IPAddressRange$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle d2i_IPAddressRange$MH = RuntimeHelper.downcallHandle(
        "d2i_IPAddressRange",
        constants$1045.d2i_IPAddressRange$FUNC, false
    );
    static final FunctionDescriptor i2d_IPAddressRange$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_IPAddressRange$MH = RuntimeHelper.downcallHandle(
        "i2d_IPAddressRange",
        constants$1045.i2d_IPAddressRange$FUNC, false
    );
    static final FunctionDescriptor IPAddressOrRange_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle IPAddressOrRange_new$MH = RuntimeHelper.downcallHandle(
        "IPAddressOrRange_new",
        constants$1045.IPAddressOrRange_new$FUNC, false
    );
}


