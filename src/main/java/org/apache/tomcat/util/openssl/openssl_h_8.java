// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class openssl_h_8 extends openssl_h_7 {

    public static MethodHandle RSA_get0_n$MH() {
        return RuntimeHelper.requireNonNull(constants$422.RSA_get0_n$MH,"RSA_get0_n");
    }
    public static MemoryAddress RSA_get0_n ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.RSA_get0_n$MH, "RSA_get0_n");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_e$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_e$MH,"RSA_get0_e");
    }
    public static MemoryAddress RSA_get0_e ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_e$MH, "RSA_get0_e");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_d$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_d$MH,"RSA_get0_d");
    }
    public static MemoryAddress RSA_get0_d ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_d$MH, "RSA_get0_d");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_p$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_p$MH,"RSA_get0_p");
    }
    public static MemoryAddress RSA_get0_p ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_p$MH, "RSA_get0_p");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_q$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_q$MH,"RSA_get0_q");
    }
    public static MemoryAddress RSA_get0_q ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_q$MH, "RSA_get0_q");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_dmp1$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_dmp1$MH,"RSA_get0_dmp1");
    }
    public static MemoryAddress RSA_get0_dmp1 ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_dmp1$MH, "RSA_get0_dmp1");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_dmq1$MH() {
        return RuntimeHelper.requireNonNull(constants$423.RSA_get0_dmq1$MH,"RSA_get0_dmq1");
    }
    public static MemoryAddress RSA_get0_dmq1 ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.RSA_get0_dmq1$MH, "RSA_get0_dmq1");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_iqmp$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_get0_iqmp$MH,"RSA_get0_iqmp");
    }
    public static MemoryAddress RSA_get0_iqmp ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_get0_iqmp$MH, "RSA_get0_iqmp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_pss_params$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_get0_pss_params$MH,"RSA_get0_pss_params");
    }
    public static MemoryAddress RSA_get0_pss_params ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_get0_pss_params$MH, "RSA_get0_pss_params");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_clear_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_clear_flags$MH,"RSA_clear_flags");
    }
    public static void RSA_clear_flags ( Addressable r,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_clear_flags$MH, "RSA_clear_flags");
        try {
            mh$.invokeExact(r, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_test_flags$MH,"RSA_test_flags");
    }
    public static int RSA_test_flags ( Addressable r,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_test_flags$MH, "RSA_test_flags");
        try {
            return (int)mh$.invokeExact(r, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_set_flags$MH,"RSA_set_flags");
    }
    public static void RSA_set_flags ( Addressable r,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_set_flags$MH, "RSA_set_flags");
        try {
            mh$.invokeExact(r, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$424.RSA_get_version$MH,"RSA_get_version");
    }
    public static int RSA_get_version ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.RSA_get_version$MH, "RSA_get_version");
        try {
            return (int)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get0_engine$MH() {
        return RuntimeHelper.requireNonNull(constants$425.RSA_get0_engine$MH,"RSA_get0_engine");
    }
    public static MemoryAddress RSA_get0_engine ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.RSA_get0_engine$MH, "RSA_get0_engine");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_generate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$425.RSA_generate_key$MH,"RSA_generate_key");
    }
    public static MemoryAddress RSA_generate_key ( int bits,  long e,  Addressable callback,  Addressable cb_arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.RSA_generate_key$MH, "RSA_generate_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(bits, e, callback, cb_arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_generate_key_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$425.RSA_generate_key_ex$MH,"RSA_generate_key_ex");
    }
    public static int RSA_generate_key_ex ( Addressable rsa,  int bits,  Addressable e,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.RSA_generate_key_ex$MH, "RSA_generate_key_ex");
        try {
            return (int)mh$.invokeExact(rsa, bits, e, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_generate_multi_prime_key$MH() {
        return RuntimeHelper.requireNonNull(constants$425.RSA_generate_multi_prime_key$MH,"RSA_generate_multi_prime_key");
    }
    public static int RSA_generate_multi_prime_key ( Addressable rsa,  int bits,  int primes,  Addressable e,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.RSA_generate_multi_prime_key$MH, "RSA_generate_multi_prime_key");
        try {
            return (int)mh$.invokeExact(rsa, bits, primes, e, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_X931_derive_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_X931_derive_ex$MH,"RSA_X931_derive_ex");
    }
    public static int RSA_X931_derive_ex ( Addressable rsa,  Addressable p1,  Addressable p2,  Addressable q1,  Addressable q2,  Addressable Xp1,  Addressable Xp2,  Addressable Xp,  Addressable Xq1,  Addressable Xq2,  Addressable Xq,  Addressable e,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_X931_derive_ex$MH, "RSA_X931_derive_ex");
        try {
            return (int)mh$.invokeExact(rsa, p1, p2, q1, q2, Xp1, Xp2, Xp, Xq1, Xq2, Xq, e, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_X931_generate_key_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_X931_generate_key_ex$MH,"RSA_X931_generate_key_ex");
    }
    public static int RSA_X931_generate_key_ex ( Addressable rsa,  int bits,  Addressable e,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_X931_generate_key_ex$MH, "RSA_X931_generate_key_ex");
        try {
            return (int)mh$.invokeExact(rsa, bits, e, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_check_key$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_check_key$MH,"RSA_check_key");
    }
    public static int RSA_check_key ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_check_key$MH, "RSA_check_key");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_check_key_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_check_key_ex$MH,"RSA_check_key_ex");
    }
    public static int RSA_check_key_ex ( Addressable x0,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_check_key_ex$MH, "RSA_check_key_ex");
        try {
            return (int)mh$.invokeExact(x0, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_public_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_public_encrypt$MH,"RSA_public_encrypt");
    }
    public static int RSA_public_encrypt ( int flen,  Addressable from,  Addressable to,  Addressable rsa,  int padding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_public_encrypt$MH, "RSA_public_encrypt");
        try {
            return (int)mh$.invokeExact(flen, from, to, rsa, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_private_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$426.RSA_private_encrypt$MH,"RSA_private_encrypt");
    }
    public static int RSA_private_encrypt ( int flen,  Addressable from,  Addressable to,  Addressable rsa,  int padding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.RSA_private_encrypt$MH, "RSA_private_encrypt");
        try {
            return (int)mh$.invokeExact(flen, from, to, rsa, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_public_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_public_decrypt$MH,"RSA_public_decrypt");
    }
    public static int RSA_public_decrypt ( int flen,  Addressable from,  Addressable to,  Addressable rsa,  int padding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_public_decrypt$MH, "RSA_public_decrypt");
        try {
            return (int)mh$.invokeExact(flen, from, to, rsa, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_private_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_private_decrypt$MH,"RSA_private_decrypt");
    }
    public static int RSA_private_decrypt ( int flen,  Addressable from,  Addressable to,  Addressable rsa,  int padding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_private_decrypt$MH, "RSA_private_decrypt");
        try {
            return (int)mh$.invokeExact(flen, from, to, rsa, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_free$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_free$MH,"RSA_free");
    }
    public static void RSA_free ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_free$MH, "RSA_free");
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_up_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_up_ref$MH,"RSA_up_ref");
    }
    public static int RSA_up_ref ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_up_ref$MH, "RSA_up_ref");
        try {
            return (int)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_flags$MH,"RSA_flags");
    }
    public static int RSA_flags ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_flags$MH, "RSA_flags");
        try {
            return (int)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_set_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$427.RSA_set_default_method$MH,"RSA_set_default_method");
    }
    public static void RSA_set_default_method ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.RSA_set_default_method$MH, "RSA_set_default_method");
        try {
            mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_get_default_method$MH,"RSA_get_default_method");
    }
    public static MemoryAddress RSA_get_default_method () {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_get_default_method$MH, "RSA_get_default_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_null_method$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_null_method$MH,"RSA_null_method");
    }
    public static MemoryAddress RSA_null_method () {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_null_method$MH, "RSA_null_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get_method$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_get_method$MH,"RSA_get_method");
    }
    public static MemoryAddress RSA_get_method ( Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_get_method$MH, "RSA_get_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_set_method$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_set_method$MH,"RSA_set_method");
    }
    public static int RSA_set_method ( Addressable rsa,  Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_set_method$MH, "RSA_set_method");
        try {
            return (int)mh$.invokeExact(rsa, meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_PKCS1_OpenSSL$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_PKCS1_OpenSSL$MH,"RSA_PKCS1_OpenSSL");
    }
    public static MemoryAddress RSA_PKCS1_OpenSSL () {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_PKCS1_OpenSSL$MH, "RSA_PKCS1_OpenSSL");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_pkey_ctx_ctrl$MH() {
        return RuntimeHelper.requireNonNull(constants$428.RSA_pkey_ctx_ctrl$MH,"RSA_pkey_ctx_ctrl");
    }
    public static int RSA_pkey_ctx_ctrl ( Addressable ctx,  int optype,  int cmd,  int p1,  Addressable p2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.RSA_pkey_ctx_ctrl$MH, "RSA_pkey_ctx_ctrl");
        try {
            return (int)mh$.invokeExact(ctx, optype, cmd, p1, p2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_RSAPublicKey$MH() {
        return RuntimeHelper.requireNonNull(constants$429.d2i_RSAPublicKey$MH,"d2i_RSAPublicKey");
    }
    public static MemoryAddress d2i_RSAPublicKey ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.d2i_RSAPublicKey$MH, "d2i_RSAPublicKey");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_RSAPublicKey$MH() {
        return RuntimeHelper.requireNonNull(constants$429.i2d_RSAPublicKey$MH,"i2d_RSAPublicKey");
    }
    public static int i2d_RSAPublicKey ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.i2d_RSAPublicKey$MH, "i2d_RSAPublicKey");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_RSAPrivateKey$MH() {
        return RuntimeHelper.requireNonNull(constants$429.d2i_RSAPrivateKey$MH,"d2i_RSAPrivateKey");
    }
    public static MemoryAddress d2i_RSAPrivateKey ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.d2i_RSAPrivateKey$MH, "d2i_RSAPrivateKey");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_RSAPrivateKey$MH() {
        return RuntimeHelper.requireNonNull(constants$429.i2d_RSAPrivateKey$MH,"i2d_RSAPrivateKey");
    }
    public static int i2d_RSAPrivateKey ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.i2d_RSAPrivateKey$MH, "i2d_RSAPrivateKey");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_PSS_PARAMS_new$MH() {
        return RuntimeHelper.requireNonNull(constants$429.RSA_PSS_PARAMS_new$MH,"RSA_PSS_PARAMS_new");
    }
    public static MemoryAddress RSA_PSS_PARAMS_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.RSA_PSS_PARAMS_new$MH, "RSA_PSS_PARAMS_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_PSS_PARAMS_free$MH() {
        return RuntimeHelper.requireNonNull(constants$429.RSA_PSS_PARAMS_free$MH,"RSA_PSS_PARAMS_free");
    }
    public static void RSA_PSS_PARAMS_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.RSA_PSS_PARAMS_free$MH, "RSA_PSS_PARAMS_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_RSA_PSS_PARAMS$MH() {
        return RuntimeHelper.requireNonNull(constants$430.d2i_RSA_PSS_PARAMS$MH,"d2i_RSA_PSS_PARAMS");
    }
    public static MemoryAddress d2i_RSA_PSS_PARAMS ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.d2i_RSA_PSS_PARAMS$MH, "d2i_RSA_PSS_PARAMS");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_RSA_PSS_PARAMS$MH() {
        return RuntimeHelper.requireNonNull(constants$430.i2d_RSA_PSS_PARAMS$MH,"i2d_RSA_PSS_PARAMS");
    }
    public static int i2d_RSA_PSS_PARAMS ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.i2d_RSA_PSS_PARAMS$MH, "i2d_RSA_PSS_PARAMS");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_OAEP_PARAMS_new$MH() {
        return RuntimeHelper.requireNonNull(constants$430.RSA_OAEP_PARAMS_new$MH,"RSA_OAEP_PARAMS_new");
    }
    public static MemoryAddress RSA_OAEP_PARAMS_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.RSA_OAEP_PARAMS_new$MH, "RSA_OAEP_PARAMS_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_OAEP_PARAMS_free$MH() {
        return RuntimeHelper.requireNonNull(constants$430.RSA_OAEP_PARAMS_free$MH,"RSA_OAEP_PARAMS_free");
    }
    public static void RSA_OAEP_PARAMS_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.RSA_OAEP_PARAMS_free$MH, "RSA_OAEP_PARAMS_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_RSA_OAEP_PARAMS$MH() {
        return RuntimeHelper.requireNonNull(constants$430.d2i_RSA_OAEP_PARAMS$MH,"d2i_RSA_OAEP_PARAMS");
    }
    public static MemoryAddress d2i_RSA_OAEP_PARAMS ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.d2i_RSA_OAEP_PARAMS$MH, "d2i_RSA_OAEP_PARAMS");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_RSA_OAEP_PARAMS$MH() {
        return RuntimeHelper.requireNonNull(constants$430.i2d_RSA_OAEP_PARAMS$MH,"i2d_RSA_OAEP_PARAMS");
    }
    public static int i2d_RSA_OAEP_PARAMS ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.i2d_RSA_OAEP_PARAMS$MH, "i2d_RSA_OAEP_PARAMS");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_print_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_print_fp$MH,"RSA_print_fp");
    }
    public static int RSA_print_fp ( Addressable fp,  Addressable r,  int offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_print_fp$MH, "RSA_print_fp");
        try {
            return (int)mh$.invokeExact(fp, r, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_print$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_print$MH,"RSA_print");
    }
    public static int RSA_print ( Addressable bp,  Addressable r,  int offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_print$MH, "RSA_print");
        try {
            return (int)mh$.invokeExact(bp, r, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_sign$MH,"RSA_sign");
    }
    public static int RSA_sign ( int type,  Addressable m,  int m_length,  Addressable sigret,  Addressable siglen,  Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_sign$MH, "RSA_sign");
        try {
            return (int)mh$.invokeExact(type, m, m_length, sigret, siglen, rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_verify$MH,"RSA_verify");
    }
    public static int RSA_verify ( int type,  Addressable m,  int m_length,  Addressable sigbuf,  int siglen,  Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_verify$MH, "RSA_verify");
        try {
            return (int)mh$.invokeExact(type, m, m_length, sigbuf, siglen, rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_sign_ASN1_OCTET_STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_sign_ASN1_OCTET_STRING$MH,"RSA_sign_ASN1_OCTET_STRING");
    }
    public static int RSA_sign_ASN1_OCTET_STRING ( int type,  Addressable m,  int m_length,  Addressable sigret,  Addressable siglen,  Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_sign_ASN1_OCTET_STRING$MH, "RSA_sign_ASN1_OCTET_STRING");
        try {
            return (int)mh$.invokeExact(type, m, m_length, sigret, siglen, rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_verify_ASN1_OCTET_STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$431.RSA_verify_ASN1_OCTET_STRING$MH,"RSA_verify_ASN1_OCTET_STRING");
    }
    public static int RSA_verify_ASN1_OCTET_STRING ( int type,  Addressable m,  int m_length,  Addressable sigbuf,  int siglen,  Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.RSA_verify_ASN1_OCTET_STRING$MH, "RSA_verify_ASN1_OCTET_STRING");
        try {
            return (int)mh$.invokeExact(type, m, m_length, sigbuf, siglen, rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_blinding_on$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_blinding_on$MH,"RSA_blinding_on");
    }
    public static int RSA_blinding_on ( Addressable rsa,  Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_blinding_on$MH, "RSA_blinding_on");
        try {
            return (int)mh$.invokeExact(rsa, ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_blinding_off$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_blinding_off$MH,"RSA_blinding_off");
    }
    public static void RSA_blinding_off ( Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_blinding_off$MH, "RSA_blinding_off");
        try {
            mh$.invokeExact(rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_setup_blinding$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_setup_blinding$MH,"RSA_setup_blinding");
    }
    public static MemoryAddress RSA_setup_blinding ( Addressable rsa,  Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_setup_blinding$MH, "RSA_setup_blinding");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(rsa, ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_type_1$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_padding_add_PKCS1_type_1$MH,"RSA_padding_add_PKCS1_type_1");
    }
    public static int RSA_padding_add_PKCS1_type_1 ( Addressable to,  int tlen,  Addressable f,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_padding_add_PKCS1_type_1$MH, "RSA_padding_add_PKCS1_type_1");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_PKCS1_type_1$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_padding_check_PKCS1_type_1$MH,"RSA_padding_check_PKCS1_type_1");
    }
    public static int RSA_padding_check_PKCS1_type_1 ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_padding_check_PKCS1_type_1$MH, "RSA_padding_check_PKCS1_type_1");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_type_2$MH() {
        return RuntimeHelper.requireNonNull(constants$432.RSA_padding_add_PKCS1_type_2$MH,"RSA_padding_add_PKCS1_type_2");
    }
    public static int RSA_padding_add_PKCS1_type_2 ( Addressable to,  int tlen,  Addressable f,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.RSA_padding_add_PKCS1_type_2$MH, "RSA_padding_add_PKCS1_type_2");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_PKCS1_type_2$MH() {
        return RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_type_2$MH,"RSA_padding_check_PKCS1_type_2");
    }
    public static int RSA_padding_check_PKCS1_type_2 ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_type_2$MH, "RSA_padding_check_PKCS1_type_2");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS1_MGF1$MH() {
        return RuntimeHelper.requireNonNull(constants$433.PKCS1_MGF1$MH,"PKCS1_MGF1");
    }
    public static int PKCS1_MGF1 ( Addressable mask,  long len,  Addressable seed,  long seedlen,  Addressable dgst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.PKCS1_MGF1$MH, "PKCS1_MGF1");
        try {
            return (int)mh$.invokeExact(mask, len, seed, seedlen, dgst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_OAEP$MH() {
        return RuntimeHelper.requireNonNull(constants$433.RSA_padding_add_PKCS1_OAEP$MH,"RSA_padding_add_PKCS1_OAEP");
    }
    public static int RSA_padding_add_PKCS1_OAEP ( Addressable to,  int tlen,  Addressable f,  int fl,  Addressable p,  int pl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.RSA_padding_add_PKCS1_OAEP$MH, "RSA_padding_add_PKCS1_OAEP");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, p, pl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_PKCS1_OAEP$MH() {
        return RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_OAEP$MH,"RSA_padding_check_PKCS1_OAEP");
    }
    public static int RSA_padding_check_PKCS1_OAEP ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len,  Addressable p,  int pl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_OAEP$MH, "RSA_padding_check_PKCS1_OAEP");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len, p, pl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_OAEP_mgf1$MH() {
        return RuntimeHelper.requireNonNull(constants$433.RSA_padding_add_PKCS1_OAEP_mgf1$MH,"RSA_padding_add_PKCS1_OAEP_mgf1");
    }
    public static int RSA_padding_add_PKCS1_OAEP_mgf1 ( Addressable to,  int tlen,  Addressable from,  int flen,  Addressable param,  int plen,  Addressable md,  Addressable mgf1md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.RSA_padding_add_PKCS1_OAEP_mgf1$MH, "RSA_padding_add_PKCS1_OAEP_mgf1");
        try {
            return (int)mh$.invokeExact(to, tlen, from, flen, param, plen, md, mgf1md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_PKCS1_OAEP_mgf1$MH() {
        return RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_OAEP_mgf1$MH,"RSA_padding_check_PKCS1_OAEP_mgf1");
    }
    public static int RSA_padding_check_PKCS1_OAEP_mgf1 ( Addressable to,  int tlen,  Addressable from,  int flen,  int num,  Addressable param,  int plen,  Addressable md,  Addressable mgf1md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.RSA_padding_check_PKCS1_OAEP_mgf1$MH, "RSA_padding_check_PKCS1_OAEP_mgf1");
        try {
            return (int)mh$.invokeExact(to, tlen, from, flen, num, param, plen, md, mgf1md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_SSLv23$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_SSLv23$MH,"RSA_padding_add_SSLv23");
    }
    public static int RSA_padding_add_SSLv23 ( Addressable to,  int tlen,  Addressable f,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_SSLv23$MH, "RSA_padding_add_SSLv23");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_SSLv23$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_SSLv23$MH,"RSA_padding_check_SSLv23");
    }
    public static int RSA_padding_check_SSLv23 ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_SSLv23$MH, "RSA_padding_check_SSLv23");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_none$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_none$MH,"RSA_padding_add_none");
    }
    public static int RSA_padding_add_none ( Addressable to,  int tlen,  Addressable f,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_none$MH, "RSA_padding_add_none");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_none$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_none$MH,"RSA_padding_check_none");
    }
    public static int RSA_padding_check_none ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_none$MH, "RSA_padding_check_none");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_X931$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_X931$MH,"RSA_padding_add_X931");
    }
    public static int RSA_padding_add_X931 ( Addressable to,  int tlen,  Addressable f,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_add_X931$MH, "RSA_padding_add_X931");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_check_X931$MH() {
        return RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_X931$MH,"RSA_padding_check_X931");
    }
    public static int RSA_padding_check_X931 ( Addressable to,  int tlen,  Addressable f,  int fl,  int rsa_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.RSA_padding_check_X931$MH, "RSA_padding_check_X931");
        try {
            return (int)mh$.invokeExact(to, tlen, f, fl, rsa_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_X931_hash_id$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_X931_hash_id$MH,"RSA_X931_hash_id");
    }
    public static int RSA_X931_hash_id ( int nid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_X931_hash_id$MH, "RSA_X931_hash_id");
        try {
            return (int)mh$.invokeExact(nid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_verify_PKCS1_PSS$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_verify_PKCS1_PSS$MH,"RSA_verify_PKCS1_PSS");
    }
    public static int RSA_verify_PKCS1_PSS ( Addressable rsa,  Addressable mHash,  Addressable Hash,  Addressable EM,  int sLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_verify_PKCS1_PSS$MH, "RSA_verify_PKCS1_PSS");
        try {
            return (int)mh$.invokeExact(rsa, mHash, Hash, EM, sLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_PSS$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_padding_add_PKCS1_PSS$MH,"RSA_padding_add_PKCS1_PSS");
    }
    public static int RSA_padding_add_PKCS1_PSS ( Addressable rsa,  Addressable EM,  Addressable mHash,  Addressable Hash,  int sLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_padding_add_PKCS1_PSS$MH, "RSA_padding_add_PKCS1_PSS");
        try {
            return (int)mh$.invokeExact(rsa, EM, mHash, Hash, sLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_verify_PKCS1_PSS_mgf1$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_verify_PKCS1_PSS_mgf1$MH,"RSA_verify_PKCS1_PSS_mgf1");
    }
    public static int RSA_verify_PKCS1_PSS_mgf1 ( Addressable rsa,  Addressable mHash,  Addressable Hash,  Addressable mgf1Hash,  Addressable EM,  int sLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_verify_PKCS1_PSS_mgf1$MH, "RSA_verify_PKCS1_PSS_mgf1");
        try {
            return (int)mh$.invokeExact(rsa, mHash, Hash, mgf1Hash, EM, sLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_padding_add_PKCS1_PSS_mgf1$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_padding_add_PKCS1_PSS_mgf1$MH,"RSA_padding_add_PKCS1_PSS_mgf1");
    }
    public static int RSA_padding_add_PKCS1_PSS_mgf1 ( Addressable rsa,  Addressable EM,  Addressable mHash,  Addressable Hash,  Addressable mgf1Hash,  int sLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_padding_add_PKCS1_PSS_mgf1$MH, "RSA_padding_add_PKCS1_PSS_mgf1");
        try {
            return (int)mh$.invokeExact(rsa, EM, mHash, Hash, mgf1Hash, sLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_set_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$435.RSA_set_ex_data$MH,"RSA_set_ex_data");
    }
    public static int RSA_set_ex_data ( Addressable r,  int idx,  Addressable arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$435.RSA_set_ex_data$MH, "RSA_set_ex_data");
        try {
            return (int)mh$.invokeExact(r, idx, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_get_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSA_get_ex_data$MH,"RSA_get_ex_data");
    }
    public static MemoryAddress RSA_get_ex_data ( Addressable r,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSA_get_ex_data$MH, "RSA_get_ex_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSAPublicKey_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSAPublicKey_dup$MH,"RSAPublicKey_dup");
    }
    public static MemoryAddress RSAPublicKey_dup ( Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSAPublicKey_dup$MH, "RSAPublicKey_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSAPrivateKey_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSAPrivateKey_dup$MH,"RSAPrivateKey_dup");
    }
    public static MemoryAddress RSAPrivateKey_dup ( Addressable rsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSAPrivateKey_dup$MH, "RSAPrivateKey_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(rsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_new$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSA_meth_new$MH,"RSA_meth_new");
    }
    public static MemoryAddress RSA_meth_new ( Addressable name,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSA_meth_new$MH, "RSA_meth_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_free$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSA_meth_free$MH,"RSA_meth_free");
    }
    public static void RSA_meth_free ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSA_meth_free$MH, "RSA_meth_free");
        try {
            mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$436.RSA_meth_dup$MH,"RSA_meth_dup");
    }
    public static MemoryAddress RSA_meth_dup ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.RSA_meth_dup$MH, "RSA_meth_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get0_name$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_get0_name$MH,"RSA_meth_get0_name");
    }
    public static MemoryAddress RSA_meth_get0_name ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_get0_name$MH, "RSA_meth_get0_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set1_name$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_set1_name$MH,"RSA_meth_set1_name");
    }
    public static int RSA_meth_set1_name ( Addressable meth,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_set1_name$MH, "RSA_meth_set1_name");
        try {
            return (int)mh$.invokeExact(meth, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_get_flags$MH,"RSA_meth_get_flags");
    }
    public static int RSA_meth_get_flags ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_get_flags$MH, "RSA_meth_get_flags");
        try {
            return (int)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_set_flags$MH,"RSA_meth_set_flags");
    }
    public static int RSA_meth_set_flags ( Addressable meth,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_set_flags$MH, "RSA_meth_set_flags");
        try {
            return (int)mh$.invokeExact(meth, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_get0_app_data$MH,"RSA_meth_get0_app_data");
    }
    public static MemoryAddress RSA_meth_get0_app_data ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_get0_app_data$MH, "RSA_meth_get0_app_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$437.RSA_meth_set0_app_data$MH,"RSA_meth_set0_app_data");
    }
    public static int RSA_meth_set0_app_data ( Addressable meth,  Addressable app_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.RSA_meth_set0_app_data$MH, "RSA_meth_set0_app_data");
        try {
            return (int)mh$.invokeExact(meth, app_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_pub_enc$MH() {
        return RuntimeHelper.requireNonNull(constants$438.RSA_meth_get_pub_enc$MH,"RSA_meth_get_pub_enc");
    }
    public static MemoryAddress RSA_meth_get_pub_enc ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.RSA_meth_get_pub_enc$MH, "RSA_meth_get_pub_enc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_pub_enc$MH() {
        return RuntimeHelper.requireNonNull(constants$438.RSA_meth_set_pub_enc$MH,"RSA_meth_set_pub_enc");
    }
    public static int RSA_meth_set_pub_enc ( Addressable rsa,  Addressable pub_enc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.RSA_meth_set_pub_enc$MH, "RSA_meth_set_pub_enc");
        try {
            return (int)mh$.invokeExact(rsa, pub_enc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_pub_dec$MH() {
        return RuntimeHelper.requireNonNull(constants$438.RSA_meth_get_pub_dec$MH,"RSA_meth_get_pub_dec");
    }
    public static MemoryAddress RSA_meth_get_pub_dec ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.RSA_meth_get_pub_dec$MH, "RSA_meth_get_pub_dec");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_pub_dec$MH() {
        return RuntimeHelper.requireNonNull(constants$439.RSA_meth_set_pub_dec$MH,"RSA_meth_set_pub_dec");
    }
    public static int RSA_meth_set_pub_dec ( Addressable rsa,  Addressable pub_dec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.RSA_meth_set_pub_dec$MH, "RSA_meth_set_pub_dec");
        try {
            return (int)mh$.invokeExact(rsa, pub_dec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_priv_enc$MH() {
        return RuntimeHelper.requireNonNull(constants$439.RSA_meth_get_priv_enc$MH,"RSA_meth_get_priv_enc");
    }
    public static MemoryAddress RSA_meth_get_priv_enc ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.RSA_meth_get_priv_enc$MH, "RSA_meth_get_priv_enc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_priv_enc$MH() {
        return RuntimeHelper.requireNonNull(constants$439.RSA_meth_set_priv_enc$MH,"RSA_meth_set_priv_enc");
    }
    public static int RSA_meth_set_priv_enc ( Addressable rsa,  Addressable priv_enc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.RSA_meth_set_priv_enc$MH, "RSA_meth_set_priv_enc");
        try {
            return (int)mh$.invokeExact(rsa, priv_enc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_priv_dec$MH() {
        return RuntimeHelper.requireNonNull(constants$440.RSA_meth_get_priv_dec$MH,"RSA_meth_get_priv_dec");
    }
    public static MemoryAddress RSA_meth_get_priv_dec ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.RSA_meth_get_priv_dec$MH, "RSA_meth_get_priv_dec");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_priv_dec$MH() {
        return RuntimeHelper.requireNonNull(constants$440.RSA_meth_set_priv_dec$MH,"RSA_meth_set_priv_dec");
    }
    public static int RSA_meth_set_priv_dec ( Addressable rsa,  Addressable priv_dec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.RSA_meth_set_priv_dec$MH, "RSA_meth_set_priv_dec");
        try {
            return (int)mh$.invokeExact(rsa, priv_dec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$440.RSA_meth_get_mod_exp$MH,"RSA_meth_get_mod_exp");
    }
    public static MemoryAddress RSA_meth_get_mod_exp ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.RSA_meth_get_mod_exp$MH, "RSA_meth_get_mod_exp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$441.RSA_meth_set_mod_exp$MH,"RSA_meth_set_mod_exp");
    }
    public static int RSA_meth_set_mod_exp ( Addressable rsa,  Addressable mod_exp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.RSA_meth_set_mod_exp$MH, "RSA_meth_set_mod_exp");
        try {
            return (int)mh$.invokeExact(rsa, mod_exp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$441.RSA_meth_get_bn_mod_exp$MH,"RSA_meth_get_bn_mod_exp");
    }
    public static MemoryAddress RSA_meth_get_bn_mod_exp ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.RSA_meth_get_bn_mod_exp$MH, "RSA_meth_get_bn_mod_exp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$441.RSA_meth_set_bn_mod_exp$MH,"RSA_meth_set_bn_mod_exp");
    }
    public static int RSA_meth_set_bn_mod_exp ( Addressable rsa,  Addressable bn_mod_exp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.RSA_meth_set_bn_mod_exp$MH, "RSA_meth_set_bn_mod_exp");
        try {
            return (int)mh$.invokeExact(rsa, bn_mod_exp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_init$MH() {
        return RuntimeHelper.requireNonNull(constants$442.RSA_meth_get_init$MH,"RSA_meth_get_init");
    }
    public static MemoryAddress RSA_meth_get_init ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.RSA_meth_get_init$MH, "RSA_meth_get_init");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_init$MH() {
        return RuntimeHelper.requireNonNull(constants$442.RSA_meth_set_init$MH,"RSA_meth_set_init");
    }
    public static int RSA_meth_set_init ( Addressable rsa,  Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.RSA_meth_set_init$MH, "RSA_meth_set_init");
        try {
            return (int)mh$.invokeExact(rsa, init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$442.RSA_meth_get_finish$MH,"RSA_meth_get_finish");
    }
    public static MemoryAddress RSA_meth_get_finish ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.RSA_meth_get_finish$MH, "RSA_meth_get_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$443.RSA_meth_set_finish$MH,"RSA_meth_set_finish");
    }
    public static int RSA_meth_set_finish ( Addressable rsa,  Addressable finish) {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.RSA_meth_set_finish$MH, "RSA_meth_set_finish");
        try {
            return (int)mh$.invokeExact(rsa, finish);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$443.RSA_meth_get_sign$MH,"RSA_meth_get_sign");
    }
    public static MemoryAddress RSA_meth_get_sign ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.RSA_meth_get_sign$MH, "RSA_meth_get_sign");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$443.RSA_meth_set_sign$MH,"RSA_meth_set_sign");
    }
    public static int RSA_meth_set_sign ( Addressable rsa,  Addressable sign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.RSA_meth_set_sign$MH, "RSA_meth_set_sign");
        try {
            return (int)mh$.invokeExact(rsa, sign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$444.RSA_meth_get_verify$MH,"RSA_meth_get_verify");
    }
    public static MemoryAddress RSA_meth_get_verify ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.RSA_meth_get_verify$MH, "RSA_meth_get_verify");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$444.RSA_meth_set_verify$MH,"RSA_meth_set_verify");
    }
    public static int RSA_meth_set_verify ( Addressable rsa,  Addressable verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.RSA_meth_set_verify$MH, "RSA_meth_set_verify");
        try {
            return (int)mh$.invokeExact(rsa, verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$444.RSA_meth_get_keygen$MH,"RSA_meth_get_keygen");
    }
    public static MemoryAddress RSA_meth_get_keygen ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.RSA_meth_get_keygen$MH, "RSA_meth_get_keygen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$445.RSA_meth_set_keygen$MH,"RSA_meth_set_keygen");
    }
    public static int RSA_meth_set_keygen ( Addressable rsa,  Addressable keygen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.RSA_meth_set_keygen$MH, "RSA_meth_set_keygen");
        try {
            return (int)mh$.invokeExact(rsa, keygen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_get_multi_prime_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$445.RSA_meth_get_multi_prime_keygen$MH,"RSA_meth_get_multi_prime_keygen");
    }
    public static MemoryAddress RSA_meth_get_multi_prime_keygen ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.RSA_meth_get_multi_prime_keygen$MH, "RSA_meth_get_multi_prime_keygen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RSA_meth_set_multi_prime_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$445.RSA_meth_set_multi_prime_keygen$MH,"RSA_meth_set_multi_prime_keygen");
    }
    public static int RSA_meth_set_multi_prime_keygen ( Addressable meth,  Addressable keygen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.RSA_meth_set_multi_prime_keygen$MH, "RSA_meth_set_multi_prime_keygen");
        try {
            return (int)mh$.invokeExact(meth, keygen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ERR_load_DH_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$446.ERR_load_DH_strings$MH,"ERR_load_DH_strings");
    }
    public static int ERR_load_DH_strings () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.ERR_load_DH_strings$MH, "ERR_load_DH_strings");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DHparams_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$446.DHparams_dup$MH,"DHparams_dup");
    }
    public static MemoryAddress DHparams_dup ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.DHparams_dup$MH, "DHparams_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_OpenSSL$MH() {
        return RuntimeHelper.requireNonNull(constants$446.DH_OpenSSL$MH,"DH_OpenSSL");
    }
    public static MemoryAddress DH_OpenSSL () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.DH_OpenSSL$MH, "DH_OpenSSL");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$446.DH_set_default_method$MH,"DH_set_default_method");
    }
    public static void DH_set_default_method ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.DH_set_default_method$MH, "DH_set_default_method");
        try {
            mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$446.DH_get_default_method$MH,"DH_get_default_method");
    }
    public static MemoryAddress DH_get_default_method () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.DH_get_default_method$MH, "DH_get_default_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set_method$MH() {
        return RuntimeHelper.requireNonNull(constants$446.DH_set_method$MH,"DH_set_method");
    }
    public static int DH_set_method ( Addressable dh,  Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.DH_set_method$MH, "DH_set_method");
        try {
            return (int)mh$.invokeExact(dh, meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_new_method$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_new_method$MH,"DH_new_method");
    }
    public static MemoryAddress DH_new_method ( Addressable engine) {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_new_method$MH, "DH_new_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(engine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_new$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_new$MH,"DH_new");
    }
    public static MemoryAddress DH_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_new$MH, "DH_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_free$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_free$MH,"DH_free");
    }
    public static void DH_free ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_free$MH, "DH_free");
        try {
            mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_up_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_up_ref$MH,"DH_up_ref");
    }
    public static int DH_up_ref ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_up_ref$MH, "DH_up_ref");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_bits$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_bits$MH,"DH_bits");
    }
    public static int DH_bits ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_bits$MH, "DH_bits");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_size$MH() {
        return RuntimeHelper.requireNonNull(constants$447.DH_size$MH,"DH_size");
    }
    public static int DH_size ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.DH_size$MH, "DH_size");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_security_bits$MH() {
        return RuntimeHelper.requireNonNull(constants$448.DH_security_bits$MH,"DH_security_bits");
    }
    public static int DH_security_bits ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.DH_security_bits$MH, "DH_security_bits");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$448.DH_set_ex_data$MH,"DH_set_ex_data");
    }
    public static int DH_set_ex_data ( Addressable d,  int idx,  Addressable arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.DH_set_ex_data$MH, "DH_set_ex_data");
        try {
            return (int)mh$.invokeExact(d, idx, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$448.DH_get_ex_data$MH,"DH_get_ex_data");
    }
    public static MemoryAddress DH_get_ex_data ( Addressable d,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.DH_get_ex_data$MH, "DH_get_ex_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_generate_parameters$MH() {
        return RuntimeHelper.requireNonNull(constants$448.DH_generate_parameters$MH,"DH_generate_parameters");
    }
    public static MemoryAddress DH_generate_parameters ( int prime_len,  int generator,  Addressable callback,  Addressable cb_arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.DH_generate_parameters$MH, "DH_generate_parameters");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(prime_len, generator, callback, cb_arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_generate_parameters_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_generate_parameters_ex$MH,"DH_generate_parameters_ex");
    }
    public static int DH_generate_parameters_ex ( Addressable dh,  int prime_len,  int generator,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_generate_parameters_ex$MH, "DH_generate_parameters_ex");
        try {
            return (int)mh$.invokeExact(dh, prime_len, generator, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check_params_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_check_params_ex$MH,"DH_check_params_ex");
    }
    public static int DH_check_params_ex ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_check_params_ex$MH, "DH_check_params_ex");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_check_ex$MH,"DH_check_ex");
    }
    public static int DH_check_ex ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_check_ex$MH, "DH_check_ex");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check_pub_key_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_check_pub_key_ex$MH,"DH_check_pub_key_ex");
    }
    public static int DH_check_pub_key_ex ( Addressable dh,  Addressable pub_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_check_pub_key_ex$MH, "DH_check_pub_key_ex");
        try {
            return (int)mh$.invokeExact(dh, pub_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check_params$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_check_params$MH,"DH_check_params");
    }
    public static int DH_check_params ( Addressable dh,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_check_params$MH, "DH_check_params");
        try {
            return (int)mh$.invokeExact(dh, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check$MH() {
        return RuntimeHelper.requireNonNull(constants$449.DH_check$MH,"DH_check");
    }
    public static int DH_check ( Addressable dh,  Addressable codes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.DH_check$MH, "DH_check");
        try {
            return (int)mh$.invokeExact(dh, codes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_check_pub_key$MH() {
        return RuntimeHelper.requireNonNull(constants$450.DH_check_pub_key$MH,"DH_check_pub_key");
    }
    public static int DH_check_pub_key ( Addressable dh,  Addressable pub_key,  Addressable codes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.DH_check_pub_key$MH, "DH_check_pub_key");
        try {
            return (int)mh$.invokeExact(dh, pub_key, codes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_generate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$450.DH_generate_key$MH,"DH_generate_key");
    }
    public static int DH_generate_key ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.DH_generate_key$MH, "DH_generate_key");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_compute_key$MH() {
        return RuntimeHelper.requireNonNull(constants$450.DH_compute_key$MH,"DH_compute_key");
    }
    public static int DH_compute_key ( Addressable key,  Addressable pub_key,  Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.DH_compute_key$MH, "DH_compute_key");
        try {
            return (int)mh$.invokeExact(key, pub_key, dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_compute_key_padded$MH() {
        return RuntimeHelper.requireNonNull(constants$450.DH_compute_key_padded$MH,"DH_compute_key_padded");
    }
    public static int DH_compute_key_padded ( Addressable key,  Addressable pub_key,  Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.DH_compute_key_padded$MH, "DH_compute_key_padded");
        try {
            return (int)mh$.invokeExact(key, pub_key, dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DHparams$MH() {
        return RuntimeHelper.requireNonNull(constants$450.d2i_DHparams$MH,"d2i_DHparams");
    }
    public static MemoryAddress d2i_DHparams ( Addressable a,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.d2i_DHparams$MH, "d2i_DHparams");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DHparams$MH() {
        return RuntimeHelper.requireNonNull(constants$450.i2d_DHparams$MH,"i2d_DHparams");
    }
    public static int i2d_DHparams ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$450.i2d_DHparams$MH, "i2d_DHparams");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DHxparams$MH() {
        return RuntimeHelper.requireNonNull(constants$451.d2i_DHxparams$MH,"d2i_DHxparams");
    }
    public static MemoryAddress d2i_DHxparams ( Addressable a,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.d2i_DHxparams$MH, "d2i_DHxparams");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DHxparams$MH() {
        return RuntimeHelper.requireNonNull(constants$451.i2d_DHxparams$MH,"i2d_DHxparams");
    }
    public static int i2d_DHxparams ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.i2d_DHxparams$MH, "i2d_DHxparams");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DHparams_print_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$451.DHparams_print_fp$MH,"DHparams_print_fp");
    }
    public static int DHparams_print_fp ( Addressable fp,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.DHparams_print_fp$MH, "DHparams_print_fp");
        try {
            return (int)mh$.invokeExact(fp, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DHparams_print$MH() {
        return RuntimeHelper.requireNonNull(constants$451.DHparams_print$MH,"DHparams_print");
    }
    public static int DHparams_print ( Addressable bp,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.DHparams_print$MH, "DHparams_print");
        try {
            return (int)mh$.invokeExact(bp, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_1024_160$MH() {
        return RuntimeHelper.requireNonNull(constants$451.DH_get_1024_160$MH,"DH_get_1024_160");
    }
    public static MemoryAddress DH_get_1024_160 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.DH_get_1024_160$MH, "DH_get_1024_160");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_2048_224$MH() {
        return RuntimeHelper.requireNonNull(constants$451.DH_get_2048_224$MH,"DH_get_2048_224");
    }
    public static MemoryAddress DH_get_2048_224 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$451.DH_get_2048_224$MH, "DH_get_2048_224");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_2048_256$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_get_2048_256$MH,"DH_get_2048_256");
    }
    public static MemoryAddress DH_get_2048_256 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_get_2048_256$MH, "DH_get_2048_256");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_new_by_nid$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_new_by_nid$MH,"DH_new_by_nid");
    }
    public static MemoryAddress DH_new_by_nid ( int nid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_new_by_nid$MH, "DH_new_by_nid");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_nid$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_get_nid$MH,"DH_get_nid");
    }
    public static int DH_get_nid ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_get_nid$MH, "DH_get_nid");
        try {
            return (int)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_KDF_X9_42$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_KDF_X9_42$MH,"DH_KDF_X9_42");
    }
    public static int DH_KDF_X9_42 ( Addressable out,  long outlen,  Addressable Z,  long Zlen,  Addressable key_oid,  Addressable ukm,  long ukmlen,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_KDF_X9_42$MH, "DH_KDF_X9_42");
        try {
            return (int)mh$.invokeExact(out, outlen, Z, Zlen, key_oid, ukm, ukmlen, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_pqg$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_get0_pqg$MH,"DH_get0_pqg");
    }
    public static void DH_get0_pqg ( Addressable dh,  Addressable p,  Addressable q,  Addressable g) {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_get0_pqg$MH, "DH_get0_pqg");
        try {
            mh$.invokeExact(dh, p, q, g);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set0_pqg$MH() {
        return RuntimeHelper.requireNonNull(constants$452.DH_set0_pqg$MH,"DH_set0_pqg");
    }
    public static int DH_set0_pqg ( Addressable dh,  Addressable p,  Addressable q,  Addressable g) {
        var mh$ = RuntimeHelper.requireNonNull(constants$452.DH_set0_pqg$MH, "DH_set0_pqg");
        try {
            return (int)mh$.invokeExact(dh, p, q, g);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_key$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_get0_key$MH,"DH_get0_key");
    }
    public static void DH_get0_key ( Addressable dh,  Addressable pub_key,  Addressable priv_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_get0_key$MH, "DH_get0_key");
        try {
            mh$.invokeExact(dh, pub_key, priv_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set0_key$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_set0_key$MH,"DH_set0_key");
    }
    public static int DH_set0_key ( Addressable dh,  Addressable pub_key,  Addressable priv_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_set0_key$MH, "DH_set0_key");
        try {
            return (int)mh$.invokeExact(dh, pub_key, priv_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_p$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_get0_p$MH,"DH_get0_p");
    }
    public static MemoryAddress DH_get0_p ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_get0_p$MH, "DH_get0_p");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_q$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_get0_q$MH,"DH_get0_q");
    }
    public static MemoryAddress DH_get0_q ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_get0_q$MH, "DH_get0_q");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_g$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_get0_g$MH,"DH_get0_g");
    }
    public static MemoryAddress DH_get0_g ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_get0_g$MH, "DH_get0_g");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_priv_key$MH() {
        return RuntimeHelper.requireNonNull(constants$453.DH_get0_priv_key$MH,"DH_get0_priv_key");
    }
    public static MemoryAddress DH_get0_priv_key ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$453.DH_get0_priv_key$MH, "DH_get0_priv_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_pub_key$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_get0_pub_key$MH,"DH_get0_pub_key");
    }
    public static MemoryAddress DH_get0_pub_key ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_get0_pub_key$MH, "DH_get0_pub_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_clear_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_clear_flags$MH,"DH_clear_flags");
    }
    public static void DH_clear_flags ( Addressable dh,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_clear_flags$MH, "DH_clear_flags");
        try {
            mh$.invokeExact(dh, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_test_flags$MH,"DH_test_flags");
    }
    public static int DH_test_flags ( Addressable dh,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_test_flags$MH, "DH_test_flags");
        try {
            return (int)mh$.invokeExact(dh, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_set_flags$MH,"DH_set_flags");
    }
    public static void DH_set_flags ( Addressable dh,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_set_flags$MH, "DH_set_flags");
        try {
            mh$.invokeExact(dh, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get0_engine$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_get0_engine$MH,"DH_get0_engine");
    }
    public static MemoryAddress DH_get0_engine ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_get0_engine$MH, "DH_get0_engine");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$454.DH_get_length$MH,"DH_get_length");
    }
    public static long DH_get_length ( Addressable dh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$454.DH_get_length$MH, "DH_get_length");
        try {
            return (long)mh$.invokeExact(dh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_set_length$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_set_length$MH,"DH_set_length");
    }
    public static int DH_set_length ( Addressable dh,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_set_length$MH, "DH_set_length");
        try {
            return (int)mh$.invokeExact(dh, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_new$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_meth_new$MH,"DH_meth_new");
    }
    public static MemoryAddress DH_meth_new ( Addressable name,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_meth_new$MH, "DH_meth_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_free$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_meth_free$MH,"DH_meth_free");
    }
    public static void DH_meth_free ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_meth_free$MH, "DH_meth_free");
        try {
            mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_meth_dup$MH,"DH_meth_dup");
    }
    public static MemoryAddress DH_meth_dup ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_meth_dup$MH, "DH_meth_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get0_name$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_meth_get0_name$MH,"DH_meth_get0_name");
    }
    public static MemoryAddress DH_meth_get0_name ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_meth_get0_name$MH, "DH_meth_get0_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set1_name$MH() {
        return RuntimeHelper.requireNonNull(constants$455.DH_meth_set1_name$MH,"DH_meth_set1_name");
    }
    public static int DH_meth_set1_name ( Addressable dhm,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$455.DH_meth_set1_name$MH, "DH_meth_set1_name");
        try {
            return (int)mh$.invokeExact(dhm, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$456.DH_meth_get_flags$MH,"DH_meth_get_flags");
    }
    public static int DH_meth_get_flags ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$456.DH_meth_get_flags$MH, "DH_meth_get_flags");
        try {
            return (int)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$456.DH_meth_set_flags$MH,"DH_meth_set_flags");
    }
    public static int DH_meth_set_flags ( Addressable dhm,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$456.DH_meth_set_flags$MH, "DH_meth_set_flags");
        try {
            return (int)mh$.invokeExact(dhm, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$456.DH_meth_get0_app_data$MH,"DH_meth_get0_app_data");
    }
    public static MemoryAddress DH_meth_get0_app_data ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$456.DH_meth_get0_app_data$MH, "DH_meth_get0_app_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$456.DH_meth_set0_app_data$MH,"DH_meth_set0_app_data");
    }
    public static int DH_meth_set0_app_data ( Addressable dhm,  Addressable app_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$456.DH_meth_set0_app_data$MH, "DH_meth_set0_app_data");
        try {
            return (int)mh$.invokeExact(dhm, app_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_generate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$456.DH_meth_get_generate_key$MH,"DH_meth_get_generate_key");
    }
    public static MemoryAddress DH_meth_get_generate_key ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$456.DH_meth_get_generate_key$MH, "DH_meth_get_generate_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_generate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$457.DH_meth_set_generate_key$MH,"DH_meth_set_generate_key");
    }
    public static int DH_meth_set_generate_key ( Addressable dhm,  Addressable generate_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$457.DH_meth_set_generate_key$MH, "DH_meth_set_generate_key");
        try {
            return (int)mh$.invokeExact(dhm, generate_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_compute_key$MH() {
        return RuntimeHelper.requireNonNull(constants$457.DH_meth_get_compute_key$MH,"DH_meth_get_compute_key");
    }
    public static MemoryAddress DH_meth_get_compute_key ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$457.DH_meth_get_compute_key$MH, "DH_meth_get_compute_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_compute_key$MH() {
        return RuntimeHelper.requireNonNull(constants$457.DH_meth_set_compute_key$MH,"DH_meth_set_compute_key");
    }
    public static int DH_meth_set_compute_key ( Addressable dhm,  Addressable compute_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$457.DH_meth_set_compute_key$MH, "DH_meth_set_compute_key");
        try {
            return (int)mh$.invokeExact(dhm, compute_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$458.DH_meth_get_bn_mod_exp$MH,"DH_meth_get_bn_mod_exp");
    }
    public static MemoryAddress DH_meth_get_bn_mod_exp ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$458.DH_meth_get_bn_mod_exp$MH, "DH_meth_get_bn_mod_exp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$458.DH_meth_set_bn_mod_exp$MH,"DH_meth_set_bn_mod_exp");
    }
    public static int DH_meth_set_bn_mod_exp ( Addressable dhm,  Addressable bn_mod_exp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$458.DH_meth_set_bn_mod_exp$MH, "DH_meth_set_bn_mod_exp");
        try {
            return (int)mh$.invokeExact(dhm, bn_mod_exp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_init$MH() {
        return RuntimeHelper.requireNonNull(constants$458.DH_meth_get_init$MH,"DH_meth_get_init");
    }
    public static MemoryAddress DH_meth_get_init ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$458.DH_meth_get_init$MH, "DH_meth_get_init");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_init$MH() {
        return RuntimeHelper.requireNonNull(constants$459.DH_meth_set_init$MH,"DH_meth_set_init");
    }
    public static int DH_meth_set_init ( Addressable dhm,  Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$459.DH_meth_set_init$MH, "DH_meth_set_init");
        try {
            return (int)mh$.invokeExact(dhm, init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$459.DH_meth_get_finish$MH,"DH_meth_get_finish");
    }
    public static MemoryAddress DH_meth_get_finish ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$459.DH_meth_get_finish$MH, "DH_meth_get_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$459.DH_meth_set_finish$MH,"DH_meth_set_finish");
    }
    public static int DH_meth_set_finish ( Addressable dhm,  Addressable finish) {
        var mh$ = RuntimeHelper.requireNonNull(constants$459.DH_meth_set_finish$MH, "DH_meth_set_finish");
        try {
            return (int)mh$.invokeExact(dhm, finish);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_get_generate_params$MH() {
        return RuntimeHelper.requireNonNull(constants$460.DH_meth_get_generate_params$MH,"DH_meth_get_generate_params");
    }
    public static MemoryAddress DH_meth_get_generate_params ( Addressable dhm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$460.DH_meth_get_generate_params$MH, "DH_meth_get_generate_params");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dhm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DH_meth_set_generate_params$MH() {
        return RuntimeHelper.requireNonNull(constants$460.DH_meth_set_generate_params$MH,"DH_meth_set_generate_params");
    }
    public static int DH_meth_set_generate_params ( Addressable dhm,  Addressable generate_params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$460.DH_meth_set_generate_params$MH, "DH_meth_set_generate_params");
        try {
            return (int)mh$.invokeExact(dhm, generate_params);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ERR_load_DSA_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$460.ERR_load_DSA_strings$MH,"ERR_load_DSA_strings");
    }
    public static int ERR_load_DSA_strings () {
        var mh$ = RuntimeHelper.requireNonNull(constants$460.ERR_load_DSA_strings$MH, "ERR_load_DSA_strings");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSAparams_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$460.DSAparams_dup$MH,"DSAparams_dup");
    }
    public static MemoryAddress DSAparams_dup ( Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$460.DSAparams_dup$MH, "DSAparams_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_SIG_new$MH() {
        return RuntimeHelper.requireNonNull(constants$461.DSA_SIG_new$MH,"DSA_SIG_new");
    }
    public static MemoryAddress DSA_SIG_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.DSA_SIG_new$MH, "DSA_SIG_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_SIG_free$MH() {
        return RuntimeHelper.requireNonNull(constants$461.DSA_SIG_free$MH,"DSA_SIG_free");
    }
    public static void DSA_SIG_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.DSA_SIG_free$MH, "DSA_SIG_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DSA_SIG$MH() {
        return RuntimeHelper.requireNonNull(constants$461.i2d_DSA_SIG$MH,"i2d_DSA_SIG");
    }
    public static int i2d_DSA_SIG ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.i2d_DSA_SIG$MH, "i2d_DSA_SIG");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DSA_SIG$MH() {
        return RuntimeHelper.requireNonNull(constants$461.d2i_DSA_SIG$MH,"d2i_DSA_SIG");
    }
    public static MemoryAddress d2i_DSA_SIG ( Addressable v,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.d2i_DSA_SIG$MH, "d2i_DSA_SIG");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(v, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_SIG_get0$MH() {
        return RuntimeHelper.requireNonNull(constants$461.DSA_SIG_get0$MH,"DSA_SIG_get0");
    }
    public static void DSA_SIG_get0 ( Addressable sig,  Addressable pr,  Addressable ps) {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.DSA_SIG_get0$MH, "DSA_SIG_get0");
        try {
            mh$.invokeExact(sig, pr, ps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_SIG_set0$MH() {
        return RuntimeHelper.requireNonNull(constants$461.DSA_SIG_set0$MH,"DSA_SIG_set0");
    }
    public static int DSA_SIG_set0 ( Addressable sig,  Addressable r,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$461.DSA_SIG_set0$MH, "DSA_SIG_set0");
        try {
            return (int)mh$.invokeExact(sig, r, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_do_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_do_sign$MH,"DSA_do_sign");
    }
    public static MemoryAddress DSA_do_sign ( Addressable dgst,  int dlen,  Addressable dsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_do_sign$MH, "DSA_do_sign");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dgst, dlen, dsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_do_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_do_verify$MH,"DSA_do_verify");
    }
    public static int DSA_do_verify ( Addressable dgst,  int dgst_len,  Addressable sig,  Addressable dsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_do_verify$MH, "DSA_do_verify");
        try {
            return (int)mh$.invokeExact(dgst, dgst_len, sig, dsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_OpenSSL$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_OpenSSL$MH,"DSA_OpenSSL");
    }
    public static MemoryAddress DSA_OpenSSL () {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_OpenSSL$MH, "DSA_OpenSSL");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_set_default_method$MH,"DSA_set_default_method");
    }
    public static void DSA_set_default_method ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_set_default_method$MH, "DSA_set_default_method");
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_get_default_method$MH,"DSA_get_default_method");
    }
    public static MemoryAddress DSA_get_default_method () {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_get_default_method$MH, "DSA_get_default_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set_method$MH() {
        return RuntimeHelper.requireNonNull(constants$462.DSA_set_method$MH,"DSA_set_method");
    }
    public static int DSA_set_method ( Addressable dsa,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$462.DSA_set_method$MH, "DSA_set_method");
        try {
            return (int)mh$.invokeExact(dsa, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get_method$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_get_method$MH,"DSA_get_method");
    }
    public static MemoryAddress DSA_get_method ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_get_method$MH, "DSA_get_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_new$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_new$MH,"DSA_new");
    }
    public static MemoryAddress DSA_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_new$MH, "DSA_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_new_method$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_new_method$MH,"DSA_new_method");
    }
    public static MemoryAddress DSA_new_method ( Addressable engine) {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_new_method$MH, "DSA_new_method");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(engine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_free$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_free$MH,"DSA_free");
    }
    public static void DSA_free ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_free$MH, "DSA_free");
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_up_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_up_ref$MH,"DSA_up_ref");
    }
    public static int DSA_up_ref ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_up_ref$MH, "DSA_up_ref");
        try {
            return (int)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_size$MH() {
        return RuntimeHelper.requireNonNull(constants$463.DSA_size$MH,"DSA_size");
    }
    public static int DSA_size ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$463.DSA_size$MH, "DSA_size");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_bits$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_bits$MH,"DSA_bits");
    }
    public static int DSA_bits ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_bits$MH, "DSA_bits");
        try {
            return (int)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_security_bits$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_security_bits$MH,"DSA_security_bits");
    }
    public static int DSA_security_bits ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_security_bits$MH, "DSA_security_bits");
        try {
            return (int)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_sign_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_sign_setup$MH,"DSA_sign_setup");
    }
    public static int DSA_sign_setup ( Addressable dsa,  Addressable ctx_in,  Addressable kinvp,  Addressable rp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_sign_setup$MH, "DSA_sign_setup");
        try {
            return (int)mh$.invokeExact(dsa, ctx_in, kinvp, rp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_sign$MH,"DSA_sign");
    }
    public static int DSA_sign ( int type,  Addressable dgst,  int dlen,  Addressable sig,  Addressable siglen,  Addressable dsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_sign$MH, "DSA_sign");
        try {
            return (int)mh$.invokeExact(type, dgst, dlen, sig, siglen, dsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_verify$MH,"DSA_verify");
    }
    public static int DSA_verify ( int type,  Addressable dgst,  int dgst_len,  Addressable sigbuf,  int siglen,  Addressable dsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_verify$MH, "DSA_verify");
        try {
            return (int)mh$.invokeExact(type, dgst, dgst_len, sigbuf, siglen, dsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$464.DSA_set_ex_data$MH,"DSA_set_ex_data");
    }
    public static int DSA_set_ex_data ( Addressable d,  int idx,  Addressable arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$464.DSA_set_ex_data$MH, "DSA_set_ex_data");
        try {
            return (int)mh$.invokeExact(d, idx, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$465.DSA_get_ex_data$MH,"DSA_get_ex_data");
    }
    public static MemoryAddress DSA_get_ex_data ( Addressable d,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$465.DSA_get_ex_data$MH, "DSA_get_ex_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DSAPublicKey$MH() {
        return RuntimeHelper.requireNonNull(constants$465.d2i_DSAPublicKey$MH,"d2i_DSAPublicKey");
    }
    public static MemoryAddress d2i_DSAPublicKey ( Addressable a,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$465.d2i_DSAPublicKey$MH, "d2i_DSAPublicKey");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DSAPrivateKey$MH() {
        return RuntimeHelper.requireNonNull(constants$465.d2i_DSAPrivateKey$MH,"d2i_DSAPrivateKey");
    }
    public static MemoryAddress d2i_DSAPrivateKey ( Addressable a,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$465.d2i_DSAPrivateKey$MH, "d2i_DSAPrivateKey");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_DSAparams$MH() {
        return RuntimeHelper.requireNonNull(constants$465.d2i_DSAparams$MH,"d2i_DSAparams");
    }
    public static MemoryAddress d2i_DSAparams ( Addressable a,  Addressable pp,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$465.d2i_DSAparams$MH, "d2i_DSAparams");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, pp, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_generate_parameters$MH() {
        return RuntimeHelper.requireNonNull(constants$466.DSA_generate_parameters$MH,"DSA_generate_parameters");
    }
    public static MemoryAddress DSA_generate_parameters ( int bits,  Addressable seed,  int seed_len,  Addressable counter_ret,  Addressable h_ret,  Addressable callback,  Addressable cb_arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.DSA_generate_parameters$MH, "DSA_generate_parameters");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(bits, seed, seed_len, counter_ret, h_ret, callback, cb_arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_generate_parameters_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$466.DSA_generate_parameters_ex$MH,"DSA_generate_parameters_ex");
    }
    public static int DSA_generate_parameters_ex ( Addressable dsa,  int bits,  Addressable seed,  int seed_len,  Addressable counter_ret,  Addressable h_ret,  Addressable cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.DSA_generate_parameters_ex$MH, "DSA_generate_parameters_ex");
        try {
            return (int)mh$.invokeExact(dsa, bits, seed, seed_len, counter_ret, h_ret, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_generate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$466.DSA_generate_key$MH,"DSA_generate_key");
    }
    public static int DSA_generate_key ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.DSA_generate_key$MH, "DSA_generate_key");
        try {
            return (int)mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DSAPublicKey$MH() {
        return RuntimeHelper.requireNonNull(constants$466.i2d_DSAPublicKey$MH,"i2d_DSAPublicKey");
    }
    public static int i2d_DSAPublicKey ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.i2d_DSAPublicKey$MH, "i2d_DSAPublicKey");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DSAPrivateKey$MH() {
        return RuntimeHelper.requireNonNull(constants$466.i2d_DSAPrivateKey$MH,"i2d_DSAPrivateKey");
    }
    public static int i2d_DSAPrivateKey ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.i2d_DSAPrivateKey$MH, "i2d_DSAPrivateKey");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_DSAparams$MH() {
        return RuntimeHelper.requireNonNull(constants$466.i2d_DSAparams$MH,"i2d_DSAparams");
    }
    public static int i2d_DSAparams ( Addressable a,  Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$466.i2d_DSAparams$MH, "i2d_DSAparams");
        try {
            return (int)mh$.invokeExact(a, pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSAparams_print$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSAparams_print$MH,"DSAparams_print");
    }
    public static int DSAparams_print ( Addressable bp,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSAparams_print$MH, "DSAparams_print");
        try {
            return (int)mh$.invokeExact(bp, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_print$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSA_print$MH,"DSA_print");
    }
    public static int DSA_print ( Addressable bp,  Addressable x,  int off) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSA_print$MH, "DSA_print");
        try {
            return (int)mh$.invokeExact(bp, x, off);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSAparams_print_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSAparams_print_fp$MH,"DSAparams_print_fp");
    }
    public static int DSAparams_print_fp ( Addressable fp,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSAparams_print_fp$MH, "DSAparams_print_fp");
        try {
            return (int)mh$.invokeExact(fp, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_print_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSA_print_fp$MH,"DSA_print_fp");
    }
    public static int DSA_print_fp ( Addressable bp,  Addressable x,  int off) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSA_print_fp$MH, "DSA_print_fp");
        try {
            return (int)mh$.invokeExact(bp, x, off);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_dup_DH$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSA_dup_DH$MH,"DSA_dup_DH");
    }
    public static MemoryAddress DSA_dup_DH ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSA_dup_DH$MH, "DSA_dup_DH");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_pqg$MH() {
        return RuntimeHelper.requireNonNull(constants$467.DSA_get0_pqg$MH,"DSA_get0_pqg");
    }
    public static void DSA_get0_pqg ( Addressable d,  Addressable p,  Addressable q,  Addressable g) {
        var mh$ = RuntimeHelper.requireNonNull(constants$467.DSA_get0_pqg$MH, "DSA_get0_pqg");
        try {
            mh$.invokeExact(d, p, q, g);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set0_pqg$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_set0_pqg$MH,"DSA_set0_pqg");
    }
    public static int DSA_set0_pqg ( Addressable d,  Addressable p,  Addressable q,  Addressable g) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_set0_pqg$MH, "DSA_set0_pqg");
        try {
            return (int)mh$.invokeExact(d, p, q, g);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_key$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_get0_key$MH,"DSA_get0_key");
    }
    public static void DSA_get0_key ( Addressable d,  Addressable pub_key,  Addressable priv_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_get0_key$MH, "DSA_get0_key");
        try {
            mh$.invokeExact(d, pub_key, priv_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set0_key$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_set0_key$MH,"DSA_set0_key");
    }
    public static int DSA_set0_key ( Addressable d,  Addressable pub_key,  Addressable priv_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_set0_key$MH, "DSA_set0_key");
        try {
            return (int)mh$.invokeExact(d, pub_key, priv_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_p$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_get0_p$MH,"DSA_get0_p");
    }
    public static MemoryAddress DSA_get0_p ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_get0_p$MH, "DSA_get0_p");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_q$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_get0_q$MH,"DSA_get0_q");
    }
    public static MemoryAddress DSA_get0_q ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_get0_q$MH, "DSA_get0_q");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_g$MH() {
        return RuntimeHelper.requireNonNull(constants$468.DSA_get0_g$MH,"DSA_get0_g");
    }
    public static MemoryAddress DSA_get0_g ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$468.DSA_get0_g$MH, "DSA_get0_g");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_pub_key$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_get0_pub_key$MH,"DSA_get0_pub_key");
    }
    public static MemoryAddress DSA_get0_pub_key ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_get0_pub_key$MH, "DSA_get0_pub_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_priv_key$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_get0_priv_key$MH,"DSA_get0_priv_key");
    }
    public static MemoryAddress DSA_get0_priv_key ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_get0_priv_key$MH, "DSA_get0_priv_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_clear_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_clear_flags$MH,"DSA_clear_flags");
    }
    public static void DSA_clear_flags ( Addressable d,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_clear_flags$MH, "DSA_clear_flags");
        try {
            mh$.invokeExact(d, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_test_flags$MH,"DSA_test_flags");
    }
    public static int DSA_test_flags ( Addressable d,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_test_flags$MH, "DSA_test_flags");
        try {
            return (int)mh$.invokeExact(d, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_set_flags$MH,"DSA_set_flags");
    }
    public static void DSA_set_flags ( Addressable d,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_set_flags$MH, "DSA_set_flags");
        try {
            mh$.invokeExact(d, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_get0_engine$MH() {
        return RuntimeHelper.requireNonNull(constants$469.DSA_get0_engine$MH,"DSA_get0_engine");
    }
    public static MemoryAddress DSA_get0_engine ( Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$469.DSA_get0_engine$MH, "DSA_get0_engine");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_new$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_new$MH,"DSA_meth_new");
    }
    public static MemoryAddress DSA_meth_new ( Addressable name,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_new$MH, "DSA_meth_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_free$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_free$MH,"DSA_meth_free");
    }
    public static void DSA_meth_free ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_free$MH, "DSA_meth_free");
        try {
            mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_dup$MH,"DSA_meth_dup");
    }
    public static MemoryAddress DSA_meth_dup ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_dup$MH, "DSA_meth_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get0_name$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_get0_name$MH,"DSA_meth_get0_name");
    }
    public static MemoryAddress DSA_meth_get0_name ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_get0_name$MH, "DSA_meth_get0_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set1_name$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_set1_name$MH,"DSA_meth_set1_name");
    }
    public static int DSA_meth_set1_name ( Addressable dsam,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_set1_name$MH, "DSA_meth_set1_name");
        try {
            return (int)mh$.invokeExact(dsam, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$470.DSA_meth_get_flags$MH,"DSA_meth_get_flags");
    }
    public static int DSA_meth_get_flags ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$470.DSA_meth_get_flags$MH, "DSA_meth_get_flags");
        try {
            return (int)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$471.DSA_meth_set_flags$MH,"DSA_meth_set_flags");
    }
    public static int DSA_meth_set_flags ( Addressable dsam,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$471.DSA_meth_set_flags$MH, "DSA_meth_set_flags");
        try {
            return (int)mh$.invokeExact(dsam, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$471.DSA_meth_get0_app_data$MH,"DSA_meth_get0_app_data");
    }
    public static MemoryAddress DSA_meth_get0_app_data ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$471.DSA_meth_get0_app_data$MH, "DSA_meth_get0_app_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set0_app_data$MH() {
        return RuntimeHelper.requireNonNull(constants$471.DSA_meth_set0_app_data$MH,"DSA_meth_set0_app_data");
    }
    public static int DSA_meth_set0_app_data ( Addressable dsam,  Addressable app_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$471.DSA_meth_set0_app_data$MH, "DSA_meth_set0_app_data");
        try {
            return (int)mh$.invokeExact(dsam, app_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$471.DSA_meth_get_sign$MH,"DSA_meth_get_sign");
    }
    public static MemoryAddress DSA_meth_get_sign ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$471.DSA_meth_get_sign$MH, "DSA_meth_get_sign");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$472.DSA_meth_set_sign$MH,"DSA_meth_set_sign");
    }
    public static int DSA_meth_set_sign ( Addressable dsam,  Addressable sign) {
        var mh$ = RuntimeHelper.requireNonNull(constants$472.DSA_meth_set_sign$MH, "DSA_meth_set_sign");
        try {
            return (int)mh$.invokeExact(dsam, sign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_sign_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$472.DSA_meth_get_sign_setup$MH,"DSA_meth_get_sign_setup");
    }
    public static MemoryAddress DSA_meth_get_sign_setup ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$472.DSA_meth_get_sign_setup$MH, "DSA_meth_get_sign_setup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_sign_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$472.DSA_meth_set_sign_setup$MH,"DSA_meth_set_sign_setup");
    }
    public static int DSA_meth_set_sign_setup ( Addressable dsam,  Addressable sign_setup) {
        var mh$ = RuntimeHelper.requireNonNull(constants$472.DSA_meth_set_sign_setup$MH, "DSA_meth_set_sign_setup");
        try {
            return (int)mh$.invokeExact(dsam, sign_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$472.DSA_meth_get_verify$MH,"DSA_meth_get_verify");
    }
    public static MemoryAddress DSA_meth_get_verify ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$472.DSA_meth_get_verify$MH, "DSA_meth_get_verify");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$473.DSA_meth_set_verify$MH,"DSA_meth_set_verify");
    }
    public static int DSA_meth_set_verify ( Addressable dsam,  Addressable verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$473.DSA_meth_set_verify$MH, "DSA_meth_set_verify");
        try {
            return (int)mh$.invokeExact(dsam, verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$473.DSA_meth_get_mod_exp$MH,"DSA_meth_get_mod_exp");
    }
    public static MemoryAddress DSA_meth_get_mod_exp ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$473.DSA_meth_get_mod_exp$MH, "DSA_meth_get_mod_exp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$474.DSA_meth_set_mod_exp$MH,"DSA_meth_set_mod_exp");
    }
    public static int DSA_meth_set_mod_exp ( Addressable dsam,  Addressable mod_exp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$474.DSA_meth_set_mod_exp$MH, "DSA_meth_set_mod_exp");
        try {
            return (int)mh$.invokeExact(dsam, mod_exp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$474.DSA_meth_get_bn_mod_exp$MH,"DSA_meth_get_bn_mod_exp");
    }
    public static MemoryAddress DSA_meth_get_bn_mod_exp ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$474.DSA_meth_get_bn_mod_exp$MH, "DSA_meth_get_bn_mod_exp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_bn_mod_exp$MH() {
        return RuntimeHelper.requireNonNull(constants$474.DSA_meth_set_bn_mod_exp$MH,"DSA_meth_set_bn_mod_exp");
    }
    public static int DSA_meth_set_bn_mod_exp ( Addressable dsam,  Addressable bn_mod_exp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$474.DSA_meth_set_bn_mod_exp$MH, "DSA_meth_set_bn_mod_exp");
        try {
            return (int)mh$.invokeExact(dsam, bn_mod_exp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_init$MH() {
        return RuntimeHelper.requireNonNull(constants$474.DSA_meth_get_init$MH,"DSA_meth_get_init");
    }
    public static MemoryAddress DSA_meth_get_init ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$474.DSA_meth_get_init$MH, "DSA_meth_get_init");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_init$MH() {
        return RuntimeHelper.requireNonNull(constants$475.DSA_meth_set_init$MH,"DSA_meth_set_init");
    }
    public static int DSA_meth_set_init ( Addressable dsam,  Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$475.DSA_meth_set_init$MH, "DSA_meth_set_init");
        try {
            return (int)mh$.invokeExact(dsam, init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$475.DSA_meth_get_finish$MH,"DSA_meth_get_finish");
    }
    public static MemoryAddress DSA_meth_get_finish ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$475.DSA_meth_get_finish$MH, "DSA_meth_get_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$476.DSA_meth_set_finish$MH,"DSA_meth_set_finish");
    }
    public static int DSA_meth_set_finish ( Addressable dsam,  Addressable finish) {
        var mh$ = RuntimeHelper.requireNonNull(constants$476.DSA_meth_set_finish$MH, "DSA_meth_set_finish");
        try {
            return (int)mh$.invokeExact(dsam, finish);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_paramgen$MH() {
        return RuntimeHelper.requireNonNull(constants$476.DSA_meth_get_paramgen$MH,"DSA_meth_get_paramgen");
    }
    public static MemoryAddress DSA_meth_get_paramgen ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$476.DSA_meth_get_paramgen$MH, "DSA_meth_get_paramgen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_paramgen$MH() {
        return RuntimeHelper.requireNonNull(constants$476.DSA_meth_set_paramgen$MH,"DSA_meth_set_paramgen");
    }
    public static int DSA_meth_set_paramgen ( Addressable dsam,  Addressable paramgen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$476.DSA_meth_set_paramgen$MH, "DSA_meth_set_paramgen");
        try {
            return (int)mh$.invokeExact(dsam, paramgen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_get_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$476.DSA_meth_get_keygen$MH,"DSA_meth_get_keygen");
    }
    public static MemoryAddress DSA_meth_get_keygen ( Addressable dsam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$476.DSA_meth_get_keygen$MH, "DSA_meth_get_keygen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dsam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DSA_meth_set_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$477.DSA_meth_set_keygen$MH,"DSA_meth_set_keygen");
    }
    public static int DSA_meth_set_keygen ( Addressable dsam,  Addressable keygen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$477.DSA_meth_set_keygen$MH, "DSA_meth_set_keygen");
        try {
            return (int)mh$.invokeExact(dsam, keygen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA1_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$477.SHA1_Init$MH,"SHA1_Init");
    }
    public static int SHA1_Init ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$477.SHA1_Init$MH, "SHA1_Init");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA1_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$477.SHA1_Update$MH,"SHA1_Update");
    }
    public static int SHA1_Update ( Addressable c,  Addressable data,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$477.SHA1_Update$MH, "SHA1_Update");
        try {
            return (int)mh$.invokeExact(c, data, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA1_Final$MH() {
        return RuntimeHelper.requireNonNull(constants$477.SHA1_Final$MH,"SHA1_Final");
    }
    public static int SHA1_Final ( Addressable md,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$477.SHA1_Final$MH, "SHA1_Final");
        try {
            return (int)mh$.invokeExact(md, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA1$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA1$MH,"SHA1");
    }
    public static MemoryAddress SHA1 ( Addressable d,  long n,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA1$MH, "SHA1");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, n, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA1_Transform$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA1_Transform$MH,"SHA1_Transform");
    }
    public static void SHA1_Transform ( Addressable c,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA1_Transform$MH, "SHA1_Transform");
        try {
            mh$.invokeExact(c, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA224_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA224_Init$MH,"SHA224_Init");
    }
    public static int SHA224_Init ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA224_Init$MH, "SHA224_Init");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA224_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA224_Update$MH,"SHA224_Update");
    }
    public static int SHA224_Update ( Addressable c,  Addressable data,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA224_Update$MH, "SHA224_Update");
        try {
            return (int)mh$.invokeExact(c, data, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA224_Final$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA224_Final$MH,"SHA224_Final");
    }
    public static int SHA224_Final ( Addressable md,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA224_Final$MH, "SHA224_Final");
        try {
            return (int)mh$.invokeExact(md, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA224$MH() {
        return RuntimeHelper.requireNonNull(constants$478.SHA224$MH,"SHA224");
    }
    public static MemoryAddress SHA224 ( Addressable d,  long n,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$478.SHA224$MH, "SHA224");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, n, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA256_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA256_Init$MH,"SHA256_Init");
    }
    public static int SHA256_Init ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA256_Init$MH, "SHA256_Init");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA256_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA256_Update$MH,"SHA256_Update");
    }
    public static int SHA256_Update ( Addressable c,  Addressable data,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA256_Update$MH, "SHA256_Update");
        try {
            return (int)mh$.invokeExact(c, data, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA256_Final$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA256_Final$MH,"SHA256_Final");
    }
    public static int SHA256_Final ( Addressable md,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA256_Final$MH, "SHA256_Final");
        try {
            return (int)mh$.invokeExact(md, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA256$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA256$MH,"SHA256");
    }
    public static MemoryAddress SHA256 ( Addressable d,  long n,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA256$MH, "SHA256");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, n, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA256_Transform$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA256_Transform$MH,"SHA256_Transform");
    }
    public static void SHA256_Transform ( Addressable c,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA256_Transform$MH, "SHA256_Transform");
        try {
            mh$.invokeExact(c, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA384_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$479.SHA384_Init$MH,"SHA384_Init");
    }
    public static int SHA384_Init ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$479.SHA384_Init$MH, "SHA384_Init");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA384_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA384_Update$MH,"SHA384_Update");
    }
    public static int SHA384_Update ( Addressable c,  Addressable data,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA384_Update$MH, "SHA384_Update");
        try {
            return (int)mh$.invokeExact(c, data, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA384_Final$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA384_Final$MH,"SHA384_Final");
    }
    public static int SHA384_Final ( Addressable md,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA384_Final$MH, "SHA384_Final");
        try {
            return (int)mh$.invokeExact(md, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA384$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA384$MH,"SHA384");
    }
    public static MemoryAddress SHA384 ( Addressable d,  long n,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA384$MH, "SHA384");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, n, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA512_Init$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA512_Init$MH,"SHA512_Init");
    }
    public static int SHA512_Init ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA512_Init$MH, "SHA512_Init");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA512_Update$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA512_Update$MH,"SHA512_Update");
    }
    public static int SHA512_Update ( Addressable c,  Addressable data,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA512_Update$MH, "SHA512_Update");
        try {
            return (int)mh$.invokeExact(c, data, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA512_Final$MH() {
        return RuntimeHelper.requireNonNull(constants$480.SHA512_Final$MH,"SHA512_Final");
    }
    public static int SHA512_Final ( Addressable md,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$480.SHA512_Final$MH, "SHA512_Final");
        try {
            return (int)mh$.invokeExact(md, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA512$MH() {
        return RuntimeHelper.requireNonNull(constants$481.SHA512$MH,"SHA512");
    }
    public static MemoryAddress SHA512 ( Addressable d,  long n,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$481.SHA512$MH, "SHA512");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(d, n, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHA512_Transform$MH() {
        return RuntimeHelper.requireNonNull(constants$481.SHA512_Transform$MH,"SHA512_Transform");
    }
    public static void SHA512_Transform ( Addressable c,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$481.SHA512_Transform$MH, "SHA512_Transform");
        try {
            mh$.invokeExact(c, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ERR_load_X509_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$481.ERR_load_X509_strings$MH,"ERR_load_X509_strings");
    }
    public static int ERR_load_X509_strings () {
        var mh$ = RuntimeHelper.requireNonNull(constants$481.ERR_load_X509_strings$MH, "ERR_load_X509_strings");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_num$MH() {
        return RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_num$MH,"sk_X509_NAME_ENTRY_num");
    }
    public static int sk_X509_NAME_ENTRY_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_num$MH, "sk_X509_NAME_ENTRY_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_value$MH() {
        return RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_value$MH,"sk_X509_NAME_ENTRY_value");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_value$MH, "sk_X509_NAME_ENTRY_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_new$MH() {
        return RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_new$MH,"sk_X509_NAME_ENTRY_new");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$482.sk_X509_NAME_ENTRY_new$MH, "sk_X509_NAME_ENTRY_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_new_null$MH,"sk_X509_NAME_ENTRY_new_null");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_new_null$MH, "sk_X509_NAME_ENTRY_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_new_reserve$MH,"sk_X509_NAME_ENTRY_new_reserve");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_new_reserve$MH, "sk_X509_NAME_ENTRY_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_reserve$MH,"sk_X509_NAME_ENTRY_reserve");
    }
    public static int sk_X509_NAME_ENTRY_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_reserve$MH, "sk_X509_NAME_ENTRY_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_free$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_free$MH,"sk_X509_NAME_ENTRY_free");
    }
    public static void sk_X509_NAME_ENTRY_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_free$MH, "sk_X509_NAME_ENTRY_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_zero$MH,"sk_X509_NAME_ENTRY_zero");
    }
    public static void sk_X509_NAME_ENTRY_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_zero$MH, "sk_X509_NAME_ENTRY_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_delete$MH,"sk_X509_NAME_ENTRY_delete");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$483.sk_X509_NAME_ENTRY_delete$MH, "sk_X509_NAME_ENTRY_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_delete_ptr$MH,"sk_X509_NAME_ENTRY_delete_ptr");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_delete_ptr$MH, "sk_X509_NAME_ENTRY_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_push$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_push$MH,"sk_X509_NAME_ENTRY_push");
    }
    public static int sk_X509_NAME_ENTRY_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_push$MH, "sk_X509_NAME_ENTRY_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_unshift$MH,"sk_X509_NAME_ENTRY_unshift");
    }
    public static int sk_X509_NAME_ENTRY_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_unshift$MH, "sk_X509_NAME_ENTRY_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_pop$MH,"sk_X509_NAME_ENTRY_pop");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_pop$MH, "sk_X509_NAME_ENTRY_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_shift$MH,"sk_X509_NAME_ENTRY_shift");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_shift$MH, "sk_X509_NAME_ENTRY_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_pop_free$MH,"sk_X509_NAME_ENTRY_pop_free");
    }
    public static void sk_X509_NAME_ENTRY_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$484.sk_X509_NAME_ENTRY_pop_free$MH, "sk_X509_NAME_ENTRY_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_insert$MH,"sk_X509_NAME_ENTRY_insert");
    }
    public static int sk_X509_NAME_ENTRY_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_insert$MH, "sk_X509_NAME_ENTRY_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_set$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_set$MH,"sk_X509_NAME_ENTRY_set");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_set$MH, "sk_X509_NAME_ENTRY_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_find$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_find$MH,"sk_X509_NAME_ENTRY_find");
    }
    public static int sk_X509_NAME_ENTRY_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_find$MH, "sk_X509_NAME_ENTRY_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_find_ex$MH,"sk_X509_NAME_ENTRY_find_ex");
    }
    public static int sk_X509_NAME_ENTRY_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_find_ex$MH, "sk_X509_NAME_ENTRY_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_sort$MH,"sk_X509_NAME_ENTRY_sort");
    }
    public static void sk_X509_NAME_ENTRY_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_sort$MH, "sk_X509_NAME_ENTRY_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_is_sorted$MH,"sk_X509_NAME_ENTRY_is_sorted");
    }
    public static int sk_X509_NAME_ENTRY_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$485.sk_X509_NAME_ENTRY_is_sorted$MH, "sk_X509_NAME_ENTRY_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_dup$MH,"sk_X509_NAME_ENTRY_dup");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_dup$MH, "sk_X509_NAME_ENTRY_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_deep_copy$MH,"sk_X509_NAME_ENTRY_deep_copy");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_deep_copy$MH, "sk_X509_NAME_ENTRY_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_ENTRY_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_set_cmp_func$MH,"sk_X509_NAME_ENTRY_set_cmp_func");
    }
    public static MemoryAddress sk_X509_NAME_ENTRY_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$486.sk_X509_NAME_ENTRY_set_cmp_func$MH, "sk_X509_NAME_ENTRY_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_num$MH() {
        return RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_num$MH,"sk_X509_NAME_num");
    }
    public static int sk_X509_NAME_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_num$MH, "sk_X509_NAME_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_value$MH() {
        return RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_value$MH,"sk_X509_NAME_value");
    }
    public static MemoryAddress sk_X509_NAME_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_value$MH, "sk_X509_NAME_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_new$MH() {
        return RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_new$MH,"sk_X509_NAME_new");
    }
    public static MemoryAddress sk_X509_NAME_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$487.sk_X509_NAME_new$MH, "sk_X509_NAME_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_new_null$MH,"sk_X509_NAME_new_null");
    }
    public static MemoryAddress sk_X509_NAME_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_new_null$MH, "sk_X509_NAME_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_new_reserve$MH,"sk_X509_NAME_new_reserve");
    }
    public static MemoryAddress sk_X509_NAME_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_new_reserve$MH, "sk_X509_NAME_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_reserve$MH,"sk_X509_NAME_reserve");
    }
    public static int sk_X509_NAME_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_reserve$MH, "sk_X509_NAME_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_free$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_free$MH,"sk_X509_NAME_free");
    }
    public static void sk_X509_NAME_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_free$MH, "sk_X509_NAME_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_zero$MH,"sk_X509_NAME_zero");
    }
    public static void sk_X509_NAME_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_zero$MH, "sk_X509_NAME_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_delete$MH,"sk_X509_NAME_delete");
    }
    public static MemoryAddress sk_X509_NAME_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$488.sk_X509_NAME_delete$MH, "sk_X509_NAME_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_delete_ptr$MH,"sk_X509_NAME_delete_ptr");
    }
    public static MemoryAddress sk_X509_NAME_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_delete_ptr$MH, "sk_X509_NAME_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_push$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_push$MH,"sk_X509_NAME_push");
    }
    public static int sk_X509_NAME_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_push$MH, "sk_X509_NAME_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_unshift$MH,"sk_X509_NAME_unshift");
    }
    public static int sk_X509_NAME_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_unshift$MH, "sk_X509_NAME_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_pop$MH,"sk_X509_NAME_pop");
    }
    public static MemoryAddress sk_X509_NAME_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_pop$MH, "sk_X509_NAME_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_shift$MH,"sk_X509_NAME_shift");
    }
    public static MemoryAddress sk_X509_NAME_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_shift$MH, "sk_X509_NAME_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_pop_free$MH,"sk_X509_NAME_pop_free");
    }
    public static void sk_X509_NAME_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$489.sk_X509_NAME_pop_free$MH, "sk_X509_NAME_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_insert$MH,"sk_X509_NAME_insert");
    }
    public static int sk_X509_NAME_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_insert$MH, "sk_X509_NAME_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_set$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_set$MH,"sk_X509_NAME_set");
    }
    public static MemoryAddress sk_X509_NAME_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_set$MH, "sk_X509_NAME_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_find$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_find$MH,"sk_X509_NAME_find");
    }
    public static int sk_X509_NAME_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_find$MH, "sk_X509_NAME_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_find_ex$MH,"sk_X509_NAME_find_ex");
    }
    public static int sk_X509_NAME_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_find_ex$MH, "sk_X509_NAME_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_sort$MH,"sk_X509_NAME_sort");
    }
    public static void sk_X509_NAME_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_sort$MH, "sk_X509_NAME_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_is_sorted$MH,"sk_X509_NAME_is_sorted");
    }
    public static int sk_X509_NAME_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$490.sk_X509_NAME_is_sorted$MH, "sk_X509_NAME_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_dup$MH,"sk_X509_NAME_dup");
    }
    public static MemoryAddress sk_X509_NAME_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_dup$MH, "sk_X509_NAME_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_deep_copy$MH,"sk_X509_NAME_deep_copy");
    }
    public static MemoryAddress sk_X509_NAME_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_deep_copy$MH, "sk_X509_NAME_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_NAME_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_set_cmp_func$MH,"sk_X509_NAME_set_cmp_func");
    }
    public static MemoryAddress sk_X509_NAME_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$491.sk_X509_NAME_set_cmp_func$MH, "sk_X509_NAME_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_num$MH() {
        return RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_num$MH,"sk_X509_EXTENSION_num");
    }
    public static int sk_X509_EXTENSION_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_num$MH, "sk_X509_EXTENSION_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_value$MH() {
        return RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_value$MH,"sk_X509_EXTENSION_value");
    }
    public static MemoryAddress sk_X509_EXTENSION_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_value$MH, "sk_X509_EXTENSION_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_new$MH() {
        return RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_new$MH,"sk_X509_EXTENSION_new");
    }
    public static MemoryAddress sk_X509_EXTENSION_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$492.sk_X509_EXTENSION_new$MH, "sk_X509_EXTENSION_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_new_null$MH,"sk_X509_EXTENSION_new_null");
    }
    public static MemoryAddress sk_X509_EXTENSION_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_new_null$MH, "sk_X509_EXTENSION_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_new_reserve$MH,"sk_X509_EXTENSION_new_reserve");
    }
    public static MemoryAddress sk_X509_EXTENSION_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_new_reserve$MH, "sk_X509_EXTENSION_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_reserve$MH,"sk_X509_EXTENSION_reserve");
    }
    public static int sk_X509_EXTENSION_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_reserve$MH, "sk_X509_EXTENSION_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_free$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_free$MH,"sk_X509_EXTENSION_free");
    }
    public static void sk_X509_EXTENSION_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_free$MH, "sk_X509_EXTENSION_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_zero$MH,"sk_X509_EXTENSION_zero");
    }
    public static void sk_X509_EXTENSION_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_zero$MH, "sk_X509_EXTENSION_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_delete$MH,"sk_X509_EXTENSION_delete");
    }
    public static MemoryAddress sk_X509_EXTENSION_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$493.sk_X509_EXTENSION_delete$MH, "sk_X509_EXTENSION_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_delete_ptr$MH,"sk_X509_EXTENSION_delete_ptr");
    }
    public static MemoryAddress sk_X509_EXTENSION_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_delete_ptr$MH, "sk_X509_EXTENSION_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_push$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_push$MH,"sk_X509_EXTENSION_push");
    }
    public static int sk_X509_EXTENSION_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_push$MH, "sk_X509_EXTENSION_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_unshift$MH,"sk_X509_EXTENSION_unshift");
    }
    public static int sk_X509_EXTENSION_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_unshift$MH, "sk_X509_EXTENSION_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_pop$MH,"sk_X509_EXTENSION_pop");
    }
    public static MemoryAddress sk_X509_EXTENSION_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_pop$MH, "sk_X509_EXTENSION_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_shift$MH,"sk_X509_EXTENSION_shift");
    }
    public static MemoryAddress sk_X509_EXTENSION_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_shift$MH, "sk_X509_EXTENSION_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_pop_free$MH,"sk_X509_EXTENSION_pop_free");
    }
    public static void sk_X509_EXTENSION_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$494.sk_X509_EXTENSION_pop_free$MH, "sk_X509_EXTENSION_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_insert$MH,"sk_X509_EXTENSION_insert");
    }
    public static int sk_X509_EXTENSION_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_insert$MH, "sk_X509_EXTENSION_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_set$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_set$MH,"sk_X509_EXTENSION_set");
    }
    public static MemoryAddress sk_X509_EXTENSION_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_set$MH, "sk_X509_EXTENSION_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_find$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_find$MH,"sk_X509_EXTENSION_find");
    }
    public static int sk_X509_EXTENSION_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_find$MH, "sk_X509_EXTENSION_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_find_ex$MH,"sk_X509_EXTENSION_find_ex");
    }
    public static int sk_X509_EXTENSION_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_find_ex$MH, "sk_X509_EXTENSION_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_sort$MH,"sk_X509_EXTENSION_sort");
    }
    public static void sk_X509_EXTENSION_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_sort$MH, "sk_X509_EXTENSION_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_is_sorted$MH,"sk_X509_EXTENSION_is_sorted");
    }
    public static int sk_X509_EXTENSION_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$495.sk_X509_EXTENSION_is_sorted$MH, "sk_X509_EXTENSION_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_dup$MH,"sk_X509_EXTENSION_dup");
    }
    public static MemoryAddress sk_X509_EXTENSION_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_dup$MH, "sk_X509_EXTENSION_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_deep_copy$MH,"sk_X509_EXTENSION_deep_copy");
    }
    public static MemoryAddress sk_X509_EXTENSION_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_deep_copy$MH, "sk_X509_EXTENSION_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_EXTENSION_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_set_cmp_func$MH,"sk_X509_EXTENSION_set_cmp_func");
    }
    public static MemoryAddress sk_X509_EXTENSION_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$496.sk_X509_EXTENSION_set_cmp_func$MH, "sk_X509_EXTENSION_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_num$MH() {
        return RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_num$MH,"sk_X509_ATTRIBUTE_num");
    }
    public static int sk_X509_ATTRIBUTE_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_num$MH, "sk_X509_ATTRIBUTE_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_value$MH() {
        return RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_value$MH,"sk_X509_ATTRIBUTE_value");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_value$MH, "sk_X509_ATTRIBUTE_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_new$MH() {
        return RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_new$MH,"sk_X509_ATTRIBUTE_new");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$497.sk_X509_ATTRIBUTE_new$MH, "sk_X509_ATTRIBUTE_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_new_null$MH,"sk_X509_ATTRIBUTE_new_null");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_new_null$MH, "sk_X509_ATTRIBUTE_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_new_reserve$MH,"sk_X509_ATTRIBUTE_new_reserve");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_new_reserve$MH, "sk_X509_ATTRIBUTE_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_reserve$MH,"sk_X509_ATTRIBUTE_reserve");
    }
    public static int sk_X509_ATTRIBUTE_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_reserve$MH, "sk_X509_ATTRIBUTE_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_free$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_free$MH,"sk_X509_ATTRIBUTE_free");
    }
    public static void sk_X509_ATTRIBUTE_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_free$MH, "sk_X509_ATTRIBUTE_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_zero$MH,"sk_X509_ATTRIBUTE_zero");
    }
    public static void sk_X509_ATTRIBUTE_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_zero$MH, "sk_X509_ATTRIBUTE_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_delete$MH,"sk_X509_ATTRIBUTE_delete");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$498.sk_X509_ATTRIBUTE_delete$MH, "sk_X509_ATTRIBUTE_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_delete_ptr$MH,"sk_X509_ATTRIBUTE_delete_ptr");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_delete_ptr$MH, "sk_X509_ATTRIBUTE_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_push$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_push$MH,"sk_X509_ATTRIBUTE_push");
    }
    public static int sk_X509_ATTRIBUTE_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_push$MH, "sk_X509_ATTRIBUTE_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_unshift$MH,"sk_X509_ATTRIBUTE_unshift");
    }
    public static int sk_X509_ATTRIBUTE_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_unshift$MH, "sk_X509_ATTRIBUTE_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_pop$MH,"sk_X509_ATTRIBUTE_pop");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_pop$MH, "sk_X509_ATTRIBUTE_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_shift$MH,"sk_X509_ATTRIBUTE_shift");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_shift$MH, "sk_X509_ATTRIBUTE_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_pop_free$MH,"sk_X509_ATTRIBUTE_pop_free");
    }
    public static void sk_X509_ATTRIBUTE_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$499.sk_X509_ATTRIBUTE_pop_free$MH, "sk_X509_ATTRIBUTE_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_insert$MH,"sk_X509_ATTRIBUTE_insert");
    }
    public static int sk_X509_ATTRIBUTE_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_insert$MH, "sk_X509_ATTRIBUTE_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_set$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_set$MH,"sk_X509_ATTRIBUTE_set");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_set$MH, "sk_X509_ATTRIBUTE_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_find$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_find$MH,"sk_X509_ATTRIBUTE_find");
    }
    public static int sk_X509_ATTRIBUTE_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_find$MH, "sk_X509_ATTRIBUTE_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_find_ex$MH,"sk_X509_ATTRIBUTE_find_ex");
    }
    public static int sk_X509_ATTRIBUTE_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_find_ex$MH, "sk_X509_ATTRIBUTE_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_sort$MH,"sk_X509_ATTRIBUTE_sort");
    }
    public static void sk_X509_ATTRIBUTE_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_sort$MH, "sk_X509_ATTRIBUTE_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_is_sorted$MH,"sk_X509_ATTRIBUTE_is_sorted");
    }
    public static int sk_X509_ATTRIBUTE_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$500.sk_X509_ATTRIBUTE_is_sorted$MH, "sk_X509_ATTRIBUTE_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_dup$MH,"sk_X509_ATTRIBUTE_dup");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_dup$MH, "sk_X509_ATTRIBUTE_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_deep_copy$MH,"sk_X509_ATTRIBUTE_deep_copy");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_deep_copy$MH, "sk_X509_ATTRIBUTE_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_ATTRIBUTE_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_set_cmp_func$MH,"sk_X509_ATTRIBUTE_set_cmp_func");
    }
    public static MemoryAddress sk_X509_ATTRIBUTE_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$501.sk_X509_ATTRIBUTE_set_cmp_func$MH, "sk_X509_ATTRIBUTE_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_num$MH() {
        return RuntimeHelper.requireNonNull(constants$502.sk_X509_num$MH,"sk_X509_num");
    }
    public static int sk_X509_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.sk_X509_num$MH, "sk_X509_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_value$MH() {
        return RuntimeHelper.requireNonNull(constants$502.sk_X509_value$MH,"sk_X509_value");
    }
    public static MemoryAddress sk_X509_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.sk_X509_value$MH, "sk_X509_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_new$MH() {
        return RuntimeHelper.requireNonNull(constants$502.sk_X509_new$MH,"sk_X509_new");
    }
    public static MemoryAddress sk_X509_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.sk_X509_new$MH, "sk_X509_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_new_null$MH,"sk_X509_new_null");
    }
    public static MemoryAddress sk_X509_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_new_null$MH, "sk_X509_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_new_reserve$MH,"sk_X509_new_reserve");
    }
    public static MemoryAddress sk_X509_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_new_reserve$MH, "sk_X509_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_reserve$MH,"sk_X509_reserve");
    }
    public static int sk_X509_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_reserve$MH, "sk_X509_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_free$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_free$MH,"sk_X509_free");
    }
    public static void sk_X509_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_free$MH, "sk_X509_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_zero$MH,"sk_X509_zero");
    }
    public static void sk_X509_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_zero$MH, "sk_X509_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$503.sk_X509_delete$MH,"sk_X509_delete");
    }
    public static MemoryAddress sk_X509_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.sk_X509_delete$MH, "sk_X509_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_delete_ptr$MH,"sk_X509_delete_ptr");
    }
    public static MemoryAddress sk_X509_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_delete_ptr$MH, "sk_X509_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_push$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_push$MH,"sk_X509_push");
    }
    public static int sk_X509_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_push$MH, "sk_X509_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_unshift$MH,"sk_X509_unshift");
    }
    public static int sk_X509_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_unshift$MH, "sk_X509_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_pop$MH,"sk_X509_pop");
    }
    public static MemoryAddress sk_X509_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_pop$MH, "sk_X509_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_shift$MH,"sk_X509_shift");
    }
    public static MemoryAddress sk_X509_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_shift$MH, "sk_X509_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$504.sk_X509_pop_free$MH,"sk_X509_pop_free");
    }
    public static void sk_X509_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.sk_X509_pop_free$MH, "sk_X509_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_insert$MH,"sk_X509_insert");
    }
    public static int sk_X509_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_insert$MH, "sk_X509_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_set$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_set$MH,"sk_X509_set");
    }
    public static MemoryAddress sk_X509_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_set$MH, "sk_X509_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_find$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_find$MH,"sk_X509_find");
    }
    public static int sk_X509_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_find$MH, "sk_X509_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_find_ex$MH,"sk_X509_find_ex");
    }
    public static int sk_X509_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_find_ex$MH, "sk_X509_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_sort$MH,"sk_X509_sort");
    }
    public static void sk_X509_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_sort$MH, "sk_X509_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$505.sk_X509_is_sorted$MH,"sk_X509_is_sorted");
    }
    public static int sk_X509_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.sk_X509_is_sorted$MH, "sk_X509_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$506.sk_X509_dup$MH,"sk_X509_dup");
    }
    public static MemoryAddress sk_X509_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.sk_X509_dup$MH, "sk_X509_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$506.sk_X509_deep_copy$MH,"sk_X509_deep_copy");
    }
    public static MemoryAddress sk_X509_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.sk_X509_deep_copy$MH, "sk_X509_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$506.sk_X509_set_cmp_func$MH,"sk_X509_set_cmp_func");
    }
    public static MemoryAddress sk_X509_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.sk_X509_set_cmp_func$MH, "sk_X509_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_num$MH() {
        return RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_num$MH,"sk_X509_TRUST_num");
    }
    public static int sk_X509_TRUST_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_num$MH, "sk_X509_TRUST_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_value$MH() {
        return RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_value$MH,"sk_X509_TRUST_value");
    }
    public static MemoryAddress sk_X509_TRUST_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_value$MH, "sk_X509_TRUST_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_new$MH() {
        return RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_new$MH,"sk_X509_TRUST_new");
    }
    public static MemoryAddress sk_X509_TRUST_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.sk_X509_TRUST_new$MH, "sk_X509_TRUST_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_new_null$MH,"sk_X509_TRUST_new_null");
    }
    public static MemoryAddress sk_X509_TRUST_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_new_null$MH, "sk_X509_TRUST_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_new_reserve$MH,"sk_X509_TRUST_new_reserve");
    }
    public static MemoryAddress sk_X509_TRUST_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_new_reserve$MH, "sk_X509_TRUST_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_reserve$MH,"sk_X509_TRUST_reserve");
    }
    public static int sk_X509_TRUST_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_reserve$MH, "sk_X509_TRUST_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_free$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_free$MH,"sk_X509_TRUST_free");
    }
    public static void sk_X509_TRUST_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_free$MH, "sk_X509_TRUST_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_zero$MH,"sk_X509_TRUST_zero");
    }
    public static void sk_X509_TRUST_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_zero$MH, "sk_X509_TRUST_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_delete$MH,"sk_X509_TRUST_delete");
    }
    public static MemoryAddress sk_X509_TRUST_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.sk_X509_TRUST_delete$MH, "sk_X509_TRUST_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_delete_ptr$MH,"sk_X509_TRUST_delete_ptr");
    }
    public static MemoryAddress sk_X509_TRUST_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_delete_ptr$MH, "sk_X509_TRUST_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_push$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_push$MH,"sk_X509_TRUST_push");
    }
    public static int sk_X509_TRUST_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_push$MH, "sk_X509_TRUST_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_unshift$MH,"sk_X509_TRUST_unshift");
    }
    public static int sk_X509_TRUST_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_unshift$MH, "sk_X509_TRUST_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_pop$MH,"sk_X509_TRUST_pop");
    }
    public static MemoryAddress sk_X509_TRUST_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_pop$MH, "sk_X509_TRUST_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_shift$MH,"sk_X509_TRUST_shift");
    }
    public static MemoryAddress sk_X509_TRUST_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_shift$MH, "sk_X509_TRUST_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_pop_free$MH,"sk_X509_TRUST_pop_free");
    }
    public static void sk_X509_TRUST_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.sk_X509_TRUST_pop_free$MH, "sk_X509_TRUST_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_insert$MH,"sk_X509_TRUST_insert");
    }
    public static int sk_X509_TRUST_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_insert$MH, "sk_X509_TRUST_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_set$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_set$MH,"sk_X509_TRUST_set");
    }
    public static MemoryAddress sk_X509_TRUST_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_set$MH, "sk_X509_TRUST_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_find$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_find$MH,"sk_X509_TRUST_find");
    }
    public static int sk_X509_TRUST_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_find$MH, "sk_X509_TRUST_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_find_ex$MH,"sk_X509_TRUST_find_ex");
    }
    public static int sk_X509_TRUST_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_find_ex$MH, "sk_X509_TRUST_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_sort$MH,"sk_X509_TRUST_sort");
    }
    public static void sk_X509_TRUST_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_sort$MH, "sk_X509_TRUST_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_is_sorted$MH,"sk_X509_TRUST_is_sorted");
    }
    public static int sk_X509_TRUST_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.sk_X509_TRUST_is_sorted$MH, "sk_X509_TRUST_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_dup$MH,"sk_X509_TRUST_dup");
    }
    public static MemoryAddress sk_X509_TRUST_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_dup$MH, "sk_X509_TRUST_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_deep_copy$MH,"sk_X509_TRUST_deep_copy");
    }
    public static MemoryAddress sk_X509_TRUST_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_deep_copy$MH, "sk_X509_TRUST_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_TRUST_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_set_cmp_func$MH,"sk_X509_TRUST_set_cmp_func");
    }
    public static MemoryAddress sk_X509_TRUST_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.sk_X509_TRUST_set_cmp_func$MH, "sk_X509_TRUST_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_num$MH() {
        return RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_num$MH,"sk_X509_REVOKED_num");
    }
    public static int sk_X509_REVOKED_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_num$MH, "sk_X509_REVOKED_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_value$MH() {
        return RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_value$MH,"sk_X509_REVOKED_value");
    }
    public static MemoryAddress sk_X509_REVOKED_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_value$MH, "sk_X509_REVOKED_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_new$MH() {
        return RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_new$MH,"sk_X509_REVOKED_new");
    }
    public static MemoryAddress sk_X509_REVOKED_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.sk_X509_REVOKED_new$MH, "sk_X509_REVOKED_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_new_null$MH,"sk_X509_REVOKED_new_null");
    }
    public static MemoryAddress sk_X509_REVOKED_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_new_null$MH, "sk_X509_REVOKED_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_new_reserve$MH,"sk_X509_REVOKED_new_reserve");
    }
    public static MemoryAddress sk_X509_REVOKED_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_new_reserve$MH, "sk_X509_REVOKED_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_reserve$MH,"sk_X509_REVOKED_reserve");
    }
    public static int sk_X509_REVOKED_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_reserve$MH, "sk_X509_REVOKED_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_free$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_free$MH,"sk_X509_REVOKED_free");
    }
    public static void sk_X509_REVOKED_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_free$MH, "sk_X509_REVOKED_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_zero$MH,"sk_X509_REVOKED_zero");
    }
    public static void sk_X509_REVOKED_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_zero$MH, "sk_X509_REVOKED_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_delete$MH,"sk_X509_REVOKED_delete");
    }
    public static MemoryAddress sk_X509_REVOKED_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.sk_X509_REVOKED_delete$MH, "sk_X509_REVOKED_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_delete_ptr$MH,"sk_X509_REVOKED_delete_ptr");
    }
    public static MemoryAddress sk_X509_REVOKED_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_delete_ptr$MH, "sk_X509_REVOKED_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_push$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_push$MH,"sk_X509_REVOKED_push");
    }
    public static int sk_X509_REVOKED_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_push$MH, "sk_X509_REVOKED_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_unshift$MH,"sk_X509_REVOKED_unshift");
    }
    public static int sk_X509_REVOKED_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_unshift$MH, "sk_X509_REVOKED_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_pop$MH,"sk_X509_REVOKED_pop");
    }
    public static MemoryAddress sk_X509_REVOKED_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_pop$MH, "sk_X509_REVOKED_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_shift$MH,"sk_X509_REVOKED_shift");
    }
    public static MemoryAddress sk_X509_REVOKED_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_shift$MH, "sk_X509_REVOKED_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_pop_free$MH,"sk_X509_REVOKED_pop_free");
    }
    public static void sk_X509_REVOKED_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.sk_X509_REVOKED_pop_free$MH, "sk_X509_REVOKED_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_insert$MH,"sk_X509_REVOKED_insert");
    }
    public static int sk_X509_REVOKED_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_insert$MH, "sk_X509_REVOKED_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_set$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_set$MH,"sk_X509_REVOKED_set");
    }
    public static MemoryAddress sk_X509_REVOKED_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_set$MH, "sk_X509_REVOKED_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_find$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_find$MH,"sk_X509_REVOKED_find");
    }
    public static int sk_X509_REVOKED_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_find$MH, "sk_X509_REVOKED_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_find_ex$MH,"sk_X509_REVOKED_find_ex");
    }
    public static int sk_X509_REVOKED_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_find_ex$MH, "sk_X509_REVOKED_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_sort$MH,"sk_X509_REVOKED_sort");
    }
    public static void sk_X509_REVOKED_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_sort$MH, "sk_X509_REVOKED_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_is_sorted$MH,"sk_X509_REVOKED_is_sorted");
    }
    public static int sk_X509_REVOKED_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.sk_X509_REVOKED_is_sorted$MH, "sk_X509_REVOKED_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_dup$MH,"sk_X509_REVOKED_dup");
    }
    public static MemoryAddress sk_X509_REVOKED_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_dup$MH, "sk_X509_REVOKED_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_deep_copy$MH,"sk_X509_REVOKED_deep_copy");
    }
    public static MemoryAddress sk_X509_REVOKED_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_deep_copy$MH, "sk_X509_REVOKED_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_REVOKED_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_set_cmp_func$MH,"sk_X509_REVOKED_set_cmp_func");
    }
    public static MemoryAddress sk_X509_REVOKED_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.sk_X509_REVOKED_set_cmp_func$MH, "sk_X509_REVOKED_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_num$MH() {
        return RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_num$MH,"sk_X509_CRL_num");
    }
    public static int sk_X509_CRL_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_num$MH, "sk_X509_CRL_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_value$MH() {
        return RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_value$MH,"sk_X509_CRL_value");
    }
    public static MemoryAddress sk_X509_CRL_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_value$MH, "sk_X509_CRL_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_new$MH() {
        return RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_new$MH,"sk_X509_CRL_new");
    }
    public static MemoryAddress sk_X509_CRL_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.sk_X509_CRL_new$MH, "sk_X509_CRL_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_new_null$MH,"sk_X509_CRL_new_null");
    }
    public static MemoryAddress sk_X509_CRL_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_new_null$MH, "sk_X509_CRL_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_new_reserve$MH,"sk_X509_CRL_new_reserve");
    }
    public static MemoryAddress sk_X509_CRL_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_new_reserve$MH, "sk_X509_CRL_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_reserve$MH,"sk_X509_CRL_reserve");
    }
    public static int sk_X509_CRL_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_reserve$MH, "sk_X509_CRL_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_free$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_free$MH,"sk_X509_CRL_free");
    }
    public static void sk_X509_CRL_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_free$MH, "sk_X509_CRL_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_zero$MH,"sk_X509_CRL_zero");
    }
    public static void sk_X509_CRL_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_zero$MH, "sk_X509_CRL_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_delete$MH,"sk_X509_CRL_delete");
    }
    public static MemoryAddress sk_X509_CRL_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.sk_X509_CRL_delete$MH, "sk_X509_CRL_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_delete_ptr$MH,"sk_X509_CRL_delete_ptr");
    }
    public static MemoryAddress sk_X509_CRL_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_delete_ptr$MH, "sk_X509_CRL_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_push$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_push$MH,"sk_X509_CRL_push");
    }
    public static int sk_X509_CRL_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_push$MH, "sk_X509_CRL_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_unshift$MH,"sk_X509_CRL_unshift");
    }
    public static int sk_X509_CRL_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_unshift$MH, "sk_X509_CRL_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_pop$MH,"sk_X509_CRL_pop");
    }
    public static MemoryAddress sk_X509_CRL_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_pop$MH, "sk_X509_CRL_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_shift$MH,"sk_X509_CRL_shift");
    }
    public static MemoryAddress sk_X509_CRL_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_shift$MH, "sk_X509_CRL_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_pop_free$MH,"sk_X509_CRL_pop_free");
    }
    public static void sk_X509_CRL_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.sk_X509_CRL_pop_free$MH, "sk_X509_CRL_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_insert$MH,"sk_X509_CRL_insert");
    }
    public static int sk_X509_CRL_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_insert$MH, "sk_X509_CRL_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_set$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_set$MH,"sk_X509_CRL_set");
    }
    public static MemoryAddress sk_X509_CRL_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_set$MH, "sk_X509_CRL_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_find$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_find$MH,"sk_X509_CRL_find");
    }
    public static int sk_X509_CRL_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_find$MH, "sk_X509_CRL_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_find_ex$MH,"sk_X509_CRL_find_ex");
    }
    public static int sk_X509_CRL_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_find_ex$MH, "sk_X509_CRL_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_sort$MH,"sk_X509_CRL_sort");
    }
    public static void sk_X509_CRL_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_sort$MH, "sk_X509_CRL_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_is_sorted$MH,"sk_X509_CRL_is_sorted");
    }
    public static int sk_X509_CRL_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.sk_X509_CRL_is_sorted$MH, "sk_X509_CRL_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_dup$MH,"sk_X509_CRL_dup");
    }
    public static MemoryAddress sk_X509_CRL_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_dup$MH, "sk_X509_CRL_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_deep_copy$MH,"sk_X509_CRL_deep_copy");
    }
    public static MemoryAddress sk_X509_CRL_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_deep_copy$MH, "sk_X509_CRL_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_CRL_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_set_cmp_func$MH,"sk_X509_CRL_set_cmp_func");
    }
    public static MemoryAddress sk_X509_CRL_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.sk_X509_CRL_set_cmp_func$MH, "sk_X509_CRL_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_num$MH() {
        return RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_num$MH,"sk_X509_INFO_num");
    }
    public static int sk_X509_INFO_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_num$MH, "sk_X509_INFO_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_value$MH() {
        return RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_value$MH,"sk_X509_INFO_value");
    }
    public static MemoryAddress sk_X509_INFO_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_value$MH, "sk_X509_INFO_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_new$MH() {
        return RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_new$MH,"sk_X509_INFO_new");
    }
    public static MemoryAddress sk_X509_INFO_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.sk_X509_INFO_new$MH, "sk_X509_INFO_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_new_null$MH,"sk_X509_INFO_new_null");
    }
    public static MemoryAddress sk_X509_INFO_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_new_null$MH, "sk_X509_INFO_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_new_reserve$MH,"sk_X509_INFO_new_reserve");
    }
    public static MemoryAddress sk_X509_INFO_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_new_reserve$MH, "sk_X509_INFO_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_reserve$MH,"sk_X509_INFO_reserve");
    }
    public static int sk_X509_INFO_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_reserve$MH, "sk_X509_INFO_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_free$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_free$MH,"sk_X509_INFO_free");
    }
    public static void sk_X509_INFO_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_free$MH, "sk_X509_INFO_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_zero$MH,"sk_X509_INFO_zero");
    }
    public static void sk_X509_INFO_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_zero$MH, "sk_X509_INFO_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_delete$MH,"sk_X509_INFO_delete");
    }
    public static MemoryAddress sk_X509_INFO_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.sk_X509_INFO_delete$MH, "sk_X509_INFO_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_delete_ptr$MH,"sk_X509_INFO_delete_ptr");
    }
    public static MemoryAddress sk_X509_INFO_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_delete_ptr$MH, "sk_X509_INFO_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_push$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_push$MH,"sk_X509_INFO_push");
    }
    public static int sk_X509_INFO_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_push$MH, "sk_X509_INFO_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_unshift$MH,"sk_X509_INFO_unshift");
    }
    public static int sk_X509_INFO_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_unshift$MH, "sk_X509_INFO_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_pop$MH,"sk_X509_INFO_pop");
    }
    public static MemoryAddress sk_X509_INFO_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_pop$MH, "sk_X509_INFO_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_shift$MH,"sk_X509_INFO_shift");
    }
    public static MemoryAddress sk_X509_INFO_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_shift$MH, "sk_X509_INFO_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_pop_free$MH,"sk_X509_INFO_pop_free");
    }
    public static void sk_X509_INFO_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.sk_X509_INFO_pop_free$MH, "sk_X509_INFO_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_insert$MH,"sk_X509_INFO_insert");
    }
    public static int sk_X509_INFO_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_insert$MH, "sk_X509_INFO_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_set$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_set$MH,"sk_X509_INFO_set");
    }
    public static MemoryAddress sk_X509_INFO_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_set$MH, "sk_X509_INFO_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_find$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_find$MH,"sk_X509_INFO_find");
    }
    public static int sk_X509_INFO_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_find$MH, "sk_X509_INFO_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_find_ex$MH,"sk_X509_INFO_find_ex");
    }
    public static int sk_X509_INFO_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_find_ex$MH, "sk_X509_INFO_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_sort$MH,"sk_X509_INFO_sort");
    }
    public static void sk_X509_INFO_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_sort$MH, "sk_X509_INFO_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_is_sorted$MH,"sk_X509_INFO_is_sorted");
    }
    public static int sk_X509_INFO_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.sk_X509_INFO_is_sorted$MH, "sk_X509_INFO_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_dup$MH,"sk_X509_INFO_dup");
    }
    public static MemoryAddress sk_X509_INFO_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_dup$MH, "sk_X509_INFO_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_deep_copy$MH,"sk_X509_INFO_deep_copy");
    }
    public static MemoryAddress sk_X509_INFO_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_deep_copy$MH, "sk_X509_INFO_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_INFO_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_set_cmp_func$MH,"sk_X509_INFO_set_cmp_func");
    }
    public static MemoryAddress sk_X509_INFO_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.sk_X509_INFO_set_cmp_func$MH, "sk_X509_INFO_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_error$MH() {
        return RuntimeHelper.requireNonNull(constants$527.OPENSSL_LH_error$MH,"OPENSSL_LH_error");
    }
    public static int OPENSSL_LH_error ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.OPENSSL_LH_error$MH, "OPENSSL_LH_error");
        try {
            return (int)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_new$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_new$MH,"OPENSSL_LH_new");
    }
    public static MemoryAddress OPENSSL_LH_new ( Addressable h,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_new$MH, "OPENSSL_LH_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(h, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_free$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_free$MH,"OPENSSL_LH_free");
    }
    public static void OPENSSL_LH_free ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_free$MH, "OPENSSL_LH_free");
        try {
            mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_insert$MH,"OPENSSL_LH_insert");
    }
    public static MemoryAddress OPENSSL_LH_insert ( Addressable lh,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_insert$MH, "OPENSSL_LH_insert");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_delete$MH,"OPENSSL_LH_delete");
    }
    public static MemoryAddress OPENSSL_LH_delete ( Addressable lh,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_delete$MH, "OPENSSL_LH_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_retrieve$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_retrieve$MH,"OPENSSL_LH_retrieve");
    }
    public static MemoryAddress OPENSSL_LH_retrieve ( Addressable lh,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_retrieve$MH, "OPENSSL_LH_retrieve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_doall$MH() {
        return RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_doall$MH,"OPENSSL_LH_doall");
    }
    public static void OPENSSL_LH_doall ( Addressable lh,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.OPENSSL_LH_doall$MH, "OPENSSL_LH_doall");
        try {
            mh$.invokeExact(lh, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_doall_arg$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_doall_arg$MH,"OPENSSL_LH_doall_arg");
    }
    public static void OPENSSL_LH_doall_arg ( Addressable lh,  Addressable func,  Addressable arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_doall_arg$MH, "OPENSSL_LH_doall_arg");
        try {
            mh$.invokeExact(lh, func, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_strhash$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_strhash$MH,"OPENSSL_LH_strhash");
    }
    public static long OPENSSL_LH_strhash ( Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_strhash$MH, "OPENSSL_LH_strhash");
        try {
            return (long)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_num_items$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_num_items$MH,"OPENSSL_LH_num_items");
    }
    public static long OPENSSL_LH_num_items ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_num_items$MH, "OPENSSL_LH_num_items");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_get_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_get_down_load$MH,"OPENSSL_LH_get_down_load");
    }
    public static long OPENSSL_LH_get_down_load ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_get_down_load$MH, "OPENSSL_LH_get_down_load");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_set_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_set_down_load$MH,"OPENSSL_LH_set_down_load");
    }
    public static void OPENSSL_LH_set_down_load ( Addressable lh,  long down_load) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_set_down_load$MH, "OPENSSL_LH_set_down_load");
        try {
            mh$.invokeExact(lh, down_load);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_stats$MH() {
        return RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_stats$MH,"OPENSSL_LH_stats");
    }
    public static void OPENSSL_LH_stats ( Addressable lh,  Addressable fp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.OPENSSL_LH_stats$MH, "OPENSSL_LH_stats");
        try {
            mh$.invokeExact(lh, fp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_node_stats$MH() {
        return RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_stats$MH,"OPENSSL_LH_node_stats");
    }
    public static void OPENSSL_LH_node_stats ( Addressable lh,  Addressable fp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_stats$MH, "OPENSSL_LH_node_stats");
        try {
            mh$.invokeExact(lh, fp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_node_usage_stats$MH() {
        return RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_usage_stats$MH,"OPENSSL_LH_node_usage_stats");
    }
    public static void OPENSSL_LH_node_usage_stats ( Addressable lh,  Addressable fp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_usage_stats$MH, "OPENSSL_LH_node_usage_stats");
        try {
            mh$.invokeExact(lh, fp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_stats_bio$MH,"OPENSSL_LH_stats_bio");
    }
    public static void OPENSSL_LH_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_stats_bio$MH, "OPENSSL_LH_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_node_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_stats_bio$MH,"OPENSSL_LH_node_stats_bio");
    }
    public static void OPENSSL_LH_node_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_stats_bio$MH, "OPENSSL_LH_node_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OPENSSL_LH_node_usage_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_usage_stats_bio$MH,"OPENSSL_LH_node_usage_stats_bio");
    }
    public static void OPENSSL_LH_node_usage_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.OPENSSL_LH_node_usage_stats_bio$MH, "OPENSSL_LH_node_usage_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_new$MH() {
        return RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_new$MH,"lh_OPENSSL_STRING_new");
    }
    public static MemoryAddress lh_OPENSSL_STRING_new ( Addressable hfn,  Addressable cfn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_new$MH, "lh_OPENSSL_STRING_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hfn, cfn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_free$MH() {
        return RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_free$MH,"lh_OPENSSL_STRING_free");
    }
    public static void lh_OPENSSL_STRING_free ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_free$MH, "lh_OPENSSL_STRING_free");
        try {
            mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_insert$MH,"lh_OPENSSL_STRING_insert");
    }
    public static MemoryAddress lh_OPENSSL_STRING_insert ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.lh_OPENSSL_STRING_insert$MH, "lh_OPENSSL_STRING_insert");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_delete$MH,"lh_OPENSSL_STRING_delete");
    }
    public static MemoryAddress lh_OPENSSL_STRING_delete ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_delete$MH, "lh_OPENSSL_STRING_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_retrieve$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_retrieve$MH,"lh_OPENSSL_STRING_retrieve");
    }
    public static MemoryAddress lh_OPENSSL_STRING_retrieve ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_retrieve$MH, "lh_OPENSSL_STRING_retrieve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_error$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_error$MH,"lh_OPENSSL_STRING_error");
    }
    public static int lh_OPENSSL_STRING_error ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_error$MH, "lh_OPENSSL_STRING_error");
        try {
            return (int)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_num_items$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_num_items$MH,"lh_OPENSSL_STRING_num_items");
    }
    public static long lh_OPENSSL_STRING_num_items ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_num_items$MH, "lh_OPENSSL_STRING_num_items");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_node_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_node_stats_bio$MH,"lh_OPENSSL_STRING_node_stats_bio");
    }
    public static void lh_OPENSSL_STRING_node_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_node_stats_bio$MH, "lh_OPENSSL_STRING_node_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_node_usage_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_node_usage_stats_bio$MH,"lh_OPENSSL_STRING_node_usage_stats_bio");
    }
    public static void lh_OPENSSL_STRING_node_usage_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.lh_OPENSSL_STRING_node_usage_stats_bio$MH, "lh_OPENSSL_STRING_node_usage_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_stats_bio$MH,"lh_OPENSSL_STRING_stats_bio");
    }
    public static void lh_OPENSSL_STRING_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_stats_bio$MH, "lh_OPENSSL_STRING_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_get_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_get_down_load$MH,"lh_OPENSSL_STRING_get_down_load");
    }
    public static long lh_OPENSSL_STRING_get_down_load ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_get_down_load$MH, "lh_OPENSSL_STRING_get_down_load");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_set_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_set_down_load$MH,"lh_OPENSSL_STRING_set_down_load");
    }
    public static void lh_OPENSSL_STRING_set_down_load ( Addressable lh,  long dl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_set_down_load$MH, "lh_OPENSSL_STRING_set_down_load");
        try {
            mh$.invokeExact(lh, dl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_STRING_doall$MH() {
        return RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_doall$MH,"lh_OPENSSL_STRING_doall");
    }
    public static void lh_OPENSSL_STRING_doall ( Addressable lh,  Addressable doall) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.lh_OPENSSL_STRING_doall$MH, "lh_OPENSSL_STRING_doall");
        try {
            mh$.invokeExact(lh, doall);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_new$MH() {
        return RuntimeHelper.requireNonNull(constants$534.lh_OPENSSL_CSTRING_new$MH,"lh_OPENSSL_CSTRING_new");
    }
    public static MemoryAddress lh_OPENSSL_CSTRING_new ( Addressable hfn,  Addressable cfn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.lh_OPENSSL_CSTRING_new$MH, "lh_OPENSSL_CSTRING_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hfn, cfn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_free$MH() {
        return RuntimeHelper.requireNonNull(constants$534.lh_OPENSSL_CSTRING_free$MH,"lh_OPENSSL_CSTRING_free");
    }
    public static void lh_OPENSSL_CSTRING_free ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.lh_OPENSSL_CSTRING_free$MH, "lh_OPENSSL_CSTRING_free");
        try {
            mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_insert$MH,"lh_OPENSSL_CSTRING_insert");
    }
    public static MemoryAddress lh_OPENSSL_CSTRING_insert ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_insert$MH, "lh_OPENSSL_CSTRING_insert");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_delete$MH,"lh_OPENSSL_CSTRING_delete");
    }
    public static MemoryAddress lh_OPENSSL_CSTRING_delete ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_delete$MH, "lh_OPENSSL_CSTRING_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_retrieve$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_retrieve$MH,"lh_OPENSSL_CSTRING_retrieve");
    }
    public static MemoryAddress lh_OPENSSL_CSTRING_retrieve ( Addressable lh,  Addressable d) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_retrieve$MH, "lh_OPENSSL_CSTRING_retrieve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lh, d);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_error$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_error$MH,"lh_OPENSSL_CSTRING_error");
    }
    public static int lh_OPENSSL_CSTRING_error ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_error$MH, "lh_OPENSSL_CSTRING_error");
        try {
            return (int)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_num_items$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_num_items$MH,"lh_OPENSSL_CSTRING_num_items");
    }
    public static long lh_OPENSSL_CSTRING_num_items ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_num_items$MH, "lh_OPENSSL_CSTRING_num_items");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_node_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_node_stats_bio$MH,"lh_OPENSSL_CSTRING_node_stats_bio");
    }
    public static void lh_OPENSSL_CSTRING_node_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.lh_OPENSSL_CSTRING_node_stats_bio$MH, "lh_OPENSSL_CSTRING_node_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_node_usage_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_node_usage_stats_bio$MH,"lh_OPENSSL_CSTRING_node_usage_stats_bio");
    }
    public static void lh_OPENSSL_CSTRING_node_usage_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_node_usage_stats_bio$MH, "lh_OPENSSL_CSTRING_node_usage_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_stats_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_stats_bio$MH,"lh_OPENSSL_CSTRING_stats_bio");
    }
    public static void lh_OPENSSL_CSTRING_stats_bio ( Addressable lh,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_stats_bio$MH, "lh_OPENSSL_CSTRING_stats_bio");
        try {
            mh$.invokeExact(lh, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_get_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_get_down_load$MH,"lh_OPENSSL_CSTRING_get_down_load");
    }
    public static long lh_OPENSSL_CSTRING_get_down_load ( Addressable lh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_get_down_load$MH, "lh_OPENSSL_CSTRING_get_down_load");
        try {
            return (long)mh$.invokeExact(lh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_set_down_load$MH() {
        return RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_set_down_load$MH,"lh_OPENSSL_CSTRING_set_down_load");
    }
    public static void lh_OPENSSL_CSTRING_set_down_load ( Addressable lh,  long dl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.lh_OPENSSL_CSTRING_set_down_load$MH, "lh_OPENSSL_CSTRING_set_down_load");
        try {
            mh$.invokeExact(lh, dl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lh_OPENSSL_CSTRING_doall$MH() {
        return RuntimeHelper.requireNonNull(constants$537.lh_OPENSSL_CSTRING_doall$MH,"lh_OPENSSL_CSTRING_doall");
    }
    public static void lh_OPENSSL_CSTRING_doall ( Addressable lh,  Addressable doall) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.lh_OPENSSL_CSTRING_doall$MH, "lh_OPENSSL_CSTRING_doall");
        try {
            mh$.invokeExact(lh, doall);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int X509_LU_NONE() {
        return (int)0L;
    }
    public static int X509_LU_X509() {
        return (int)1L;
    }
    public static int X509_LU_CRL() {
        return (int)2L;
    }
    public static MethodHandle sk_X509_LOOKUP_num$MH() {
        return RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_num$MH,"sk_X509_LOOKUP_num");
    }
    public static int sk_X509_LOOKUP_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_num$MH, "sk_X509_LOOKUP_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_value$MH() {
        return RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_value$MH,"sk_X509_LOOKUP_value");
    }
    public static MemoryAddress sk_X509_LOOKUP_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_value$MH, "sk_X509_LOOKUP_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_new$MH() {
        return RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new$MH,"sk_X509_LOOKUP_new");
    }
    public static MemoryAddress sk_X509_LOOKUP_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new$MH, "sk_X509_LOOKUP_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new_null$MH,"sk_X509_LOOKUP_new_null");
    }
    public static MemoryAddress sk_X509_LOOKUP_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new_null$MH, "sk_X509_LOOKUP_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new_reserve$MH,"sk_X509_LOOKUP_new_reserve");
    }
    public static MemoryAddress sk_X509_LOOKUP_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.sk_X509_LOOKUP_new_reserve$MH, "sk_X509_LOOKUP_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_reserve$MH,"sk_X509_LOOKUP_reserve");
    }
    public static int sk_X509_LOOKUP_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_reserve$MH, "sk_X509_LOOKUP_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_free$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_free$MH,"sk_X509_LOOKUP_free");
    }
    public static void sk_X509_LOOKUP_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_free$MH, "sk_X509_LOOKUP_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_zero$MH,"sk_X509_LOOKUP_zero");
    }
    public static void sk_X509_LOOKUP_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_zero$MH, "sk_X509_LOOKUP_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_delete$MH,"sk_X509_LOOKUP_delete");
    }
    public static MemoryAddress sk_X509_LOOKUP_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_delete$MH, "sk_X509_LOOKUP_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_delete_ptr$MH,"sk_X509_LOOKUP_delete_ptr");
    }
    public static MemoryAddress sk_X509_LOOKUP_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_delete_ptr$MH, "sk_X509_LOOKUP_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_push$MH() {
        return RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_push$MH,"sk_X509_LOOKUP_push");
    }
    public static int sk_X509_LOOKUP_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.sk_X509_LOOKUP_push$MH, "sk_X509_LOOKUP_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_unshift$MH,"sk_X509_LOOKUP_unshift");
    }
    public static int sk_X509_LOOKUP_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_unshift$MH, "sk_X509_LOOKUP_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_pop$MH,"sk_X509_LOOKUP_pop");
    }
    public static MemoryAddress sk_X509_LOOKUP_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_pop$MH, "sk_X509_LOOKUP_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_shift$MH,"sk_X509_LOOKUP_shift");
    }
    public static MemoryAddress sk_X509_LOOKUP_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_shift$MH, "sk_X509_LOOKUP_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_pop_free$MH,"sk_X509_LOOKUP_pop_free");
    }
    public static void sk_X509_LOOKUP_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_pop_free$MH, "sk_X509_LOOKUP_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_insert$MH,"sk_X509_LOOKUP_insert");
    }
    public static int sk_X509_LOOKUP_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_insert$MH, "sk_X509_LOOKUP_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_set$MH() {
        return RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_set$MH,"sk_X509_LOOKUP_set");
    }
    public static MemoryAddress sk_X509_LOOKUP_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.sk_X509_LOOKUP_set$MH, "sk_X509_LOOKUP_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_find$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_find$MH,"sk_X509_LOOKUP_find");
    }
    public static int sk_X509_LOOKUP_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_find$MH, "sk_X509_LOOKUP_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_find_ex$MH,"sk_X509_LOOKUP_find_ex");
    }
    public static int sk_X509_LOOKUP_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_find_ex$MH, "sk_X509_LOOKUP_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_sort$MH,"sk_X509_LOOKUP_sort");
    }
    public static void sk_X509_LOOKUP_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_sort$MH, "sk_X509_LOOKUP_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_is_sorted$MH,"sk_X509_LOOKUP_is_sorted");
    }
    public static int sk_X509_LOOKUP_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_is_sorted$MH, "sk_X509_LOOKUP_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_dup$MH,"sk_X509_LOOKUP_dup");
    }
    public static MemoryAddress sk_X509_LOOKUP_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_dup$MH, "sk_X509_LOOKUP_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_deep_copy$MH,"sk_X509_LOOKUP_deep_copy");
    }
    public static MemoryAddress sk_X509_LOOKUP_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.sk_X509_LOOKUP_deep_copy$MH, "sk_X509_LOOKUP_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_LOOKUP_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$542.sk_X509_LOOKUP_set_cmp_func$MH,"sk_X509_LOOKUP_set_cmp_func");
    }
    public static MemoryAddress sk_X509_LOOKUP_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.sk_X509_LOOKUP_set_cmp_func$MH, "sk_X509_LOOKUP_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_num$MH() {
        return RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_num$MH,"sk_X509_OBJECT_num");
    }
    public static int sk_X509_OBJECT_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_num$MH, "sk_X509_OBJECT_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_value$MH() {
        return RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_value$MH,"sk_X509_OBJECT_value");
    }
    public static MemoryAddress sk_X509_OBJECT_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_value$MH, "sk_X509_OBJECT_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_new$MH() {
        return RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new$MH,"sk_X509_OBJECT_new");
    }
    public static MemoryAddress sk_X509_OBJECT_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new$MH, "sk_X509_OBJECT_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new_null$MH,"sk_X509_OBJECT_new_null");
    }
    public static MemoryAddress sk_X509_OBJECT_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new_null$MH, "sk_X509_OBJECT_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new_reserve$MH,"sk_X509_OBJECT_new_reserve");
    }
    public static MemoryAddress sk_X509_OBJECT_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.sk_X509_OBJECT_new_reserve$MH, "sk_X509_OBJECT_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_reserve$MH,"sk_X509_OBJECT_reserve");
    }
    public static int sk_X509_OBJECT_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_reserve$MH, "sk_X509_OBJECT_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_free$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_free$MH,"sk_X509_OBJECT_free");
    }
    public static void sk_X509_OBJECT_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_free$MH, "sk_X509_OBJECT_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_zero$MH,"sk_X509_OBJECT_zero");
    }
    public static void sk_X509_OBJECT_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_zero$MH, "sk_X509_OBJECT_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_delete$MH,"sk_X509_OBJECT_delete");
    }
    public static MemoryAddress sk_X509_OBJECT_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_delete$MH, "sk_X509_OBJECT_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_delete_ptr$MH,"sk_X509_OBJECT_delete_ptr");
    }
    public static MemoryAddress sk_X509_OBJECT_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_delete_ptr$MH, "sk_X509_OBJECT_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_push$MH() {
        return RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_push$MH,"sk_X509_OBJECT_push");
    }
    public static int sk_X509_OBJECT_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$544.sk_X509_OBJECT_push$MH, "sk_X509_OBJECT_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_unshift$MH,"sk_X509_OBJECT_unshift");
    }
    public static int sk_X509_OBJECT_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_unshift$MH, "sk_X509_OBJECT_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_pop$MH,"sk_X509_OBJECT_pop");
    }
    public static MemoryAddress sk_X509_OBJECT_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_pop$MH, "sk_X509_OBJECT_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_shift$MH,"sk_X509_OBJECT_shift");
    }
    public static MemoryAddress sk_X509_OBJECT_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_shift$MH, "sk_X509_OBJECT_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_pop_free$MH,"sk_X509_OBJECT_pop_free");
    }
    public static void sk_X509_OBJECT_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_pop_free$MH, "sk_X509_OBJECT_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_insert$MH,"sk_X509_OBJECT_insert");
    }
    public static int sk_X509_OBJECT_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_insert$MH, "sk_X509_OBJECT_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_set$MH() {
        return RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_set$MH,"sk_X509_OBJECT_set");
    }
    public static MemoryAddress sk_X509_OBJECT_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$545.sk_X509_OBJECT_set$MH, "sk_X509_OBJECT_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_find$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_find$MH,"sk_X509_OBJECT_find");
    }
    public static int sk_X509_OBJECT_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_find$MH, "sk_X509_OBJECT_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_find_ex$MH,"sk_X509_OBJECT_find_ex");
    }
    public static int sk_X509_OBJECT_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_find_ex$MH, "sk_X509_OBJECT_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_sort$MH,"sk_X509_OBJECT_sort");
    }
    public static void sk_X509_OBJECT_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_sort$MH, "sk_X509_OBJECT_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_is_sorted$MH,"sk_X509_OBJECT_is_sorted");
    }
    public static int sk_X509_OBJECT_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_is_sorted$MH, "sk_X509_OBJECT_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_dup$MH,"sk_X509_OBJECT_dup");
    }
    public static MemoryAddress sk_X509_OBJECT_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_dup$MH, "sk_X509_OBJECT_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_deep_copy$MH,"sk_X509_OBJECT_deep_copy");
    }
    public static MemoryAddress sk_X509_OBJECT_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$546.sk_X509_OBJECT_deep_copy$MH, "sk_X509_OBJECT_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_OBJECT_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$547.sk_X509_OBJECT_set_cmp_func$MH,"sk_X509_OBJECT_set_cmp_func");
    }
    public static MemoryAddress sk_X509_OBJECT_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$547.sk_X509_OBJECT_set_cmp_func$MH, "sk_X509_OBJECT_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_num$MH() {
        return RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_num$MH,"sk_X509_VERIFY_PARAM_num");
    }
    public static int sk_X509_VERIFY_PARAM_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_num$MH, "sk_X509_VERIFY_PARAM_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_value$MH() {
        return RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_value$MH,"sk_X509_VERIFY_PARAM_value");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_value$MH, "sk_X509_VERIFY_PARAM_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_new$MH() {
        return RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new$MH,"sk_X509_VERIFY_PARAM_new");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new$MH, "sk_X509_VERIFY_PARAM_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new_null$MH,"sk_X509_VERIFY_PARAM_new_null");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new_null$MH, "sk_X509_VERIFY_PARAM_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new_reserve$MH,"sk_X509_VERIFY_PARAM_new_reserve");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$548.sk_X509_VERIFY_PARAM_new_reserve$MH, "sk_X509_VERIFY_PARAM_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_reserve$MH,"sk_X509_VERIFY_PARAM_reserve");
    }
    public static int sk_X509_VERIFY_PARAM_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_reserve$MH, "sk_X509_VERIFY_PARAM_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_free$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_free$MH,"sk_X509_VERIFY_PARAM_free");
    }
    public static void sk_X509_VERIFY_PARAM_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_free$MH, "sk_X509_VERIFY_PARAM_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_zero$MH,"sk_X509_VERIFY_PARAM_zero");
    }
    public static void sk_X509_VERIFY_PARAM_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_zero$MH, "sk_X509_VERIFY_PARAM_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_delete$MH,"sk_X509_VERIFY_PARAM_delete");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_delete$MH, "sk_X509_VERIFY_PARAM_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_delete_ptr$MH,"sk_X509_VERIFY_PARAM_delete_ptr");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_delete_ptr$MH, "sk_X509_VERIFY_PARAM_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_push$MH() {
        return RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_push$MH,"sk_X509_VERIFY_PARAM_push");
    }
    public static int sk_X509_VERIFY_PARAM_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$549.sk_X509_VERIFY_PARAM_push$MH, "sk_X509_VERIFY_PARAM_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_unshift$MH,"sk_X509_VERIFY_PARAM_unshift");
    }
    public static int sk_X509_VERIFY_PARAM_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_unshift$MH, "sk_X509_VERIFY_PARAM_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_pop$MH,"sk_X509_VERIFY_PARAM_pop");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_pop$MH, "sk_X509_VERIFY_PARAM_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_shift$MH,"sk_X509_VERIFY_PARAM_shift");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_shift$MH, "sk_X509_VERIFY_PARAM_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_pop_free$MH,"sk_X509_VERIFY_PARAM_pop_free");
    }
    public static void sk_X509_VERIFY_PARAM_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_pop_free$MH, "sk_X509_VERIFY_PARAM_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_insert$MH,"sk_X509_VERIFY_PARAM_insert");
    }
    public static int sk_X509_VERIFY_PARAM_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_insert$MH, "sk_X509_VERIFY_PARAM_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_set$MH() {
        return RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_set$MH,"sk_X509_VERIFY_PARAM_set");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$550.sk_X509_VERIFY_PARAM_set$MH, "sk_X509_VERIFY_PARAM_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_find$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_find$MH,"sk_X509_VERIFY_PARAM_find");
    }
    public static int sk_X509_VERIFY_PARAM_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_find$MH, "sk_X509_VERIFY_PARAM_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_find_ex$MH,"sk_X509_VERIFY_PARAM_find_ex");
    }
    public static int sk_X509_VERIFY_PARAM_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_find_ex$MH, "sk_X509_VERIFY_PARAM_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_sort$MH,"sk_X509_VERIFY_PARAM_sort");
    }
    public static void sk_X509_VERIFY_PARAM_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_sort$MH, "sk_X509_VERIFY_PARAM_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_is_sorted$MH,"sk_X509_VERIFY_PARAM_is_sorted");
    }
    public static int sk_X509_VERIFY_PARAM_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_is_sorted$MH, "sk_X509_VERIFY_PARAM_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_dup$MH,"sk_X509_VERIFY_PARAM_dup");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_dup$MH, "sk_X509_VERIFY_PARAM_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_deep_copy$MH,"sk_X509_VERIFY_PARAM_deep_copy");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$551.sk_X509_VERIFY_PARAM_deep_copy$MH, "sk_X509_VERIFY_PARAM_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_X509_VERIFY_PARAM_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$552.sk_X509_VERIFY_PARAM_set_cmp_func$MH,"sk_X509_VERIFY_PARAM_set_cmp_func");
    }
    public static MemoryAddress sk_X509_VERIFY_PARAM_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.sk_X509_VERIFY_PARAM_set_cmp_func$MH, "sk_X509_VERIFY_PARAM_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$552.X509_STORE_set_depth$MH,"X509_STORE_set_depth");
    }
    public static int X509_STORE_set_depth ( Addressable store,  int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.X509_STORE_set_depth$MH, "X509_STORE_set_depth");
        try {
            return (int)mh$.invokeExact(store, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$556.X509_STORE_CTX_set_depth$MH,"X509_STORE_CTX_set_depth");
    }
    public static void X509_STORE_CTX_set_depth ( Addressable ctx,  int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.X509_STORE_CTX_set_depth$MH, "X509_STORE_CTX_set_depth");
        try {
            mh$.invokeExact(ctx, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_idx_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_idx_by_subject$MH,"X509_OBJECT_idx_by_subject");
    }
    public static int X509_OBJECT_idx_by_subject ( Addressable h,  int type,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_idx_by_subject$MH, "X509_OBJECT_idx_by_subject");
        try {
            return (int)mh$.invokeExact(h, type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_retrieve_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_retrieve_by_subject$MH,"X509_OBJECT_retrieve_by_subject");
    }
    public static MemoryAddress X509_OBJECT_retrieve_by_subject ( Addressable h,  int type,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_retrieve_by_subject$MH, "X509_OBJECT_retrieve_by_subject");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(h, type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_retrieve_match$MH() {
        return RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_retrieve_match$MH,"X509_OBJECT_retrieve_match");
    }
    public static MemoryAddress X509_OBJECT_retrieve_match ( Addressable h,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.X509_OBJECT_retrieve_match$MH, "X509_OBJECT_retrieve_match");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(h, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_up_ref_count$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_up_ref_count$MH,"X509_OBJECT_up_ref_count");
    }
    public static int X509_OBJECT_up_ref_count ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_up_ref_count$MH, "X509_OBJECT_up_ref_count");
        try {
            return (int)mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_new$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_new$MH,"X509_OBJECT_new");
    }
    public static MemoryAddress X509_OBJECT_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_new$MH, "X509_OBJECT_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_free$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_free$MH,"X509_OBJECT_free");
    }
    public static void X509_OBJECT_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_free$MH, "X509_OBJECT_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_get_type$MH,"X509_OBJECT_get_type");
    }
    public static int X509_OBJECT_get_type ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_get_type$MH, "X509_OBJECT_get_type");
        try {
            return (int)mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_get0_X509$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_get0_X509$MH,"X509_OBJECT_get0_X509");
    }
    public static MemoryAddress X509_OBJECT_get0_X509 ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_get0_X509$MH, "X509_OBJECT_get0_X509");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_set1_X509$MH() {
        return RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_set1_X509$MH,"X509_OBJECT_set1_X509");
    }
    public static int X509_OBJECT_set1_X509 ( Addressable a,  Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.X509_OBJECT_set1_X509$MH, "X509_OBJECT_set1_X509");
        try {
            return (int)mh$.invokeExact(a, obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_get0_X509_CRL$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_OBJECT_get0_X509_CRL$MH,"X509_OBJECT_get0_X509_CRL");
    }
    public static MemoryAddress X509_OBJECT_get0_X509_CRL ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_OBJECT_get0_X509_CRL$MH, "X509_OBJECT_get0_X509_CRL");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_OBJECT_set1_X509_CRL$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_OBJECT_set1_X509_CRL$MH,"X509_OBJECT_set1_X509_CRL");
    }
    public static int X509_OBJECT_set1_X509_CRL ( Addressable a,  Addressable obj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_OBJECT_set1_X509_CRL$MH, "X509_OBJECT_set1_X509_CRL");
        try {
            return (int)mh$.invokeExact(a, obj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_new$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_STORE_new$MH,"X509_STORE_new");
    }
    public static MemoryAddress X509_STORE_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_STORE_new$MH, "X509_STORE_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_free$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_STORE_free$MH,"X509_STORE_free");
    }
    public static void X509_STORE_free ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_STORE_free$MH, "X509_STORE_free");
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_STORE_lock$MH,"X509_STORE_lock");
    }
    public static int X509_STORE_lock ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_STORE_lock$MH, "X509_STORE_lock");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$558.X509_STORE_unlock$MH,"X509_STORE_unlock");
    }
    public static int X509_STORE_unlock ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.X509_STORE_unlock$MH, "X509_STORE_unlock");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_up_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_up_ref$MH,"X509_STORE_up_ref");
    }
    public static int X509_STORE_up_ref ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_up_ref$MH, "X509_STORE_up_ref");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get0_objects$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_get0_objects$MH,"X509_STORE_get0_objects");
    }
    public static MemoryAddress X509_STORE_get0_objects ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_get0_objects$MH, "X509_STORE_get0_objects");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get1_certs$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_CTX_get1_certs$MH,"X509_STORE_CTX_get1_certs");
    }
    public static MemoryAddress X509_STORE_CTX_get1_certs ( Addressable st,  Addressable nm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_CTX_get1_certs$MH, "X509_STORE_CTX_get1_certs");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(st, nm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get1_crls$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_CTX_get1_crls$MH,"X509_STORE_CTX_get1_crls");
    }
    public static MemoryAddress X509_STORE_CTX_get1_crls ( Addressable st,  Addressable nm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_CTX_get1_crls$MH, "X509_STORE_CTX_get1_crls");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(st, nm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_set_flags$MH,"X509_STORE_set_flags");
    }
    public static int X509_STORE_set_flags ( Addressable ctx,  long flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_set_flags$MH, "X509_STORE_set_flags");
        try {
            return (int)mh$.invokeExact(ctx, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$559.X509_STORE_set_purpose$MH,"X509_STORE_set_purpose");
    }
    public static int X509_STORE_set_purpose ( Addressable ctx,  int purpose) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.X509_STORE_set_purpose$MH, "X509_STORE_set_purpose");
        try {
            return (int)mh$.invokeExact(ctx, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_trust$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_set_trust$MH,"X509_STORE_set_trust");
    }
    public static int X509_STORE_set_trust ( Addressable ctx,  int trust) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_set_trust$MH, "X509_STORE_set_trust");
        try {
            return (int)mh$.invokeExact(ctx, trust);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set1_param$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_set1_param$MH,"X509_STORE_set1_param");
    }
    public static int X509_STORE_set1_param ( Addressable ctx,  Addressable pm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_set1_param$MH, "X509_STORE_set1_param");
        try {
            return (int)mh$.invokeExact(ctx, pm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get0_param$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_get0_param$MH,"X509_STORE_get0_param");
    }
    public static MemoryAddress X509_STORE_get0_param ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_get0_param$MH, "X509_STORE_get0_param");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_set_verify$MH,"X509_STORE_set_verify");
    }
    public static void X509_STORE_set_verify ( Addressable ctx,  Addressable verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_set_verify$MH, "X509_STORE_set_verify");
        try {
            mh$.invokeExact(ctx, verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_CTX_set_verify$MH,"X509_STORE_CTX_set_verify");
    }
    public static void X509_STORE_CTX_set_verify ( Addressable ctx,  Addressable verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_CTX_set_verify$MH, "X509_STORE_CTX_set_verify");
        try {
            mh$.invokeExact(ctx, verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$560.X509_STORE_get_verify$MH,"X509_STORE_get_verify");
    }
    public static MemoryAddress X509_STORE_get_verify ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.X509_STORE_get_verify$MH, "X509_STORE_get_verify");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_verify_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_verify_cb$MH,"X509_STORE_set_verify_cb");
    }
    public static void X509_STORE_set_verify_cb ( Addressable ctx,  Addressable verify_cb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_verify_cb$MH, "X509_STORE_set_verify_cb");
        try {
            mh$.invokeExact(ctx, verify_cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_verify_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_verify_cb$MH,"X509_STORE_get_verify_cb");
    }
    public static MemoryAddress X509_STORE_get_verify_cb ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_verify_cb$MH, "X509_STORE_get_verify_cb");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_get_issuer$MH,"X509_STORE_set_get_issuer");
    }
    public static void X509_STORE_set_get_issuer ( Addressable ctx,  Addressable get_issuer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_get_issuer$MH, "X509_STORE_set_get_issuer");
        try {
            mh$.invokeExact(ctx, get_issuer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_get_issuer$MH,"X509_STORE_get_get_issuer");
    }
    public static MemoryAddress X509_STORE_get_get_issuer ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_get_issuer$MH, "X509_STORE_get_get_issuer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_check_issued$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_check_issued$MH,"X509_STORE_set_check_issued");
    }
    public static void X509_STORE_set_check_issued ( Addressable ctx,  Addressable check_issued) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_set_check_issued$MH, "X509_STORE_set_check_issued");
        try {
            mh$.invokeExact(ctx, check_issued);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_check_issued$MH() {
        return RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_check_issued$MH,"X509_STORE_get_check_issued");
    }
    public static MemoryAddress X509_STORE_get_check_issued ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.X509_STORE_get_check_issued$MH, "X509_STORE_get_check_issued");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_check_revocation$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_check_revocation$MH,"X509_STORE_set_check_revocation");
    }
    public static void X509_STORE_set_check_revocation ( Addressable ctx,  Addressable check_revocation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_check_revocation$MH, "X509_STORE_set_check_revocation");
        try {
            mh$.invokeExact(ctx, check_revocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_check_revocation$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_check_revocation$MH,"X509_STORE_get_check_revocation");
    }
    public static MemoryAddress X509_STORE_get_check_revocation ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_check_revocation$MH, "X509_STORE_get_check_revocation");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_get_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_get_crl$MH,"X509_STORE_set_get_crl");
    }
    public static void X509_STORE_set_get_crl ( Addressable ctx,  Addressable get_crl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_get_crl$MH, "X509_STORE_set_get_crl");
        try {
            mh$.invokeExact(ctx, get_crl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_get_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_get_crl$MH,"X509_STORE_get_get_crl");
    }
    public static MemoryAddress X509_STORE_get_get_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_get_crl$MH, "X509_STORE_get_get_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_check_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_check_crl$MH,"X509_STORE_set_check_crl");
    }
    public static void X509_STORE_set_check_crl ( Addressable ctx,  Addressable check_crl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_set_check_crl$MH, "X509_STORE_set_check_crl");
        try {
            mh$.invokeExact(ctx, check_crl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_check_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_check_crl$MH,"X509_STORE_get_check_crl");
    }
    public static MemoryAddress X509_STORE_get_check_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.X509_STORE_get_check_crl$MH, "X509_STORE_get_check_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_cert_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_cert_crl$MH,"X509_STORE_set_cert_crl");
    }
    public static void X509_STORE_set_cert_crl ( Addressable ctx,  Addressable cert_crl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_cert_crl$MH, "X509_STORE_set_cert_crl");
        try {
            mh$.invokeExact(ctx, cert_crl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_cert_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_cert_crl$MH,"X509_STORE_get_cert_crl");
    }
    public static MemoryAddress X509_STORE_get_cert_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_cert_crl$MH, "X509_STORE_get_cert_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_check_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_check_policy$MH,"X509_STORE_set_check_policy");
    }
    public static void X509_STORE_set_check_policy ( Addressable ctx,  Addressable check_policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_check_policy$MH, "X509_STORE_set_check_policy");
        try {
            mh$.invokeExact(ctx, check_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_check_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_check_policy$MH,"X509_STORE_get_check_policy");
    }
    public static MemoryAddress X509_STORE_get_check_policy ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_check_policy$MH, "X509_STORE_get_check_policy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_lookup_certs$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_lookup_certs$MH,"X509_STORE_set_lookup_certs");
    }
    public static void X509_STORE_set_lookup_certs ( Addressable ctx,  Addressable lookup_certs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_set_lookup_certs$MH, "X509_STORE_set_lookup_certs");
        try {
            mh$.invokeExact(ctx, lookup_certs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_lookup_certs$MH() {
        return RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_lookup_certs$MH,"X509_STORE_get_lookup_certs");
    }
    public static MemoryAddress X509_STORE_get_lookup_certs ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.X509_STORE_get_lookup_certs$MH, "X509_STORE_get_lookup_certs");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_lookup_crls$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_lookup_crls$MH,"X509_STORE_set_lookup_crls");
    }
    public static void X509_STORE_set_lookup_crls ( Addressable ctx,  Addressable lookup_crls) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_lookup_crls$MH, "X509_STORE_set_lookup_crls");
        try {
            mh$.invokeExact(ctx, lookup_crls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_lookup_crls$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_lookup_crls$MH,"X509_STORE_get_lookup_crls");
    }
    public static MemoryAddress X509_STORE_get_lookup_crls ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_lookup_crls$MH, "X509_STORE_get_lookup_crls");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_cleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_cleanup$MH,"X509_STORE_set_cleanup");
    }
    public static void X509_STORE_set_cleanup ( Addressable ctx,  Addressable cleanup) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_cleanup$MH, "X509_STORE_set_cleanup");
        try {
            mh$.invokeExact(ctx, cleanup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_cleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_cleanup$MH,"X509_STORE_get_cleanup");
    }
    public static MemoryAddress X509_STORE_get_cleanup ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_cleanup$MH, "X509_STORE_get_cleanup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_ex_data$MH,"X509_STORE_set_ex_data");
    }
    public static int X509_STORE_set_ex_data ( Addressable ctx,  int idx,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_set_ex_data$MH, "X509_STORE_set_ex_data");
        try {
            return (int)mh$.invokeExact(ctx, idx, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_get_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_ex_data$MH,"X509_STORE_get_ex_data");
    }
    public static MemoryAddress X509_STORE_get_ex_data ( Addressable ctx,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.X509_STORE_get_ex_data$MH, "X509_STORE_get_ex_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_new$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_new$MH,"X509_STORE_CTX_new");
    }
    public static MemoryAddress X509_STORE_CTX_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_new$MH, "X509_STORE_CTX_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get1_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_get1_issuer$MH,"X509_STORE_CTX_get1_issuer");
    }
    public static int X509_STORE_CTX_get1_issuer ( Addressable issuer,  Addressable ctx,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_get1_issuer$MH, "X509_STORE_CTX_get1_issuer");
        try {
            return (int)mh$.invokeExact(issuer, ctx, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_free$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_free$MH,"X509_STORE_CTX_free");
    }
    public static void X509_STORE_CTX_free ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_free$MH, "X509_STORE_CTX_free");
        try {
            mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_init$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_init$MH,"X509_STORE_CTX_init");
    }
    public static int X509_STORE_CTX_init ( Addressable ctx,  Addressable store,  Addressable x509,  Addressable chain) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_init$MH, "X509_STORE_CTX_init");
        try {
            return (int)mh$.invokeExact(ctx, store, x509, chain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_trusted_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_set0_trusted_stack$MH,"X509_STORE_CTX_set0_trusted_stack");
    }
    public static void X509_STORE_CTX_set0_trusted_stack ( Addressable ctx,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_set0_trusted_stack$MH, "X509_STORE_CTX_set0_trusted_stack");
        try {
            mh$.invokeExact(ctx, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_cleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_cleanup$MH,"X509_STORE_CTX_cleanup");
    }
    public static void X509_STORE_CTX_cleanup ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.X509_STORE_CTX_cleanup$MH, "X509_STORE_CTX_cleanup");
        try {
            mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_store$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_store$MH,"X509_STORE_CTX_get0_store");
    }
    public static MemoryAddress X509_STORE_CTX_get0_store ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_store$MH, "X509_STORE_CTX_get0_store");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_cert$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_cert$MH,"X509_STORE_CTX_get0_cert");
    }
    public static MemoryAddress X509_STORE_CTX_get0_cert ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_cert$MH, "X509_STORE_CTX_get0_cert");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_untrusted$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_untrusted$MH,"X509_STORE_CTX_get0_untrusted");
    }
    public static MemoryAddress X509_STORE_CTX_get0_untrusted ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get0_untrusted$MH, "X509_STORE_CTX_get0_untrusted");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_untrusted$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_set0_untrusted$MH,"X509_STORE_CTX_set0_untrusted");
    }
    public static void X509_STORE_CTX_set0_untrusted ( Addressable ctx,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_set0_untrusted$MH, "X509_STORE_CTX_set0_untrusted");
        try {
            mh$.invokeExact(ctx, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_verify_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_set_verify_cb$MH,"X509_STORE_CTX_set_verify_cb");
    }
    public static void X509_STORE_CTX_set_verify_cb ( Addressable ctx,  Addressable verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_set_verify_cb$MH, "X509_STORE_CTX_set_verify_cb");
        try {
            mh$.invokeExact(ctx, verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_verify_cb$MH() {
        return RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get_verify_cb$MH,"X509_STORE_CTX_get_verify_cb");
    }
    public static MemoryAddress X509_STORE_CTX_get_verify_cb ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.X509_STORE_CTX_get_verify_cb$MH, "X509_STORE_CTX_get_verify_cb");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_verify$MH,"X509_STORE_CTX_get_verify");
    }
    public static MemoryAddress X509_STORE_CTX_get_verify ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_verify$MH, "X509_STORE_CTX_get_verify");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_get_issuer$MH,"X509_STORE_CTX_get_get_issuer");
    }
    public static MemoryAddress X509_STORE_CTX_get_get_issuer ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_get_issuer$MH, "X509_STORE_CTX_get_get_issuer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_check_issued$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_issued$MH,"X509_STORE_CTX_get_check_issued");
    }
    public static MemoryAddress X509_STORE_CTX_get_check_issued ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_issued$MH, "X509_STORE_CTX_get_check_issued");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_check_revocation$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_revocation$MH,"X509_STORE_CTX_get_check_revocation");
    }
    public static MemoryAddress X509_STORE_CTX_get_check_revocation ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_revocation$MH, "X509_STORE_CTX_get_check_revocation");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_get_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_get_crl$MH,"X509_STORE_CTX_get_get_crl");
    }
    public static MemoryAddress X509_STORE_CTX_get_get_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_get_crl$MH, "X509_STORE_CTX_get_get_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_check_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_crl$MH,"X509_STORE_CTX_get_check_crl");
    }
    public static MemoryAddress X509_STORE_CTX_get_check_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.X509_STORE_CTX_get_check_crl$MH, "X509_STORE_CTX_get_check_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_cert_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_cert_crl$MH,"X509_STORE_CTX_get_cert_crl");
    }
    public static MemoryAddress X509_STORE_CTX_get_cert_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_cert_crl$MH, "X509_STORE_CTX_get_cert_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_check_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_check_policy$MH,"X509_STORE_CTX_get_check_policy");
    }
    public static MemoryAddress X509_STORE_CTX_get_check_policy ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_check_policy$MH, "X509_STORE_CTX_get_check_policy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_lookup_certs$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_lookup_certs$MH,"X509_STORE_CTX_get_lookup_certs");
    }
    public static MemoryAddress X509_STORE_CTX_get_lookup_certs ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_lookup_certs$MH, "X509_STORE_CTX_get_lookup_certs");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_lookup_crls$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_lookup_crls$MH,"X509_STORE_CTX_get_lookup_crls");
    }
    public static MemoryAddress X509_STORE_CTX_get_lookup_crls ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_lookup_crls$MH, "X509_STORE_CTX_get_lookup_crls");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_cleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_cleanup$MH,"X509_STORE_CTX_get_cleanup");
    }
    public static MemoryAddress X509_STORE_CTX_get_cleanup ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_CTX_get_cleanup$MH, "X509_STORE_CTX_get_cleanup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_add_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$568.X509_STORE_add_lookup$MH,"X509_STORE_add_lookup");
    }
    public static MemoryAddress X509_STORE_add_lookup ( Addressable v,  Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.X509_STORE_add_lookup$MH, "X509_STORE_add_lookup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(v, m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_hash_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$569.X509_LOOKUP_hash_dir$MH,"X509_LOOKUP_hash_dir");
    }
    public static MemoryAddress X509_LOOKUP_hash_dir () {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.X509_LOOKUP_hash_dir$MH, "X509_LOOKUP_hash_dir");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_file$MH() {
        return RuntimeHelper.requireNonNull(constants$569.X509_LOOKUP_file$MH,"X509_LOOKUP_file");
    }
    public static MemoryAddress X509_LOOKUP_file () {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.X509_LOOKUP_file$MH, "X509_LOOKUP_file");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_new$MH() {
        return RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_new$MH,"X509_LOOKUP_meth_new");
    }
    public static MemoryAddress X509_LOOKUP_meth_new ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_new$MH, "X509_LOOKUP_meth_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_free$MH() {
        return RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_free$MH,"X509_LOOKUP_meth_free");
    }
    public static void X509_LOOKUP_meth_free ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_free$MH, "X509_LOOKUP_meth_free");
        try {
            mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_new_item$MH() {
        return RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_set_new_item$MH,"X509_LOOKUP_meth_set_new_item");
    }
    public static int X509_LOOKUP_meth_set_new_item ( Addressable method,  Addressable new_item) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_set_new_item$MH, "X509_LOOKUP_meth_set_new_item");
        try {
            return (int)mh$.invokeExact(method, new_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_new_item$MH() {
        return RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_get_new_item$MH,"X509_LOOKUP_meth_get_new_item");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_new_item ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.X509_LOOKUP_meth_get_new_item$MH, "X509_LOOKUP_meth_get_new_item");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_free$MH() {
        return RuntimeHelper.requireNonNull(constants$572.X509_LOOKUP_meth_set_free$MH,"X509_LOOKUP_meth_set_free");
    }
    public static int X509_LOOKUP_meth_set_free ( Addressable method,  Addressable free_fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.X509_LOOKUP_meth_set_free$MH, "X509_LOOKUP_meth_set_free");
        try {
            return (int)mh$.invokeExact(method, free_fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_free$MH() {
        return RuntimeHelper.requireNonNull(constants$572.X509_LOOKUP_meth_get_free$MH,"X509_LOOKUP_meth_get_free");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_free ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.X509_LOOKUP_meth_get_free$MH, "X509_LOOKUP_meth_get_free");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_init$MH() {
        return RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_set_init$MH,"X509_LOOKUP_meth_set_init");
    }
    public static int X509_LOOKUP_meth_set_init ( Addressable method,  Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_set_init$MH, "X509_LOOKUP_meth_set_init");
        try {
            return (int)mh$.invokeExact(method, init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_init$MH() {
        return RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_get_init$MH,"X509_LOOKUP_meth_get_init");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_init ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_get_init$MH, "X509_LOOKUP_meth_get_init");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_set_shutdown$MH,"X509_LOOKUP_meth_set_shutdown");
    }
    public static int X509_LOOKUP_meth_set_shutdown ( Addressable method,  Addressable shutdown) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_set_shutdown$MH, "X509_LOOKUP_meth_set_shutdown");
        try {
            return (int)mh$.invokeExact(method, shutdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_get_shutdown$MH,"X509_LOOKUP_meth_get_shutdown");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_shutdown ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.X509_LOOKUP_meth_get_shutdown$MH, "X509_LOOKUP_meth_get_shutdown");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_ctrl$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_ctrl$MH,"X509_LOOKUP_meth_set_ctrl");
    }
    public static int X509_LOOKUP_meth_set_ctrl ( Addressable method,  Addressable ctrl_fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_ctrl$MH, "X509_LOOKUP_meth_set_ctrl");
        try {
            return (int)mh$.invokeExact(method, ctrl_fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_ctrl$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_ctrl$MH,"X509_LOOKUP_meth_get_ctrl");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_ctrl ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_ctrl$MH, "X509_LOOKUP_meth_get_ctrl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_get_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_get_by_subject$MH,"X509_LOOKUP_meth_set_get_by_subject");
    }
    public static int X509_LOOKUP_meth_set_get_by_subject ( Addressable method,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_get_by_subject$MH, "X509_LOOKUP_meth_set_get_by_subject");
        try {
            return (int)mh$.invokeExact(method, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_get_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_get_by_subject$MH,"X509_LOOKUP_meth_get_get_by_subject");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_get_by_subject ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_get_by_subject$MH, "X509_LOOKUP_meth_get_get_by_subject");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_get_by_issuer_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_get_by_issuer_serial$MH,"X509_LOOKUP_meth_set_get_by_issuer_serial");
    }
    public static int X509_LOOKUP_meth_set_get_by_issuer_serial ( Addressable method,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_set_get_by_issuer_serial$MH, "X509_LOOKUP_meth_set_get_by_issuer_serial");
        try {
            return (int)mh$.invokeExact(method, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_get_by_issuer_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_get_by_issuer_serial$MH,"X509_LOOKUP_meth_get_get_by_issuer_serial");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_get_by_issuer_serial ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.X509_LOOKUP_meth_get_get_by_issuer_serial$MH, "X509_LOOKUP_meth_get_get_by_issuer_serial");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_get_by_fingerprint$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_set_get_by_fingerprint$MH,"X509_LOOKUP_meth_set_get_by_fingerprint");
    }
    public static int X509_LOOKUP_meth_set_get_by_fingerprint ( Addressable method,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_set_get_by_fingerprint$MH, "X509_LOOKUP_meth_set_get_by_fingerprint");
        try {
            return (int)mh$.invokeExact(method, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_get_by_fingerprint$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_get_get_by_fingerprint$MH,"X509_LOOKUP_meth_get_get_by_fingerprint");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_get_by_fingerprint ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_get_get_by_fingerprint$MH, "X509_LOOKUP_meth_get_get_by_fingerprint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_set_get_by_alias$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_set_get_by_alias$MH,"X509_LOOKUP_meth_set_get_by_alias");
    }
    public static int X509_LOOKUP_meth_set_get_by_alias ( Addressable method,  Addressable fn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_set_get_by_alias$MH, "X509_LOOKUP_meth_set_get_by_alias");
        try {
            return (int)mh$.invokeExact(method, fn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_meth_get_get_by_alias$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_get_get_by_alias$MH,"X509_LOOKUP_meth_get_get_by_alias");
    }
    public static MemoryAddress X509_LOOKUP_meth_get_get_by_alias ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_LOOKUP_meth_get_get_by_alias$MH, "X509_LOOKUP_meth_get_get_by_alias");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_add_cert$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_STORE_add_cert$MH,"X509_STORE_add_cert");
    }
    public static int X509_STORE_add_cert ( Addressable ctx,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_STORE_add_cert$MH, "X509_STORE_add_cert");
        try {
            return (int)mh$.invokeExact(ctx, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_add_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$575.X509_STORE_add_crl$MH,"X509_STORE_add_crl");
    }
    public static int X509_STORE_add_crl ( Addressable ctx,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.X509_STORE_add_crl$MH, "X509_STORE_add_crl");
        try {
            return (int)mh$.invokeExact(ctx, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_STORE_CTX_get_by_subject$MH,"X509_STORE_CTX_get_by_subject");
    }
    public static int X509_STORE_CTX_get_by_subject ( Addressable vs,  int type,  Addressable name,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_STORE_CTX_get_by_subject$MH, "X509_STORE_CTX_get_by_subject");
        try {
            return (int)mh$.invokeExact(vs, type, name, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_obj_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_STORE_CTX_get_obj_by_subject$MH,"X509_STORE_CTX_get_obj_by_subject");
    }
    public static MemoryAddress X509_STORE_CTX_get_obj_by_subject ( Addressable vs,  int type,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_STORE_CTX_get_obj_by_subject$MH, "X509_STORE_CTX_get_obj_by_subject");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(vs, type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_ctrl$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_LOOKUP_ctrl$MH,"X509_LOOKUP_ctrl");
    }
    public static int X509_LOOKUP_ctrl ( Addressable ctx,  int cmd,  Addressable argc,  long argl,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_LOOKUP_ctrl$MH, "X509_LOOKUP_ctrl");
        try {
            return (int)mh$.invokeExact(ctx, cmd, argc, argl, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_load_cert_file$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_load_cert_file$MH,"X509_load_cert_file");
    }
    public static int X509_load_cert_file ( Addressable ctx,  Addressable file,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_load_cert_file$MH, "X509_load_cert_file");
        try {
            return (int)mh$.invokeExact(ctx, file, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_load_crl_file$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_load_crl_file$MH,"X509_load_crl_file");
    }
    public static int X509_load_crl_file ( Addressable ctx,  Addressable file,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_load_crl_file$MH, "X509_load_crl_file");
        try {
            return (int)mh$.invokeExact(ctx, file, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_load_cert_crl_file$MH() {
        return RuntimeHelper.requireNonNull(constants$576.X509_load_cert_crl_file$MH,"X509_load_cert_crl_file");
    }
    public static int X509_load_cert_crl_file ( Addressable ctx,  Addressable file,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.X509_load_cert_crl_file$MH, "X509_load_cert_crl_file");
        try {
            return (int)mh$.invokeExact(ctx, file, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_new$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_new$MH,"X509_LOOKUP_new");
    }
    public static MemoryAddress X509_LOOKUP_new ( Addressable method) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_new$MH, "X509_LOOKUP_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(method);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_free$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_free$MH,"X509_LOOKUP_free");
    }
    public static void X509_LOOKUP_free ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_free$MH, "X509_LOOKUP_free");
        try {
            mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_init$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_init$MH,"X509_LOOKUP_init");
    }
    public static int X509_LOOKUP_init ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_init$MH, "X509_LOOKUP_init");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_by_subject$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_subject$MH,"X509_LOOKUP_by_subject");
    }
    public static int X509_LOOKUP_by_subject ( Addressable ctx,  int type,  Addressable name,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_subject$MH, "X509_LOOKUP_by_subject");
        try {
            return (int)mh$.invokeExact(ctx, type, name, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_by_issuer_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_issuer_serial$MH,"X509_LOOKUP_by_issuer_serial");
    }
    public static int X509_LOOKUP_by_issuer_serial ( Addressable ctx,  int type,  Addressable name,  Addressable serial,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_issuer_serial$MH, "X509_LOOKUP_by_issuer_serial");
        try {
            return (int)mh$.invokeExact(ctx, type, name, serial, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_by_fingerprint$MH() {
        return RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_fingerprint$MH,"X509_LOOKUP_by_fingerprint");
    }
    public static int X509_LOOKUP_by_fingerprint ( Addressable ctx,  int type,  Addressable bytes,  int len,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.X509_LOOKUP_by_fingerprint$MH, "X509_LOOKUP_by_fingerprint");
        try {
            return (int)mh$.invokeExact(ctx, type, bytes, len, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_by_alias$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_by_alias$MH,"X509_LOOKUP_by_alias");
    }
    public static int X509_LOOKUP_by_alias ( Addressable ctx,  int type,  Addressable str,  int len,  Addressable ret) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_by_alias$MH, "X509_LOOKUP_by_alias");
        try {
            return (int)mh$.invokeExact(ctx, type, str, len, ret);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_set_method_data$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_set_method_data$MH,"X509_LOOKUP_set_method_data");
    }
    public static int X509_LOOKUP_set_method_data ( Addressable ctx,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_set_method_data$MH, "X509_LOOKUP_set_method_data");
        try {
            return (int)mh$.invokeExact(ctx, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_get_method_data$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_get_method_data$MH,"X509_LOOKUP_get_method_data");
    }
    public static MemoryAddress X509_LOOKUP_get_method_data ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_get_method_data$MH, "X509_LOOKUP_get_method_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_get_store$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_get_store$MH,"X509_LOOKUP_get_store");
    }
    public static MemoryAddress X509_LOOKUP_get_store ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_get_store$MH, "X509_LOOKUP_get_store");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_LOOKUP_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_shutdown$MH,"X509_LOOKUP_shutdown");
    }
    public static int X509_LOOKUP_shutdown ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_LOOKUP_shutdown$MH, "X509_LOOKUP_shutdown");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_load_locations$MH() {
        return RuntimeHelper.requireNonNull(constants$578.X509_STORE_load_locations$MH,"X509_STORE_load_locations");
    }
    public static int X509_STORE_load_locations ( Addressable ctx,  Addressable file,  Addressable dir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.X509_STORE_load_locations$MH, "X509_STORE_load_locations");
        try {
            return (int)mh$.invokeExact(ctx, file, dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_set_default_paths$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_set_default_paths$MH,"X509_STORE_set_default_paths");
    }
    public static int X509_STORE_set_default_paths ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_set_default_paths$MH, "X509_STORE_set_default_paths");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_set_ex_data$MH,"X509_STORE_CTX_set_ex_data");
    }
    public static int X509_STORE_CTX_set_ex_data ( Addressable ctx,  int idx,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_set_ex_data$MH, "X509_STORE_CTX_set_ex_data");
        try {
            return (int)mh$.invokeExact(ctx, idx, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_ex_data$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_ex_data$MH,"X509_STORE_CTX_get_ex_data");
    }
    public static MemoryAddress X509_STORE_CTX_get_ex_data ( Addressable ctx,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_ex_data$MH, "X509_STORE_CTX_get_ex_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_error$MH,"X509_STORE_CTX_get_error");
    }
    public static int X509_STORE_CTX_get_error ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_error$MH, "X509_STORE_CTX_get_error");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_set_error$MH,"X509_STORE_CTX_set_error");
    }
    public static void X509_STORE_CTX_set_error ( Addressable ctx,  int s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_set_error$MH, "X509_STORE_CTX_set_error");
        try {
            mh$.invokeExact(ctx, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_error_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_error_depth$MH,"X509_STORE_CTX_get_error_depth");
    }
    public static int X509_STORE_CTX_get_error_depth ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.X509_STORE_CTX_get_error_depth$MH, "X509_STORE_CTX_get_error_depth");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_error_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_set_error_depth$MH,"X509_STORE_CTX_set_error_depth");
    }
    public static void X509_STORE_CTX_set_error_depth ( Addressable ctx,  int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_set_error_depth$MH, "X509_STORE_CTX_set_error_depth");
        try {
            mh$.invokeExact(ctx, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_current_cert$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get_current_cert$MH,"X509_STORE_CTX_get_current_cert");
    }
    public static MemoryAddress X509_STORE_CTX_get_current_cert ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get_current_cert$MH, "X509_STORE_CTX_get_current_cert");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_current_cert$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_set_current_cert$MH,"X509_STORE_CTX_set_current_cert");
    }
    public static void X509_STORE_CTX_set_current_cert ( Addressable ctx,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_set_current_cert$MH, "X509_STORE_CTX_set_current_cert");
        try {
            mh$.invokeExact(ctx, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_current_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_current_issuer$MH,"X509_STORE_CTX_get0_current_issuer");
    }
    public static MemoryAddress X509_STORE_CTX_get0_current_issuer ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_current_issuer$MH, "X509_STORE_CTX_get0_current_issuer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_current_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_current_crl$MH,"X509_STORE_CTX_get0_current_crl");
    }
    public static MemoryAddress X509_STORE_CTX_get0_current_crl ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_current_crl$MH, "X509_STORE_CTX_get0_current_crl");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_parent_ctx$MH() {
        return RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_parent_ctx$MH,"X509_STORE_CTX_get0_parent_ctx");
    }
    public static MemoryAddress X509_STORE_CTX_get0_parent_ctx ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.X509_STORE_CTX_get0_parent_ctx$MH, "X509_STORE_CTX_get0_parent_ctx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_get0_chain$MH,"X509_STORE_CTX_get0_chain");
    }
    public static MemoryAddress X509_STORE_CTX_get0_chain ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_get0_chain$MH, "X509_STORE_CTX_get0_chain");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get1_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_get1_chain$MH,"X509_STORE_CTX_get1_chain");
    }
    public static MemoryAddress X509_STORE_CTX_get1_chain ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_get1_chain$MH, "X509_STORE_CTX_get1_chain");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_cert$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set_cert$MH,"X509_STORE_CTX_set_cert");
    }
    public static void X509_STORE_CTX_set_cert ( Addressable c,  Addressable x) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set_cert$MH, "X509_STORE_CTX_set_cert");
        try {
            mh$.invokeExact(c, x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_verified_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set0_verified_chain$MH,"X509_STORE_CTX_set0_verified_chain");
    }
    public static void X509_STORE_CTX_set0_verified_chain ( Addressable c,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set0_verified_chain$MH, "X509_STORE_CTX_set0_verified_chain");
        try {
            mh$.invokeExact(c, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_crls$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set0_crls$MH,"X509_STORE_CTX_set0_crls");
    }
    public static void X509_STORE_CTX_set0_crls ( Addressable c,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set0_crls$MH, "X509_STORE_CTX_set0_crls");
        try {
            mh$.invokeExact(c, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set_purpose$MH,"X509_STORE_CTX_set_purpose");
    }
    public static int X509_STORE_CTX_set_purpose ( Addressable ctx,  int purpose) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.X509_STORE_CTX_set_purpose$MH, "X509_STORE_CTX_set_purpose");
        try {
            return (int)mh$.invokeExact(ctx, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_trust$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_trust$MH,"X509_STORE_CTX_set_trust");
    }
    public static int X509_STORE_CTX_set_trust ( Addressable ctx,  int trust) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_trust$MH, "X509_STORE_CTX_set_trust");
        try {
            return (int)mh$.invokeExact(ctx, trust);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_purpose_inherit$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_purpose_inherit$MH,"X509_STORE_CTX_purpose_inherit");
    }
    public static int X509_STORE_CTX_purpose_inherit ( Addressable ctx,  int def_purpose,  int purpose,  int trust) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_purpose_inherit$MH, "X509_STORE_CTX_purpose_inherit");
        try {
            return (int)mh$.invokeExact(ctx, def_purpose, purpose, trust);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_flags$MH,"X509_STORE_CTX_set_flags");
    }
    public static void X509_STORE_CTX_set_flags ( Addressable ctx,  long flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_flags$MH, "X509_STORE_CTX_set_flags");
        try {
            mh$.invokeExact(ctx, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_time$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_time$MH,"X509_STORE_CTX_set_time");
    }
    public static void X509_STORE_CTX_set_time ( Addressable ctx,  long flags,  long t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_set_time$MH, "X509_STORE_CTX_set_time");
        try {
            mh$.invokeExact(ctx, flags, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_policy_tree$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_get0_policy_tree$MH,"X509_STORE_CTX_get0_policy_tree");
    }
    public static MemoryAddress X509_STORE_CTX_get0_policy_tree ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_get0_policy_tree$MH, "X509_STORE_CTX_get0_policy_tree");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_explicit_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_get_explicit_policy$MH,"X509_STORE_CTX_get_explicit_policy");
    }
    public static int X509_STORE_CTX_get_explicit_policy ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.X509_STORE_CTX_get_explicit_policy$MH, "X509_STORE_CTX_get_explicit_policy");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get_num_untrusted$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_get_num_untrusted$MH,"X509_STORE_CTX_get_num_untrusted");
    }
    public static int X509_STORE_CTX_get_num_untrusted ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_get_num_untrusted$MH, "X509_STORE_CTX_get_num_untrusted");
        try {
            return (int)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_get0_param$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_get0_param$MH,"X509_STORE_CTX_get0_param");
    }
    public static MemoryAddress X509_STORE_CTX_get0_param ( Addressable ctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_get0_param$MH, "X509_STORE_CTX_get0_param");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(ctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_param$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set0_param$MH,"X509_STORE_CTX_set0_param");
    }
    public static void X509_STORE_CTX_set0_param ( Addressable ctx,  Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set0_param$MH, "X509_STORE_CTX_set0_param");
        try {
            mh$.invokeExact(ctx, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set_default$MH,"X509_STORE_CTX_set_default");
    }
    public static int X509_STORE_CTX_set_default ( Addressable ctx,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set_default$MH, "X509_STORE_CTX_set_default");
        try {
            return (int)mh$.invokeExact(ctx, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_STORE_CTX_set0_dane$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set0_dane$MH,"X509_STORE_CTX_set0_dane");
    }
    public static void X509_STORE_CTX_set0_dane ( Addressable ctx,  Addressable dane) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_STORE_CTX_set0_dane$MH, "X509_STORE_CTX_set0_dane");
        try {
            mh$.invokeExact(ctx, dane);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_new$MH() {
        return RuntimeHelper.requireNonNull(constants$583.X509_VERIFY_PARAM_new$MH,"X509_VERIFY_PARAM_new");
    }
    public static MemoryAddress X509_VERIFY_PARAM_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.X509_VERIFY_PARAM_new$MH, "X509_VERIFY_PARAM_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_free$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_free$MH,"X509_VERIFY_PARAM_free");
    }
    public static void X509_VERIFY_PARAM_free ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_free$MH, "X509_VERIFY_PARAM_free");
        try {
            mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_inherit$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_inherit$MH,"X509_VERIFY_PARAM_inherit");
    }
    public static int X509_VERIFY_PARAM_inherit ( Addressable to,  Addressable from) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_inherit$MH, "X509_VERIFY_PARAM_inherit");
        try {
            return (int)mh$.invokeExact(to, from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set1$MH,"X509_VERIFY_PARAM_set1");
    }
    public static int X509_VERIFY_PARAM_set1 ( Addressable to,  Addressable from) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set1$MH, "X509_VERIFY_PARAM_set1");
        try {
            return (int)mh$.invokeExact(to, from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_name$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set1_name$MH,"X509_VERIFY_PARAM_set1_name");
    }
    public static int X509_VERIFY_PARAM_set1_name ( Addressable param,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set1_name$MH, "X509_VERIFY_PARAM_set1_name");
        try {
            return (int)mh$.invokeExact(param, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set_flags$MH,"X509_VERIFY_PARAM_set_flags");
    }
    public static int X509_VERIFY_PARAM_set_flags ( Addressable param,  long flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_set_flags$MH, "X509_VERIFY_PARAM_set_flags");
        try {
            return (int)mh$.invokeExact(param, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_clear_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_clear_flags$MH,"X509_VERIFY_PARAM_clear_flags");
    }
    public static int X509_VERIFY_PARAM_clear_flags ( Addressable param,  long flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.X509_VERIFY_PARAM_clear_flags$MH, "X509_VERIFY_PARAM_clear_flags");
        try {
            return (int)mh$.invokeExact(param, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_get_flags$MH,"X509_VERIFY_PARAM_get_flags");
    }
    public static long X509_VERIFY_PARAM_get_flags ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_get_flags$MH, "X509_VERIFY_PARAM_get_flags");
        try {
            return (long)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_purpose$MH,"X509_VERIFY_PARAM_set_purpose");
    }
    public static int X509_VERIFY_PARAM_set_purpose ( Addressable param,  int purpose) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_purpose$MH, "X509_VERIFY_PARAM_set_purpose");
        try {
            return (int)mh$.invokeExact(param, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_trust$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_trust$MH,"X509_VERIFY_PARAM_set_trust");
    }
    public static int X509_VERIFY_PARAM_set_trust ( Addressable param,  int trust) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_trust$MH, "X509_VERIFY_PARAM_set_trust");
        try {
            return (int)mh$.invokeExact(param, trust);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_depth$MH,"X509_VERIFY_PARAM_set_depth");
    }
    public static void X509_VERIFY_PARAM_set_depth ( Addressable param,  int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_depth$MH, "X509_VERIFY_PARAM_set_depth");
        try {
            mh$.invokeExact(param, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_auth_level$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_auth_level$MH,"X509_VERIFY_PARAM_set_auth_level");
    }
    public static void X509_VERIFY_PARAM_set_auth_level ( Addressable param,  int auth_level) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_set_auth_level$MH, "X509_VERIFY_PARAM_set_auth_level");
        try {
            mh$.invokeExact(param, auth_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_get_time$MH,"X509_VERIFY_PARAM_get_time");
    }
    public static long X509_VERIFY_PARAM_get_time ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.X509_VERIFY_PARAM_get_time$MH, "X509_VERIFY_PARAM_get_time");
        try {
            return (long)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_time$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set_time$MH,"X509_VERIFY_PARAM_set_time");
    }
    public static void X509_VERIFY_PARAM_set_time ( Addressable param,  long t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set_time$MH, "X509_VERIFY_PARAM_set_time");
        try {
            mh$.invokeExact(param, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_add0_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_add0_policy$MH,"X509_VERIFY_PARAM_add0_policy");
    }
    public static int X509_VERIFY_PARAM_add0_policy ( Addressable param,  Addressable policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_add0_policy$MH, "X509_VERIFY_PARAM_add0_policy");
        try {
            return (int)mh$.invokeExact(param, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_policies$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set1_policies$MH,"X509_VERIFY_PARAM_set1_policies");
    }
    public static int X509_VERIFY_PARAM_set1_policies ( Addressable param,  Addressable policies) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set1_policies$MH, "X509_VERIFY_PARAM_set1_policies");
        try {
            return (int)mh$.invokeExact(param, policies);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_inh_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set_inh_flags$MH,"X509_VERIFY_PARAM_set_inh_flags");
    }
    public static int X509_VERIFY_PARAM_set_inh_flags ( Addressable param,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set_inh_flags$MH, "X509_VERIFY_PARAM_set_inh_flags");
        try {
            return (int)mh$.invokeExact(param, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_inh_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_get_inh_flags$MH,"X509_VERIFY_PARAM_get_inh_flags");
    }
    public static int X509_VERIFY_PARAM_get_inh_flags ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_get_inh_flags$MH, "X509_VERIFY_PARAM_get_inh_flags");
        try {
            return (int)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_host$MH() {
        return RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set1_host$MH,"X509_VERIFY_PARAM_set1_host");
    }
    public static int X509_VERIFY_PARAM_set1_host ( Addressable param,  Addressable name,  long namelen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.X509_VERIFY_PARAM_set1_host$MH, "X509_VERIFY_PARAM_set1_host");
        try {
            return (int)mh$.invokeExact(param, name, namelen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_add1_host$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_add1_host$MH,"X509_VERIFY_PARAM_add1_host");
    }
    public static int X509_VERIFY_PARAM_add1_host ( Addressable param,  Addressable name,  long namelen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_add1_host$MH, "X509_VERIFY_PARAM_add1_host");
        try {
            return (int)mh$.invokeExact(param, name, namelen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set_hostflags$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_set_hostflags$MH,"X509_VERIFY_PARAM_set_hostflags");
    }
    public static void X509_VERIFY_PARAM_set_hostflags ( Addressable param,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_set_hostflags$MH, "X509_VERIFY_PARAM_set_hostflags");
        try {
            mh$.invokeExact(param, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_hostflags$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_get_hostflags$MH,"X509_VERIFY_PARAM_get_hostflags");
    }
    public static int X509_VERIFY_PARAM_get_hostflags ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_get_hostflags$MH, "X509_VERIFY_PARAM_get_hostflags");
        try {
            return (int)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get0_peername$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_get0_peername$MH,"X509_VERIFY_PARAM_get0_peername");
    }
    public static MemoryAddress X509_VERIFY_PARAM_get0_peername ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_get0_peername$MH, "X509_VERIFY_PARAM_get0_peername");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_move_peername$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_move_peername$MH,"X509_VERIFY_PARAM_move_peername");
    }
    public static void X509_VERIFY_PARAM_move_peername ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_move_peername$MH, "X509_VERIFY_PARAM_move_peername");
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_email$MH() {
        return RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_set1_email$MH,"X509_VERIFY_PARAM_set1_email");
    }
    public static int X509_VERIFY_PARAM_set1_email ( Addressable param,  Addressable email,  long emaillen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.X509_VERIFY_PARAM_set1_email$MH, "X509_VERIFY_PARAM_set1_email");
        try {
            return (int)mh$.invokeExact(param, email, emaillen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_ip$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_set1_ip$MH,"X509_VERIFY_PARAM_set1_ip");
    }
    public static int X509_VERIFY_PARAM_set1_ip ( Addressable param,  Addressable ip,  long iplen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_set1_ip$MH, "X509_VERIFY_PARAM_set1_ip");
        try {
            return (int)mh$.invokeExact(param, ip, iplen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_set1_ip_asc$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_set1_ip_asc$MH,"X509_VERIFY_PARAM_set1_ip_asc");
    }
    public static int X509_VERIFY_PARAM_set1_ip_asc ( Addressable param,  Addressable ipasc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_set1_ip_asc$MH, "X509_VERIFY_PARAM_set1_ip_asc");
        try {
            return (int)mh$.invokeExact(param, ipasc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get_depth$MH,"X509_VERIFY_PARAM_get_depth");
    }
    public static int X509_VERIFY_PARAM_get_depth ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get_depth$MH, "X509_VERIFY_PARAM_get_depth");
        try {
            return (int)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_auth_level$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get_auth_level$MH,"X509_VERIFY_PARAM_get_auth_level");
    }
    public static int X509_VERIFY_PARAM_get_auth_level ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get_auth_level$MH, "X509_VERIFY_PARAM_get_auth_level");
        try {
            return (int)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get0_name$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get0_name$MH,"X509_VERIFY_PARAM_get0_name");
    }
    public static MemoryAddress X509_VERIFY_PARAM_get0_name ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_get0_name$MH, "X509_VERIFY_PARAM_get0_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_add0_table$MH() {
        return RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_add0_table$MH,"X509_VERIFY_PARAM_add0_table");
    }
    public static int X509_VERIFY_PARAM_add0_table ( Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.X509_VERIFY_PARAM_add0_table$MH, "X509_VERIFY_PARAM_add0_table");
        try {
            return (int)mh$.invokeExact(param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get_count$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_get_count$MH,"X509_VERIFY_PARAM_get_count");
    }
    public static int X509_VERIFY_PARAM_get_count () {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_get_count$MH, "X509_VERIFY_PARAM_get_count");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_get0$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_get0$MH,"X509_VERIFY_PARAM_get0");
    }
    public static MemoryAddress X509_VERIFY_PARAM_get0 ( int id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_get0$MH, "X509_VERIFY_PARAM_get0");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_lookup$MH,"X509_VERIFY_PARAM_lookup");
    }
    public static MemoryAddress X509_VERIFY_PARAM_lookup ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_lookup$MH, "X509_VERIFY_PARAM_lookup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_VERIFY_PARAM_table_cleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_table_cleanup$MH,"X509_VERIFY_PARAM_table_cleanup");
    }
    public static void X509_VERIFY_PARAM_table_cleanup () {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_VERIFY_PARAM_table_cleanup$MH, "X509_VERIFY_PARAM_table_cleanup");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_check$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_policy_check$MH,"X509_policy_check");
    }
    public static int X509_policy_check ( Addressable ptree,  Addressable pexplicit_policy,  Addressable certs,  Addressable policy_oids,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_policy_check$MH, "X509_policy_check");
        try {
            return (int)mh$.invokeExact(ptree, pexplicit_policy, certs, policy_oids, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_tree_free$MH() {
        return RuntimeHelper.requireNonNull(constants$589.X509_policy_tree_free$MH,"X509_policy_tree_free");
    }
    public static void X509_policy_tree_free ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.X509_policy_tree_free$MH, "X509_policy_tree_free");
        try {
            mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_tree_level_count$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_level_count$MH,"X509_policy_tree_level_count");
    }
    public static int X509_policy_tree_level_count ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_level_count$MH, "X509_policy_tree_level_count");
        try {
            return (int)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_tree_get0_level$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_level$MH,"X509_policy_tree_get0_level");
    }
    public static MemoryAddress X509_policy_tree_get0_level ( Addressable tree,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_level$MH, "X509_policy_tree_get0_level");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(tree, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_tree_get0_policies$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_policies$MH,"X509_policy_tree_get0_policies");
    }
    public static MemoryAddress X509_policy_tree_get0_policies ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_policies$MH, "X509_policy_tree_get0_policies");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_tree_get0_user_policies$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_user_policies$MH,"X509_policy_tree_get0_user_policies");
    }
    public static MemoryAddress X509_policy_tree_get0_user_policies ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_tree_get0_user_policies$MH, "X509_policy_tree_get0_user_policies");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_level_node_count$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_level_node_count$MH,"X509_policy_level_node_count");
    }
    public static int X509_policy_level_node_count ( Addressable level) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_level_node_count$MH, "X509_policy_level_node_count");
        try {
            return (int)mh$.invokeExact(level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_level_get0_node$MH() {
        return RuntimeHelper.requireNonNull(constants$590.X509_policy_level_get0_node$MH,"X509_policy_level_get0_node");
    }
    public static MemoryAddress X509_policy_level_get0_node ( Addressable level,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.X509_policy_level_get0_node$MH, "X509_policy_level_get0_node");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(level, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_node_get0_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_policy$MH,"X509_policy_node_get0_policy");
    }
    public static MemoryAddress X509_policy_node_get0_policy ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_policy$MH, "X509_policy_node_get0_policy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_node_get0_qualifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_qualifiers$MH,"X509_policy_node_get0_qualifiers");
    }
    public static MemoryAddress X509_policy_node_get0_qualifiers ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_qualifiers$MH, "X509_policy_node_get0_qualifiers");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_policy_node_get0_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_parent$MH,"X509_policy_node_get0_parent");
    }
    public static MemoryAddress X509_policy_node_get0_parent ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.X509_policy_node_get0_parent$MH, "X509_policy_node_get0_parent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ERR_load_PKCS7_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$591.ERR_load_PKCS7_strings$MH,"ERR_load_PKCS7_strings");
    }
    public static int ERR_load_PKCS7_strings () {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.ERR_load_PKCS7_strings$MH, "ERR_load_PKCS7_strings");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_num$MH() {
        return RuntimeHelper.requireNonNull(constants$592.sk_PKCS7_SIGNER_INFO_num$MH,"sk_PKCS7_SIGNER_INFO_num");
    }
    public static int sk_PKCS7_SIGNER_INFO_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.sk_PKCS7_SIGNER_INFO_num$MH, "sk_PKCS7_SIGNER_INFO_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_value$MH() {
        return RuntimeHelper.requireNonNull(constants$592.sk_PKCS7_SIGNER_INFO_value$MH,"sk_PKCS7_SIGNER_INFO_value");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.sk_PKCS7_SIGNER_INFO_value$MH, "sk_PKCS7_SIGNER_INFO_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_new$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new$MH,"sk_PKCS7_SIGNER_INFO_new");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new$MH, "sk_PKCS7_SIGNER_INFO_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new_null$MH,"sk_PKCS7_SIGNER_INFO_new_null");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new_null$MH, "sk_PKCS7_SIGNER_INFO_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new_reserve$MH,"sk_PKCS7_SIGNER_INFO_new_reserve");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_new_reserve$MH, "sk_PKCS7_SIGNER_INFO_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_reserve$MH,"sk_PKCS7_SIGNER_INFO_reserve");
    }
    public static int sk_PKCS7_SIGNER_INFO_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_reserve$MH, "sk_PKCS7_SIGNER_INFO_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_free$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_free$MH,"sk_PKCS7_SIGNER_INFO_free");
    }
    public static void sk_PKCS7_SIGNER_INFO_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_free$MH, "sk_PKCS7_SIGNER_INFO_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_zero$MH,"sk_PKCS7_SIGNER_INFO_zero");
    }
    public static void sk_PKCS7_SIGNER_INFO_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.sk_PKCS7_SIGNER_INFO_zero$MH, "sk_PKCS7_SIGNER_INFO_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_delete$MH,"sk_PKCS7_SIGNER_INFO_delete");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_delete$MH, "sk_PKCS7_SIGNER_INFO_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_delete_ptr$MH,"sk_PKCS7_SIGNER_INFO_delete_ptr");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_delete_ptr$MH, "sk_PKCS7_SIGNER_INFO_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_push$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_push$MH,"sk_PKCS7_SIGNER_INFO_push");
    }
    public static int sk_PKCS7_SIGNER_INFO_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_push$MH, "sk_PKCS7_SIGNER_INFO_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_unshift$MH,"sk_PKCS7_SIGNER_INFO_unshift");
    }
    public static int sk_PKCS7_SIGNER_INFO_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_unshift$MH, "sk_PKCS7_SIGNER_INFO_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_pop$MH,"sk_PKCS7_SIGNER_INFO_pop");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_pop$MH, "sk_PKCS7_SIGNER_INFO_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_shift$MH,"sk_PKCS7_SIGNER_INFO_shift");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.sk_PKCS7_SIGNER_INFO_shift$MH, "sk_PKCS7_SIGNER_INFO_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_pop_free$MH,"sk_PKCS7_SIGNER_INFO_pop_free");
    }
    public static void sk_PKCS7_SIGNER_INFO_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_pop_free$MH, "sk_PKCS7_SIGNER_INFO_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_insert$MH,"sk_PKCS7_SIGNER_INFO_insert");
    }
    public static int sk_PKCS7_SIGNER_INFO_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_insert$MH, "sk_PKCS7_SIGNER_INFO_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_set$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_set$MH,"sk_PKCS7_SIGNER_INFO_set");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_set$MH, "sk_PKCS7_SIGNER_INFO_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_find$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_find$MH,"sk_PKCS7_SIGNER_INFO_find");
    }
    public static int sk_PKCS7_SIGNER_INFO_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_find$MH, "sk_PKCS7_SIGNER_INFO_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_find_ex$MH,"sk_PKCS7_SIGNER_INFO_find_ex");
    }
    public static int sk_PKCS7_SIGNER_INFO_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_find_ex$MH, "sk_PKCS7_SIGNER_INFO_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_sort$MH,"sk_PKCS7_SIGNER_INFO_sort");
    }
    public static void sk_PKCS7_SIGNER_INFO_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.sk_PKCS7_SIGNER_INFO_sort$MH, "sk_PKCS7_SIGNER_INFO_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_is_sorted$MH,"sk_PKCS7_SIGNER_INFO_is_sorted");
    }
    public static int sk_PKCS7_SIGNER_INFO_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_is_sorted$MH, "sk_PKCS7_SIGNER_INFO_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_dup$MH,"sk_PKCS7_SIGNER_INFO_dup");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_dup$MH, "sk_PKCS7_SIGNER_INFO_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_deep_copy$MH,"sk_PKCS7_SIGNER_INFO_deep_copy");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_deep_copy$MH, "sk_PKCS7_SIGNER_INFO_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_SIGNER_INFO_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_set_cmp_func$MH,"sk_PKCS7_SIGNER_INFO_set_cmp_func");
    }
    public static MemoryAddress sk_PKCS7_SIGNER_INFO_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.sk_PKCS7_SIGNER_INFO_set_cmp_func$MH, "sk_PKCS7_SIGNER_INFO_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_num$MH() {
        return RuntimeHelper.requireNonNull(constants$597.sk_PKCS7_RECIP_INFO_num$MH,"sk_PKCS7_RECIP_INFO_num");
    }
    public static int sk_PKCS7_RECIP_INFO_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.sk_PKCS7_RECIP_INFO_num$MH, "sk_PKCS7_RECIP_INFO_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_value$MH() {
        return RuntimeHelper.requireNonNull(constants$597.sk_PKCS7_RECIP_INFO_value$MH,"sk_PKCS7_RECIP_INFO_value");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.sk_PKCS7_RECIP_INFO_value$MH, "sk_PKCS7_RECIP_INFO_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_new$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new$MH,"sk_PKCS7_RECIP_INFO_new");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new$MH, "sk_PKCS7_RECIP_INFO_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new_null$MH,"sk_PKCS7_RECIP_INFO_new_null");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new_null$MH, "sk_PKCS7_RECIP_INFO_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new_reserve$MH,"sk_PKCS7_RECIP_INFO_new_reserve");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_new_reserve$MH, "sk_PKCS7_RECIP_INFO_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_reserve$MH,"sk_PKCS7_RECIP_INFO_reserve");
    }
    public static int sk_PKCS7_RECIP_INFO_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_reserve$MH, "sk_PKCS7_RECIP_INFO_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_free$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_free$MH,"sk_PKCS7_RECIP_INFO_free");
    }
    public static void sk_PKCS7_RECIP_INFO_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_free$MH, "sk_PKCS7_RECIP_INFO_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_zero$MH,"sk_PKCS7_RECIP_INFO_zero");
    }
    public static void sk_PKCS7_RECIP_INFO_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.sk_PKCS7_RECIP_INFO_zero$MH, "sk_PKCS7_RECIP_INFO_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_delete$MH,"sk_PKCS7_RECIP_INFO_delete");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_delete$MH, "sk_PKCS7_RECIP_INFO_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_delete_ptr$MH,"sk_PKCS7_RECIP_INFO_delete_ptr");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_delete_ptr$MH, "sk_PKCS7_RECIP_INFO_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_push$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_push$MH,"sk_PKCS7_RECIP_INFO_push");
    }
    public static int sk_PKCS7_RECIP_INFO_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_push$MH, "sk_PKCS7_RECIP_INFO_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_unshift$MH,"sk_PKCS7_RECIP_INFO_unshift");
    }
    public static int sk_PKCS7_RECIP_INFO_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_unshift$MH, "sk_PKCS7_RECIP_INFO_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_pop$MH,"sk_PKCS7_RECIP_INFO_pop");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_pop$MH, "sk_PKCS7_RECIP_INFO_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_shift$MH,"sk_PKCS7_RECIP_INFO_shift");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.sk_PKCS7_RECIP_INFO_shift$MH, "sk_PKCS7_RECIP_INFO_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_pop_free$MH,"sk_PKCS7_RECIP_INFO_pop_free");
    }
    public static void sk_PKCS7_RECIP_INFO_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_pop_free$MH, "sk_PKCS7_RECIP_INFO_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_insert$MH,"sk_PKCS7_RECIP_INFO_insert");
    }
    public static int sk_PKCS7_RECIP_INFO_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_insert$MH, "sk_PKCS7_RECIP_INFO_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_set$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_set$MH,"sk_PKCS7_RECIP_INFO_set");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_set$MH, "sk_PKCS7_RECIP_INFO_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_find$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_find$MH,"sk_PKCS7_RECIP_INFO_find");
    }
    public static int sk_PKCS7_RECIP_INFO_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_find$MH, "sk_PKCS7_RECIP_INFO_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_find_ex$MH,"sk_PKCS7_RECIP_INFO_find_ex");
    }
    public static int sk_PKCS7_RECIP_INFO_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_find_ex$MH, "sk_PKCS7_RECIP_INFO_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_sort$MH,"sk_PKCS7_RECIP_INFO_sort");
    }
    public static void sk_PKCS7_RECIP_INFO_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.sk_PKCS7_RECIP_INFO_sort$MH, "sk_PKCS7_RECIP_INFO_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_is_sorted$MH,"sk_PKCS7_RECIP_INFO_is_sorted");
    }
    public static int sk_PKCS7_RECIP_INFO_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_is_sorted$MH, "sk_PKCS7_RECIP_INFO_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_dup$MH,"sk_PKCS7_RECIP_INFO_dup");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_dup$MH, "sk_PKCS7_RECIP_INFO_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_deep_copy$MH,"sk_PKCS7_RECIP_INFO_deep_copy");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_deep_copy$MH, "sk_PKCS7_RECIP_INFO_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_RECIP_INFO_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_set_cmp_func$MH,"sk_PKCS7_RECIP_INFO_set_cmp_func");
    }
    public static MemoryAddress sk_PKCS7_RECIP_INFO_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.sk_PKCS7_RECIP_INFO_set_cmp_func$MH, "sk_PKCS7_RECIP_INFO_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_num$MH() {
        return RuntimeHelper.requireNonNull(constants$602.sk_PKCS7_num$MH,"sk_PKCS7_num");
    }
    public static int sk_PKCS7_num ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.sk_PKCS7_num$MH, "sk_PKCS7_num");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_value$MH() {
        return RuntimeHelper.requireNonNull(constants$602.sk_PKCS7_value$MH,"sk_PKCS7_value");
    }
    public static MemoryAddress sk_PKCS7_value ( Addressable sk,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.sk_PKCS7_value$MH, "sk_PKCS7_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_new$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new$MH,"sk_PKCS7_new");
    }
    public static MemoryAddress sk_PKCS7_new ( Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new$MH, "sk_PKCS7_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_new_null$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new_null$MH,"sk_PKCS7_new_null");
    }
    public static MemoryAddress sk_PKCS7_new_null () {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new_null$MH, "sk_PKCS7_new_null");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_new_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new_reserve$MH,"sk_PKCS7_new_reserve");
    }
    public static MemoryAddress sk_PKCS7_new_reserve ( Addressable compare,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_new_reserve$MH, "sk_PKCS7_new_reserve");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compare, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_reserve$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_reserve$MH,"sk_PKCS7_reserve");
    }
    public static int sk_PKCS7_reserve ( Addressable sk,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_reserve$MH, "sk_PKCS7_reserve");
        try {
            return (int)mh$.invokeExact(sk, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_free$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_free$MH,"sk_PKCS7_free");
    }
    public static void sk_PKCS7_free ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_free$MH, "sk_PKCS7_free");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_zero$MH,"sk_PKCS7_zero");
    }
    public static void sk_PKCS7_zero ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.sk_PKCS7_zero$MH, "sk_PKCS7_zero");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_delete$MH,"sk_PKCS7_delete");
    }
    public static MemoryAddress sk_PKCS7_delete ( Addressable sk,  int i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_delete$MH, "sk_PKCS7_delete");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_delete_ptr$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_delete_ptr$MH,"sk_PKCS7_delete_ptr");
    }
    public static MemoryAddress sk_PKCS7_delete_ptr ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_delete_ptr$MH, "sk_PKCS7_delete_ptr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_push$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_push$MH,"sk_PKCS7_push");
    }
    public static int sk_PKCS7_push ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_push$MH, "sk_PKCS7_push");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_unshift$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_unshift$MH,"sk_PKCS7_unshift");
    }
    public static int sk_PKCS7_unshift ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_unshift$MH, "sk_PKCS7_unshift");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_pop$MH,"sk_PKCS7_pop");
    }
    public static MemoryAddress sk_PKCS7_pop ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_pop$MH, "sk_PKCS7_pop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_shift$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_shift$MH,"sk_PKCS7_shift");
    }
    public static MemoryAddress sk_PKCS7_shift ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.sk_PKCS7_shift$MH, "sk_PKCS7_shift");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_pop_free$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_pop_free$MH,"sk_PKCS7_pop_free");
    }
    public static void sk_PKCS7_pop_free ( Addressable sk,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_pop_free$MH, "sk_PKCS7_pop_free");
        try {
            mh$.invokeExact(sk, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_insert$MH,"sk_PKCS7_insert");
    }
    public static int sk_PKCS7_insert ( Addressable sk,  Addressable ptr,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_insert$MH, "sk_PKCS7_insert");
        try {
            return (int)mh$.invokeExact(sk, ptr, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_set$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_set$MH,"sk_PKCS7_set");
    }
    public static MemoryAddress sk_PKCS7_set ( Addressable sk,  int idx,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_set$MH, "sk_PKCS7_set");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, idx, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_find$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_find$MH,"sk_PKCS7_find");
    }
    public static int sk_PKCS7_find ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_find$MH, "sk_PKCS7_find");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_find_ex$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_find_ex$MH,"sk_PKCS7_find_ex");
    }
    public static int sk_PKCS7_find_ex ( Addressable sk,  Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_find_ex$MH, "sk_PKCS7_find_ex");
        try {
            return (int)mh$.invokeExact(sk, ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_sort$MH,"sk_PKCS7_sort");
    }
    public static void sk_PKCS7_sort ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.sk_PKCS7_sort$MH, "sk_PKCS7_sort");
        try {
            mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_is_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_is_sorted$MH,"sk_PKCS7_is_sorted");
    }
    public static int sk_PKCS7_is_sorted ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_is_sorted$MH, "sk_PKCS7_is_sorted");
        try {
            return (int)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_dup$MH,"sk_PKCS7_dup");
    }
    public static MemoryAddress sk_PKCS7_dup ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_dup$MH, "sk_PKCS7_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_deep_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_deep_copy$MH,"sk_PKCS7_deep_copy");
    }
    public static MemoryAddress sk_PKCS7_deep_copy ( Addressable sk,  Addressable copyfunc,  Addressable freefunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_deep_copy$MH, "sk_PKCS7_deep_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, copyfunc, freefunc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sk_PKCS7_set_cmp_func$MH() {
        return RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_set_cmp_func$MH,"sk_PKCS7_set_cmp_func");
    }
    public static MemoryAddress sk_PKCS7_set_cmp_func ( Addressable sk,  Addressable compare) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.sk_PKCS7_set_cmp_func$MH, "sk_PKCS7_set_cmp_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk, compare);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ISSUER_AND_SERIAL_new$MH() {
        return RuntimeHelper.requireNonNull(constants$606.PKCS7_ISSUER_AND_SERIAL_new$MH,"PKCS7_ISSUER_AND_SERIAL_new");
    }
    public static MemoryAddress PKCS7_ISSUER_AND_SERIAL_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.PKCS7_ISSUER_AND_SERIAL_new$MH, "PKCS7_ISSUER_AND_SERIAL_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ISSUER_AND_SERIAL_free$MH() {
        return RuntimeHelper.requireNonNull(constants$606.PKCS7_ISSUER_AND_SERIAL_free$MH,"PKCS7_ISSUER_AND_SERIAL_free");
    }
    public static void PKCS7_ISSUER_AND_SERIAL_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.PKCS7_ISSUER_AND_SERIAL_free$MH, "PKCS7_ISSUER_AND_SERIAL_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_ISSUER_AND_SERIAL$MH() {
        return RuntimeHelper.requireNonNull(constants$607.d2i_PKCS7_ISSUER_AND_SERIAL$MH,"d2i_PKCS7_ISSUER_AND_SERIAL");
    }
    public static MemoryAddress d2i_PKCS7_ISSUER_AND_SERIAL ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.d2i_PKCS7_ISSUER_AND_SERIAL$MH, "d2i_PKCS7_ISSUER_AND_SERIAL");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_ISSUER_AND_SERIAL$MH() {
        return RuntimeHelper.requireNonNull(constants$607.i2d_PKCS7_ISSUER_AND_SERIAL$MH,"i2d_PKCS7_ISSUER_AND_SERIAL");
    }
    public static int i2d_PKCS7_ISSUER_AND_SERIAL ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.i2d_PKCS7_ISSUER_AND_SERIAL$MH, "i2d_PKCS7_ISSUER_AND_SERIAL");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ISSUER_AND_SERIAL_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$607.PKCS7_ISSUER_AND_SERIAL_digest$MH,"PKCS7_ISSUER_AND_SERIAL_digest");
    }
    public static int PKCS7_ISSUER_AND_SERIAL_digest ( Addressable data,  Addressable type,  Addressable md,  Addressable len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.PKCS7_ISSUER_AND_SERIAL_digest$MH, "PKCS7_ISSUER_AND_SERIAL_digest");
        try {
            return (int)mh$.invokeExact(data, type, md, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$607.d2i_PKCS7_fp$MH,"d2i_PKCS7_fp");
    }
    public static MemoryAddress d2i_PKCS7_fp ( Addressable fp,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.d2i_PKCS7_fp$MH, "d2i_PKCS7_fp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(fp, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_fp$MH() {
        return RuntimeHelper.requireNonNull(constants$607.i2d_PKCS7_fp$MH,"i2d_PKCS7_fp");
    }
    public static int i2d_PKCS7_fp ( Addressable fp,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.i2d_PKCS7_fp$MH, "i2d_PKCS7_fp");
        try {
            return (int)mh$.invokeExact(fp, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_dup$MH() {
        return RuntimeHelper.requireNonNull(constants$607.PKCS7_dup$MH,"PKCS7_dup");
    }
    public static MemoryAddress PKCS7_dup ( Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.PKCS7_dup$MH, "PKCS7_dup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$608.d2i_PKCS7_bio$MH,"d2i_PKCS7_bio");
    }
    public static MemoryAddress d2i_PKCS7_bio ( Addressable bp,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.d2i_PKCS7_bio$MH, "d2i_PKCS7_bio");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(bp, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_bio$MH() {
        return RuntimeHelper.requireNonNull(constants$608.i2d_PKCS7_bio$MH,"i2d_PKCS7_bio");
    }
    public static int i2d_PKCS7_bio ( Addressable bp,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.i2d_PKCS7_bio$MH, "i2d_PKCS7_bio");
        try {
            return (int)mh$.invokeExact(bp, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_bio_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$608.i2d_PKCS7_bio_stream$MH,"i2d_PKCS7_bio_stream");
    }
    public static int i2d_PKCS7_bio_stream ( Addressable out,  Addressable p7,  Addressable in,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.i2d_PKCS7_bio_stream$MH, "i2d_PKCS7_bio_stream");
        try {
            return (int)mh$.invokeExact(out, p7, in, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PEM_write_bio_PKCS7_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$608.PEM_write_bio_PKCS7_stream$MH,"PEM_write_bio_PKCS7_stream");
    }
    public static int PEM_write_bio_PKCS7_stream ( Addressable out,  Addressable p7,  Addressable in,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.PEM_write_bio_PKCS7_stream$MH, "PEM_write_bio_PKCS7_stream");
        try {
            return (int)mh$.invokeExact(out, p7, in, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNER_INFO_new$MH() {
        return RuntimeHelper.requireNonNull(constants$608.PKCS7_SIGNER_INFO_new$MH,"PKCS7_SIGNER_INFO_new");
    }
    public static MemoryAddress PKCS7_SIGNER_INFO_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.PKCS7_SIGNER_INFO_new$MH, "PKCS7_SIGNER_INFO_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNER_INFO_free$MH() {
        return RuntimeHelper.requireNonNull(constants$608.PKCS7_SIGNER_INFO_free$MH,"PKCS7_SIGNER_INFO_free");
    }
    public static void PKCS7_SIGNER_INFO_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.PKCS7_SIGNER_INFO_free$MH, "PKCS7_SIGNER_INFO_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_SIGNER_INFO$MH() {
        return RuntimeHelper.requireNonNull(constants$609.d2i_PKCS7_SIGNER_INFO$MH,"d2i_PKCS7_SIGNER_INFO");
    }
    public static MemoryAddress d2i_PKCS7_SIGNER_INFO ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.d2i_PKCS7_SIGNER_INFO$MH, "d2i_PKCS7_SIGNER_INFO");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_SIGNER_INFO$MH() {
        return RuntimeHelper.requireNonNull(constants$609.i2d_PKCS7_SIGNER_INFO$MH,"i2d_PKCS7_SIGNER_INFO");
    }
    public static int i2d_PKCS7_SIGNER_INFO ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.i2d_PKCS7_SIGNER_INFO$MH, "i2d_PKCS7_SIGNER_INFO");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_RECIP_INFO_new$MH() {
        return RuntimeHelper.requireNonNull(constants$609.PKCS7_RECIP_INFO_new$MH,"PKCS7_RECIP_INFO_new");
    }
    public static MemoryAddress PKCS7_RECIP_INFO_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.PKCS7_RECIP_INFO_new$MH, "PKCS7_RECIP_INFO_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_RECIP_INFO_free$MH() {
        return RuntimeHelper.requireNonNull(constants$609.PKCS7_RECIP_INFO_free$MH,"PKCS7_RECIP_INFO_free");
    }
    public static void PKCS7_RECIP_INFO_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.PKCS7_RECIP_INFO_free$MH, "PKCS7_RECIP_INFO_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_RECIP_INFO$MH() {
        return RuntimeHelper.requireNonNull(constants$609.d2i_PKCS7_RECIP_INFO$MH,"d2i_PKCS7_RECIP_INFO");
    }
    public static MemoryAddress d2i_PKCS7_RECIP_INFO ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.d2i_PKCS7_RECIP_INFO$MH, "d2i_PKCS7_RECIP_INFO");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_RECIP_INFO$MH() {
        return RuntimeHelper.requireNonNull(constants$609.i2d_PKCS7_RECIP_INFO$MH,"i2d_PKCS7_RECIP_INFO");
    }
    public static int i2d_PKCS7_RECIP_INFO ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.i2d_PKCS7_RECIP_INFO$MH, "i2d_PKCS7_RECIP_INFO");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNED_new$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PKCS7_SIGNED_new$MH,"PKCS7_SIGNED_new");
    }
    public static MemoryAddress PKCS7_SIGNED_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.PKCS7_SIGNED_new$MH, "PKCS7_SIGNED_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNED_free$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PKCS7_SIGNED_free$MH,"PKCS7_SIGNED_free");
    }
    public static void PKCS7_SIGNED_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.PKCS7_SIGNED_free$MH, "PKCS7_SIGNED_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_SIGNED$MH() {
        return RuntimeHelper.requireNonNull(constants$610.d2i_PKCS7_SIGNED$MH,"d2i_PKCS7_SIGNED");
    }
    public static MemoryAddress d2i_PKCS7_SIGNED ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.d2i_PKCS7_SIGNED$MH, "d2i_PKCS7_SIGNED");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_SIGNED$MH() {
        return RuntimeHelper.requireNonNull(constants$610.i2d_PKCS7_SIGNED$MH,"i2d_PKCS7_SIGNED");
    }
    public static int i2d_PKCS7_SIGNED ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.i2d_PKCS7_SIGNED$MH, "i2d_PKCS7_SIGNED");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENC_CONTENT_new$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PKCS7_ENC_CONTENT_new$MH,"PKCS7_ENC_CONTENT_new");
    }
    public static MemoryAddress PKCS7_ENC_CONTENT_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.PKCS7_ENC_CONTENT_new$MH, "PKCS7_ENC_CONTENT_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENC_CONTENT_free$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PKCS7_ENC_CONTENT_free$MH,"PKCS7_ENC_CONTENT_free");
    }
    public static void PKCS7_ENC_CONTENT_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.PKCS7_ENC_CONTENT_free$MH, "PKCS7_ENC_CONTENT_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_ENC_CONTENT$MH() {
        return RuntimeHelper.requireNonNull(constants$611.d2i_PKCS7_ENC_CONTENT$MH,"d2i_PKCS7_ENC_CONTENT");
    }
    public static MemoryAddress d2i_PKCS7_ENC_CONTENT ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.d2i_PKCS7_ENC_CONTENT$MH, "d2i_PKCS7_ENC_CONTENT");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_ENC_CONTENT$MH() {
        return RuntimeHelper.requireNonNull(constants$611.i2d_PKCS7_ENC_CONTENT$MH,"i2d_PKCS7_ENC_CONTENT");
    }
    public static int i2d_PKCS7_ENC_CONTENT ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.i2d_PKCS7_ENC_CONTENT$MH, "i2d_PKCS7_ENC_CONTENT");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENVELOPE_new$MH() {
        return RuntimeHelper.requireNonNull(constants$611.PKCS7_ENVELOPE_new$MH,"PKCS7_ENVELOPE_new");
    }
    public static MemoryAddress PKCS7_ENVELOPE_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.PKCS7_ENVELOPE_new$MH, "PKCS7_ENVELOPE_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENVELOPE_free$MH() {
        return RuntimeHelper.requireNonNull(constants$611.PKCS7_ENVELOPE_free$MH,"PKCS7_ENVELOPE_free");
    }
    public static void PKCS7_ENVELOPE_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.PKCS7_ENVELOPE_free$MH, "PKCS7_ENVELOPE_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_ENVELOPE$MH() {
        return RuntimeHelper.requireNonNull(constants$611.d2i_PKCS7_ENVELOPE$MH,"d2i_PKCS7_ENVELOPE");
    }
    public static MemoryAddress d2i_PKCS7_ENVELOPE ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.d2i_PKCS7_ENVELOPE$MH, "d2i_PKCS7_ENVELOPE");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_ENVELOPE$MH() {
        return RuntimeHelper.requireNonNull(constants$611.i2d_PKCS7_ENVELOPE$MH,"i2d_PKCS7_ENVELOPE");
    }
    public static int i2d_PKCS7_ENVELOPE ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.i2d_PKCS7_ENVELOPE$MH, "i2d_PKCS7_ENVELOPE");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGN_ENVELOPE_new$MH() {
        return RuntimeHelper.requireNonNull(constants$612.PKCS7_SIGN_ENVELOPE_new$MH,"PKCS7_SIGN_ENVELOPE_new");
    }
    public static MemoryAddress PKCS7_SIGN_ENVELOPE_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.PKCS7_SIGN_ENVELOPE_new$MH, "PKCS7_SIGN_ENVELOPE_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGN_ENVELOPE_free$MH() {
        return RuntimeHelper.requireNonNull(constants$612.PKCS7_SIGN_ENVELOPE_free$MH,"PKCS7_SIGN_ENVELOPE_free");
    }
    public static void PKCS7_SIGN_ENVELOPE_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.PKCS7_SIGN_ENVELOPE_free$MH, "PKCS7_SIGN_ENVELOPE_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_SIGN_ENVELOPE$MH() {
        return RuntimeHelper.requireNonNull(constants$612.d2i_PKCS7_SIGN_ENVELOPE$MH,"d2i_PKCS7_SIGN_ENVELOPE");
    }
    public static MemoryAddress d2i_PKCS7_SIGN_ENVELOPE ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.d2i_PKCS7_SIGN_ENVELOPE$MH, "d2i_PKCS7_SIGN_ENVELOPE");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_SIGN_ENVELOPE$MH() {
        return RuntimeHelper.requireNonNull(constants$612.i2d_PKCS7_SIGN_ENVELOPE$MH,"i2d_PKCS7_SIGN_ENVELOPE");
    }
    public static int i2d_PKCS7_SIGN_ENVELOPE ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.i2d_PKCS7_SIGN_ENVELOPE$MH, "i2d_PKCS7_SIGN_ENVELOPE");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_DIGEST_new$MH() {
        return RuntimeHelper.requireNonNull(constants$612.PKCS7_DIGEST_new$MH,"PKCS7_DIGEST_new");
    }
    public static MemoryAddress PKCS7_DIGEST_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.PKCS7_DIGEST_new$MH, "PKCS7_DIGEST_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_DIGEST_free$MH() {
        return RuntimeHelper.requireNonNull(constants$612.PKCS7_DIGEST_free$MH,"PKCS7_DIGEST_free");
    }
    public static void PKCS7_DIGEST_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.PKCS7_DIGEST_free$MH, "PKCS7_DIGEST_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_DIGEST$MH() {
        return RuntimeHelper.requireNonNull(constants$613.d2i_PKCS7_DIGEST$MH,"d2i_PKCS7_DIGEST");
    }
    public static MemoryAddress d2i_PKCS7_DIGEST ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.d2i_PKCS7_DIGEST$MH, "d2i_PKCS7_DIGEST");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_DIGEST$MH() {
        return RuntimeHelper.requireNonNull(constants$613.i2d_PKCS7_DIGEST$MH,"i2d_PKCS7_DIGEST");
    }
    public static int i2d_PKCS7_DIGEST ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.i2d_PKCS7_DIGEST$MH, "i2d_PKCS7_DIGEST");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENCRYPT_new$MH() {
        return RuntimeHelper.requireNonNull(constants$613.PKCS7_ENCRYPT_new$MH,"PKCS7_ENCRYPT_new");
    }
    public static MemoryAddress PKCS7_ENCRYPT_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.PKCS7_ENCRYPT_new$MH, "PKCS7_ENCRYPT_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ENCRYPT_free$MH() {
        return RuntimeHelper.requireNonNull(constants$613.PKCS7_ENCRYPT_free$MH,"PKCS7_ENCRYPT_free");
    }
    public static void PKCS7_ENCRYPT_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.PKCS7_ENCRYPT_free$MH, "PKCS7_ENCRYPT_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7_ENCRYPT$MH() {
        return RuntimeHelper.requireNonNull(constants$613.d2i_PKCS7_ENCRYPT$MH,"d2i_PKCS7_ENCRYPT");
    }
    public static MemoryAddress d2i_PKCS7_ENCRYPT ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.d2i_PKCS7_ENCRYPT$MH, "d2i_PKCS7_ENCRYPT");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_ENCRYPT$MH() {
        return RuntimeHelper.requireNonNull(constants$613.i2d_PKCS7_ENCRYPT$MH,"i2d_PKCS7_ENCRYPT");
    }
    public static int i2d_PKCS7_ENCRYPT ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.i2d_PKCS7_ENCRYPT$MH, "i2d_PKCS7_ENCRYPT");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_new$MH() {
        return RuntimeHelper.requireNonNull(constants$614.PKCS7_new$MH,"PKCS7_new");
    }
    public static MemoryAddress PKCS7_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.PKCS7_new$MH, "PKCS7_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_free$MH() {
        return RuntimeHelper.requireNonNull(constants$614.PKCS7_free$MH,"PKCS7_free");
    }
    public static void PKCS7_free ( Addressable a) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.PKCS7_free$MH, "PKCS7_free");
        try {
            mh$.invokeExact(a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle d2i_PKCS7$MH() {
        return RuntimeHelper.requireNonNull(constants$614.d2i_PKCS7$MH,"d2i_PKCS7");
    }
    public static MemoryAddress d2i_PKCS7 ( Addressable a,  Addressable in,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.d2i_PKCS7$MH, "d2i_PKCS7");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(a, in, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7$MH() {
        return RuntimeHelper.requireNonNull(constants$614.i2d_PKCS7$MH,"i2d_PKCS7");
    }
    public static int i2d_PKCS7 ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.i2d_PKCS7$MH, "i2d_PKCS7");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle i2d_PKCS7_NDEF$MH() {
        return RuntimeHelper.requireNonNull(constants$614.i2d_PKCS7_NDEF$MH,"i2d_PKCS7_NDEF");
    }
    public static int i2d_PKCS7_NDEF ( Addressable a,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.i2d_PKCS7_NDEF$MH, "i2d_PKCS7_NDEF");
        try {
            return (int)mh$.invokeExact(a, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_print_ctx$MH() {
        return RuntimeHelper.requireNonNull(constants$614.PKCS7_print_ctx$MH,"PKCS7_print_ctx");
    }
    public static int PKCS7_print_ctx ( Addressable out,  Addressable x,  int indent,  Addressable pctx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.PKCS7_print_ctx$MH, "PKCS7_print_ctx");
        try {
            return (int)mh$.invokeExact(out, x, indent, pctx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_ctrl$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_ctrl$MH,"PKCS7_ctrl");
    }
    public static long PKCS7_ctrl ( Addressable p7,  int cmd,  long larg,  Addressable parg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_ctrl$MH, "PKCS7_ctrl");
        try {
            return (long)mh$.invokeExact(p7, cmd, larg, parg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_type$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_set_type$MH,"PKCS7_set_type");
    }
    public static int PKCS7_set_type ( Addressable p7,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_set_type$MH, "PKCS7_set_type");
        try {
            return (int)mh$.invokeExact(p7, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set0_type_other$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_set0_type_other$MH,"PKCS7_set0_type_other");
    }
    public static int PKCS7_set0_type_other ( Addressable p7,  int type,  Addressable other) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_set0_type_other$MH, "PKCS7_set0_type_other");
        try {
            return (int)mh$.invokeExact(p7, type, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_content$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_set_content$MH,"PKCS7_set_content");
    }
    public static int PKCS7_set_content ( Addressable p7,  Addressable p7_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_set_content$MH, "PKCS7_set_content");
        try {
            return (int)mh$.invokeExact(p7, p7_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNER_INFO_set$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_SIGNER_INFO_set$MH,"PKCS7_SIGNER_INFO_set");
    }
    public static int PKCS7_SIGNER_INFO_set ( Addressable p7i,  Addressable x509,  Addressable pkey,  Addressable dgst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_SIGNER_INFO_set$MH, "PKCS7_SIGNER_INFO_set");
        try {
            return (int)mh$.invokeExact(p7i, x509, pkey, dgst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNER_INFO_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$615.PKCS7_SIGNER_INFO_sign$MH,"PKCS7_SIGNER_INFO_sign");
    }
    public static int PKCS7_SIGNER_INFO_sign ( Addressable si) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.PKCS7_SIGNER_INFO_sign$MH, "PKCS7_SIGNER_INFO_sign");
        try {
            return (int)mh$.invokeExact(si);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_signer$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_add_signer$MH,"PKCS7_add_signer");
    }
    public static int PKCS7_add_signer ( Addressable p7,  Addressable p7i) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_add_signer$MH, "PKCS7_add_signer");
        try {
            return (int)mh$.invokeExact(p7, p7i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_add_certificate$MH,"PKCS7_add_certificate");
    }
    public static int PKCS7_add_certificate ( Addressable p7,  Addressable x509) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_add_certificate$MH, "PKCS7_add_certificate");
        try {
            return (int)mh$.invokeExact(p7, x509);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_crl$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_add_crl$MH,"PKCS7_add_crl");
    }
    public static int PKCS7_add_crl ( Addressable p7,  Addressable x509) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_add_crl$MH, "PKCS7_add_crl");
        try {
            return (int)mh$.invokeExact(p7, x509);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_content_new$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_content_new$MH,"PKCS7_content_new");
    }
    public static int PKCS7_content_new ( Addressable p7,  int nid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_content_new$MH, "PKCS7_content_new");
        try {
            return (int)mh$.invokeExact(p7, nid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_dataVerify$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_dataVerify$MH,"PKCS7_dataVerify");
    }
    public static int PKCS7_dataVerify ( Addressable cert_store,  Addressable ctx,  Addressable bio,  Addressable p7,  Addressable si) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_dataVerify$MH, "PKCS7_dataVerify");
        try {
            return (int)mh$.invokeExact(cert_store, ctx, bio, p7, si);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_signatureVerify$MH() {
        return RuntimeHelper.requireNonNull(constants$616.PKCS7_signatureVerify$MH,"PKCS7_signatureVerify");
    }
    public static int PKCS7_signatureVerify ( Addressable bio,  Addressable p7,  Addressable si,  Addressable x509) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.PKCS7_signatureVerify$MH, "PKCS7_signatureVerify");
        try {
            return (int)mh$.invokeExact(bio, p7, si, x509);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_dataInit$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_dataInit$MH,"PKCS7_dataInit");
    }
    public static MemoryAddress PKCS7_dataInit ( Addressable p7,  Addressable bio) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_dataInit$MH, "PKCS7_dataInit");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, bio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_dataFinal$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_dataFinal$MH,"PKCS7_dataFinal");
    }
    public static int PKCS7_dataFinal ( Addressable p7,  Addressable bio) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_dataFinal$MH, "PKCS7_dataFinal");
        try {
            return (int)mh$.invokeExact(p7, bio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_dataDecode$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_dataDecode$MH,"PKCS7_dataDecode");
    }
    public static MemoryAddress PKCS7_dataDecode ( Addressable p7,  Addressable pkey,  Addressable in_bio,  Addressable pcert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_dataDecode$MH, "PKCS7_dataDecode");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, pkey, in_bio, pcert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_add_signature$MH,"PKCS7_add_signature");
    }
    public static MemoryAddress PKCS7_add_signature ( Addressable p7,  Addressable x509,  Addressable pkey,  Addressable dgst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_add_signature$MH, "PKCS7_add_signature");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, x509, pkey, dgst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_cert_from_signer_info$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_cert_from_signer_info$MH,"PKCS7_cert_from_signer_info");
    }
    public static MemoryAddress PKCS7_cert_from_signer_info ( Addressable p7,  Addressable si) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_cert_from_signer_info$MH, "PKCS7_cert_from_signer_info");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, si);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$617.PKCS7_set_digest$MH,"PKCS7_set_digest");
    }
    public static int PKCS7_set_digest ( Addressable p7,  Addressable md) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.PKCS7_set_digest$MH, "PKCS7_set_digest");
        try {
            return (int)mh$.invokeExact(p7, md);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get_signer_info$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_get_signer_info$MH,"PKCS7_get_signer_info");
    }
    public static MemoryAddress PKCS7_get_signer_info ( Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_get_signer_info$MH, "PKCS7_get_signer_info");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_recipient$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_add_recipient$MH,"PKCS7_add_recipient");
    }
    public static MemoryAddress PKCS7_add_recipient ( Addressable p7,  Addressable x509) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_add_recipient$MH, "PKCS7_add_recipient");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, x509);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_SIGNER_INFO_get0_algs$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_SIGNER_INFO_get0_algs$MH,"PKCS7_SIGNER_INFO_get0_algs");
    }
    public static void PKCS7_SIGNER_INFO_get0_algs ( Addressable si,  Addressable pk,  Addressable pdig,  Addressable psig) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_SIGNER_INFO_get0_algs$MH, "PKCS7_SIGNER_INFO_get0_algs");
        try {
            mh$.invokeExact(si, pk, pdig, psig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_RECIP_INFO_get0_alg$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_RECIP_INFO_get0_alg$MH,"PKCS7_RECIP_INFO_get0_alg");
    }
    public static void PKCS7_RECIP_INFO_get0_alg ( Addressable ri,  Addressable penc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_RECIP_INFO_get0_alg$MH, "PKCS7_RECIP_INFO_get0_alg");
        try {
            mh$.invokeExact(ri, penc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_recipient_info$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_add_recipient_info$MH,"PKCS7_add_recipient_info");
    }
    public static int PKCS7_add_recipient_info ( Addressable p7,  Addressable ri) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_add_recipient_info$MH, "PKCS7_add_recipient_info");
        try {
            return (int)mh$.invokeExact(p7, ri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_RECIP_INFO_set$MH() {
        return RuntimeHelper.requireNonNull(constants$618.PKCS7_RECIP_INFO_set$MH,"PKCS7_RECIP_INFO_set");
    }
    public static int PKCS7_RECIP_INFO_set ( Addressable p7i,  Addressable x509) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.PKCS7_RECIP_INFO_set$MH, "PKCS7_RECIP_INFO_set");
        try {
            return (int)mh$.invokeExact(p7i, x509);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_cipher$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_set_cipher$MH,"PKCS7_set_cipher");
    }
    public static int PKCS7_set_cipher ( Addressable p7,  Addressable cipher) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_set_cipher$MH, "PKCS7_set_cipher");
        try {
            return (int)mh$.invokeExact(p7, cipher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_stream$MH,"PKCS7_stream");
    }
    public static int PKCS7_stream ( Addressable boundary,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_stream$MH, "PKCS7_stream");
        try {
            return (int)mh$.invokeExact(boundary, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get_issuer_and_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_get_issuer_and_serial$MH,"PKCS7_get_issuer_and_serial");
    }
    public static MemoryAddress PKCS7_get_issuer_and_serial ( Addressable p7,  int idx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_get_issuer_and_serial$MH, "PKCS7_get_issuer_and_serial");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_digest_from_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_digest_from_attributes$MH,"PKCS7_digest_from_attributes");
    }
    public static MemoryAddress PKCS7_digest_from_attributes ( Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_digest_from_attributes$MH, "PKCS7_digest_from_attributes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_signed_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_add_signed_attribute$MH,"PKCS7_add_signed_attribute");
    }
    public static int PKCS7_add_signed_attribute ( Addressable p7si,  int nid,  int type,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_add_signed_attribute$MH, "PKCS7_add_signed_attribute");
        try {
            return (int)mh$.invokeExact(p7si, nid, type, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$619.PKCS7_add_attribute$MH,"PKCS7_add_attribute");
    }
    public static int PKCS7_add_attribute ( Addressable p7si,  int nid,  int atrtype,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.PKCS7_add_attribute$MH, "PKCS7_add_attribute");
        try {
            return (int)mh$.invokeExact(p7si, nid, atrtype, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_get_attribute$MH,"PKCS7_get_attribute");
    }
    public static MemoryAddress PKCS7_get_attribute ( Addressable si,  int nid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_get_attribute$MH, "PKCS7_get_attribute");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(si, nid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get_signed_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_get_signed_attribute$MH,"PKCS7_get_signed_attribute");
    }
    public static MemoryAddress PKCS7_get_signed_attribute ( Addressable si,  int nid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_get_signed_attribute$MH, "PKCS7_get_signed_attribute");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(si, nid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_signed_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_set_signed_attributes$MH,"PKCS7_set_signed_attributes");
    }
    public static int PKCS7_set_signed_attributes ( Addressable p7si,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_set_signed_attributes$MH, "PKCS7_set_signed_attributes");
        try {
            return (int)mh$.invokeExact(p7si, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_set_attributes$MH,"PKCS7_set_attributes");
    }
    public static int PKCS7_set_attributes ( Addressable p7si,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_set_attributes$MH, "PKCS7_set_attributes");
        try {
            return (int)mh$.invokeExact(p7si, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_sign$MH,"PKCS7_sign");
    }
    public static MemoryAddress PKCS7_sign ( Addressable signcert,  Addressable pkey,  Addressable certs,  Addressable data,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_sign$MH, "PKCS7_sign");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(signcert, pkey, certs, data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_sign_add_signer$MH() {
        return RuntimeHelper.requireNonNull(constants$620.PKCS7_sign_add_signer$MH,"PKCS7_sign_add_signer");
    }
    public static MemoryAddress PKCS7_sign_add_signer ( Addressable p7,  Addressable signcert,  Addressable pkey,  Addressable md,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.PKCS7_sign_add_signer$MH, "PKCS7_sign_add_signer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, signcert, pkey, md, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_final$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_final$MH,"PKCS7_final");
    }
    public static int PKCS7_final ( Addressable p7,  Addressable data,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_final$MH, "PKCS7_final");
        try {
            return (int)mh$.invokeExact(p7, data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_verify$MH,"PKCS7_verify");
    }
    public static int PKCS7_verify ( Addressable p7,  Addressable certs,  Addressable store,  Addressable indata,  Addressable out,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_verify$MH, "PKCS7_verify");
        try {
            return (int)mh$.invokeExact(p7, certs, store, indata, out, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get0_signers$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_get0_signers$MH,"PKCS7_get0_signers");
    }
    public static MemoryAddress PKCS7_get0_signers ( Addressable p7,  Addressable certs,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_get0_signers$MH, "PKCS7_get0_signers");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(p7, certs, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_encrypt$MH,"PKCS7_encrypt");
    }
    public static MemoryAddress PKCS7_encrypt ( Addressable certs,  Addressable in,  Addressable cipher,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_encrypt$MH, "PKCS7_encrypt");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(certs, in, cipher, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_decrypt$MH,"PKCS7_decrypt");
    }
    public static int PKCS7_decrypt ( Addressable p7,  Addressable pkey,  Addressable cert,  Addressable data,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_decrypt$MH, "PKCS7_decrypt");
        try {
            return (int)mh$.invokeExact(p7, pkey, cert, data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_attrib_smimecap$MH() {
        return RuntimeHelper.requireNonNull(constants$621.PKCS7_add_attrib_smimecap$MH,"PKCS7_add_attrib_smimecap");
    }
    public static int PKCS7_add_attrib_smimecap ( Addressable si,  Addressable cap) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.PKCS7_add_attrib_smimecap$MH, "PKCS7_add_attrib_smimecap");
        try {
            return (int)mh$.invokeExact(si, cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_get_smimecap$MH() {
        return RuntimeHelper.requireNonNull(constants$622.PKCS7_get_smimecap$MH,"PKCS7_get_smimecap");
    }
    public static MemoryAddress PKCS7_get_smimecap ( Addressable si) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.PKCS7_get_smimecap$MH, "PKCS7_get_smimecap");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(si);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_simple_smimecap$MH() {
        return RuntimeHelper.requireNonNull(constants$622.PKCS7_simple_smimecap$MH,"PKCS7_simple_smimecap");
    }
    public static int PKCS7_simple_smimecap ( Addressable sk,  int nid,  int arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.PKCS7_simple_smimecap$MH, "PKCS7_simple_smimecap");
        try {
            return (int)mh$.invokeExact(sk, nid, arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add_attrib_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$622.PKCS7_add_attrib_content_type$MH,"PKCS7_add_attrib_content_type");
    }
    public static int PKCS7_add_attrib_content_type ( Addressable si,  Addressable coid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.PKCS7_add_attrib_content_type$MH, "PKCS7_add_attrib_content_type");
        try {
            return (int)mh$.invokeExact(si, coid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add0_attrib_signing_time$MH() {
        return RuntimeHelper.requireNonNull(constants$622.PKCS7_add0_attrib_signing_time$MH,"PKCS7_add0_attrib_signing_time");
    }
    public static int PKCS7_add0_attrib_signing_time ( Addressable si,  Addressable t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.PKCS7_add0_attrib_signing_time$MH, "PKCS7_add0_attrib_signing_time");
        try {
            return (int)mh$.invokeExact(si, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PKCS7_add1_attrib_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$622.PKCS7_add1_attrib_digest$MH,"PKCS7_add1_attrib_digest");
    }
    public static int PKCS7_add1_attrib_digest ( Addressable si,  Addressable md,  int mdlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.PKCS7_add1_attrib_digest$MH, "PKCS7_add1_attrib_digest");
        try {
            return (int)mh$.invokeExact(si, md, mdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SMIME_write_PKCS7$MH() {
        return RuntimeHelper.requireNonNull(constants$622.SMIME_write_PKCS7$MH,"SMIME_write_PKCS7");
    }
    public static int SMIME_write_PKCS7 ( Addressable bio,  Addressable p7,  Addressable data,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.SMIME_write_PKCS7$MH, "SMIME_write_PKCS7");
        try {
            return (int)mh$.invokeExact(bio, p7, data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SMIME_read_PKCS7$MH() {
        return RuntimeHelper.requireNonNull(constants$623.SMIME_read_PKCS7$MH,"SMIME_read_PKCS7");
    }
    public static MemoryAddress SMIME_read_PKCS7 ( Addressable bio,  Addressable bcont) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.SMIME_read_PKCS7$MH, "SMIME_read_PKCS7");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(bio, bcont);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BIO_new_PKCS7$MH() {
        return RuntimeHelper.requireNonNull(constants$623.BIO_new_PKCS7$MH,"BIO_new_PKCS7");
    }
    public static MemoryAddress BIO_new_PKCS7 ( Addressable out,  Addressable p7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.BIO_new_PKCS7$MH, "BIO_new_PKCS7");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(out, p7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_CRL_set_default_method$MH() {
        return RuntimeHelper.requireNonNull(constants$623.X509_CRL_set_default_method$MH,"X509_CRL_set_default_method");
    }
    public static void X509_CRL_set_default_method ( Addressable meth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.X509_CRL_set_default_method$MH, "X509_CRL_set_default_method");
        try {
            mh$.invokeExact(meth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_CRL_METHOD_new$MH() {
        return RuntimeHelper.requireNonNull(constants$624.X509_CRL_METHOD_new$MH,"X509_CRL_METHOD_new");
    }
    public static MemoryAddress X509_CRL_METHOD_new ( Addressable crl_init,  Addressable crl_free,  Addressable crl_lookup,  Addressable crl_verify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.X509_CRL_METHOD_new$MH, "X509_CRL_METHOD_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(crl_init, crl_free, crl_lookup, crl_verify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_CRL_METHOD_free$MH() {
        return RuntimeHelper.requireNonNull(constants$625.X509_CRL_METHOD_free$MH,"X509_CRL_METHOD_free");
    }
    public static void X509_CRL_METHOD_free ( Addressable m) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.X509_CRL_METHOD_free$MH, "X509_CRL_METHOD_free");
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_CRL_set_meth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$625.X509_CRL_set_meth_data$MH,"X509_CRL_set_meth_data");
    }
    public static void X509_CRL_set_meth_data ( Addressable crl,  Addressable dat) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.X509_CRL_set_meth_data$MH, "X509_CRL_set_meth_data");
        try {
            mh$.invokeExact(crl, dat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_CRL_get_meth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$625.X509_CRL_get_meth_data$MH,"X509_CRL_get_meth_data");
    }
    public static MemoryAddress X509_CRL_get_meth_data ( Addressable crl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.X509_CRL_get_meth_data$MH, "X509_CRL_get_meth_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(crl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle X509_verify_cert_error_string$MH() {
        return RuntimeHelper.requireNonNull(constants$625.X509_verify_cert_error_string$MH,"X509_verify_cert_error_string");
    }
    public static MemoryAddress X509_verify_cert_error_string ( long n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.X509_verify_cert_error_string$MH, "X509_verify_cert_error_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


