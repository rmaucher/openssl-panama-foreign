// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$0 {

    static final FunctionDescriptor OPENSSL_sk_num$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle OPENSSL_sk_num$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_sk_num",
        constants$0.OPENSSL_sk_num$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_sk_value$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle OPENSSL_sk_value$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_sk_value",
        constants$0.OPENSSL_sk_value$FUNC, false
    );
    static final FunctionDescriptor CRYPTO_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle CRYPTO_free$MH = RuntimeHelper.downcallHandle(
        "CRYPTO_free",
        constants$0.CRYPTO_free$FUNC, false
    );
    static final FunctionDescriptor FIPS_mode$FUNC = FunctionDescriptor.of(JAVA_INT);
    static final MethodHandle FIPS_mode$MH = RuntimeHelper.downcallHandle(
        "FIPS_mode",
        constants$0.FIPS_mode$FUNC, false
    );
    static final FunctionDescriptor FIPS_mode_set$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle FIPS_mode_set$MH = RuntimeHelper.downcallHandle(
        "FIPS_mode_set",
        constants$0.FIPS_mode_set$FUNC, false
    );
    static final FunctionDescriptor BIO_ctrl_pending$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle BIO_ctrl_pending$MH = RuntimeHelper.downcallHandle(
        "BIO_ctrl_pending",
        constants$0.BIO_ctrl_pending$FUNC, false
    );
}


