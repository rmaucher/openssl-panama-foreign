// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$774 {

    static final FunctionDescriptor SSL_CTX_alpn_select_cb_func$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_alpn_select_cb_func$MH = RuntimeHelper.downcallHandle(
        constants$774.SSL_CTX_alpn_select_cb_func$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_set_alpn_select_cb$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set_alpn_select_cb$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set_alpn_select_cb",
        constants$774.SSL_CTX_set_alpn_select_cb$FUNC, false
    );
    static final FunctionDescriptor SSL_get0_alpn_selected$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_get0_alpn_selected$MH = RuntimeHelper.downcallHandle(
        "SSL_get0_alpn_selected",
        constants$774.SSL_get0_alpn_selected$FUNC, false
    );
    static final FunctionDescriptor SSL_psk_client_cb_func$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle SSL_psk_client_cb_func$MH = RuntimeHelper.downcallHandle(
        constants$774.SSL_psk_client_cb_func$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_set_psk_client_callback$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set_psk_client_callback$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set_psk_client_callback",
        constants$774.SSL_CTX_set_psk_client_callback$FUNC, false
    );
}


