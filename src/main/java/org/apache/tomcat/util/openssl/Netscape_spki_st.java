// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class Netscape_spki_st {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        ADDRESS.withName("spkac"),
        MemoryLayout.structLayout(
            ADDRESS.withName("algorithm"),
            ADDRESS.withName("parameter")
        ).withName("sig_algor"),
        ADDRESS.withName("signature")
    ).withName("Netscape_spki_st");
    public static MemoryLayout $LAYOUT() {
        return Netscape_spki_st.$struct$LAYOUT;
    }
    static final VarHandle spkac$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("spkac"));
    public static VarHandle spkac$VH() {
        return Netscape_spki_st.spkac$VH;
    }
    public static MemoryAddress spkac$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)Netscape_spki_st.spkac$VH.get(seg);
    }
    public static void spkac$set( MemorySegment seg, MemoryAddress x) {
        Netscape_spki_st.spkac$VH.set(seg, x);
    }
    public static MemoryAddress spkac$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)Netscape_spki_st.spkac$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void spkac$set(MemorySegment seg, long index, MemoryAddress x) {
        Netscape_spki_st.spkac$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment sig_algor$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle signature$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("signature"));
    public static VarHandle signature$VH() {
        return Netscape_spki_st.signature$VH;
    }
    public static MemoryAddress signature$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)Netscape_spki_st.signature$VH.get(seg);
    }
    public static void signature$set( MemorySegment seg, MemoryAddress x) {
        Netscape_spki_st.signature$VH.set(seg, x);
    }
    public static MemoryAddress signature$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)Netscape_spki_st.signature$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void signature$set(MemorySegment seg, long index, MemoryAddress x) {
        Netscape_spki_st.signature$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


