// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$102 {

    static final FunctionDescriptor CRYPTO_THREAD_set_local$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle CRYPTO_THREAD_set_local$MH = RuntimeHelper.downcallHandle(
        "CRYPTO_THREAD_set_local",
        constants$102.CRYPTO_THREAD_set_local$FUNC, false
    );
    static final FunctionDescriptor CRYPTO_THREAD_cleanup_local$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle CRYPTO_THREAD_cleanup_local$MH = RuntimeHelper.downcallHandle(
        "CRYPTO_THREAD_cleanup_local",
        constants$102.CRYPTO_THREAD_cleanup_local$FUNC, false
    );
    static final FunctionDescriptor CRYPTO_THREAD_get_current_id$FUNC = FunctionDescriptor.of(JAVA_LONG);
    static final MethodHandle CRYPTO_THREAD_get_current_id$MH = RuntimeHelper.downcallHandle(
        "CRYPTO_THREAD_get_current_id",
        constants$102.CRYPTO_THREAD_get_current_id$FUNC, false
    );
    static final FunctionDescriptor CRYPTO_THREAD_compare_id$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG,
        JAVA_LONG
    );
    static final MethodHandle CRYPTO_THREAD_compare_id$MH = RuntimeHelper.downcallHandle(
        "CRYPTO_THREAD_compare_id",
        constants$102.CRYPTO_THREAD_compare_id$FUNC, false
    );
    static final FunctionDescriptor ERR_load_COMP_strings$FUNC = FunctionDescriptor.of(JAVA_INT);
    static final MethodHandle ERR_load_COMP_strings$MH = RuntimeHelper.downcallHandle(
        "ERR_load_COMP_strings",
        constants$102.ERR_load_COMP_strings$FUNC, false
    );
    static final FunctionDescriptor COMP_CTX_new$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle COMP_CTX_new$MH = RuntimeHelper.downcallHandle(
        "COMP_CTX_new",
        constants$102.COMP_CTX_new$FUNC, false
    );
}


