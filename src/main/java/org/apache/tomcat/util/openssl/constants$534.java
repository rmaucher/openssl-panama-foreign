// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$534 {

    static final FunctionDescriptor lh_OPENSSL_CSTRING_new$hfn$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle lh_OPENSSL_CSTRING_new$hfn$MH = RuntimeHelper.downcallHandle(
        constants$534.lh_OPENSSL_CSTRING_new$hfn$FUNC, false
    );
    static final FunctionDescriptor lh_OPENSSL_CSTRING_new$cfn$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle lh_OPENSSL_CSTRING_new$cfn$MH = RuntimeHelper.downcallHandle(
        constants$534.lh_OPENSSL_CSTRING_new$cfn$FUNC, false
    );
    static final FunctionDescriptor lh_OPENSSL_CSTRING_new$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle lh_OPENSSL_CSTRING_new$MH = RuntimeHelper.downcallHandle(
        "lh_OPENSSL_CSTRING_new",
        constants$534.lh_OPENSSL_CSTRING_new$FUNC, false
    );
    static final FunctionDescriptor lh_OPENSSL_CSTRING_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle lh_OPENSSL_CSTRING_free$MH = RuntimeHelper.downcallHandle(
        "lh_OPENSSL_CSTRING_free",
        constants$534.lh_OPENSSL_CSTRING_free$FUNC, false
    );
}


