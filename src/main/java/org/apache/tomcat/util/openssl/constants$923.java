// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$923 {

    static final FunctionDescriptor NCONF_free_data$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle NCONF_free_data$MH = RuntimeHelper.downcallHandle(
        "NCONF_free_data",
        constants$923.NCONF_free_data$FUNC, false
    );
    static final FunctionDescriptor NCONF_load$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle NCONF_load$MH = RuntimeHelper.downcallHandle(
        "NCONF_load",
        constants$923.NCONF_load$FUNC, false
    );
    static final FunctionDescriptor NCONF_load_fp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle NCONF_load_fp$MH = RuntimeHelper.downcallHandle(
        "NCONF_load_fp",
        constants$923.NCONF_load_fp$FUNC, false
    );
    static final FunctionDescriptor NCONF_load_bio$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle NCONF_load_bio$MH = RuntimeHelper.downcallHandle(
        "NCONF_load_bio",
        constants$923.NCONF_load_bio$FUNC, false
    );
    static final FunctionDescriptor NCONF_get_section$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle NCONF_get_section$MH = RuntimeHelper.downcallHandle(
        "NCONF_get_section",
        constants$923.NCONF_get_section$FUNC, false
    );
    static final FunctionDescriptor NCONF_get_string$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle NCONF_get_string$MH = RuntimeHelper.downcallHandle(
        "NCONF_get_string",
        constants$923.NCONF_get_string$FUNC, false
    );
}


