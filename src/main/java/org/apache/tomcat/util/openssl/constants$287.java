// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$287 {

    static final FunctionDescriptor EVP_ENCODE_CTX_num$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle EVP_ENCODE_CTX_num$MH = RuntimeHelper.downcallHandle(
        "EVP_ENCODE_CTX_num",
        constants$287.EVP_ENCODE_CTX_num$FUNC, false
    );
    static final FunctionDescriptor EVP_EncodeInit$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle EVP_EncodeInit$MH = RuntimeHelper.downcallHandle(
        "EVP_EncodeInit",
        constants$287.EVP_EncodeInit$FUNC, false
    );
    static final FunctionDescriptor EVP_EncodeUpdate$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EVP_EncodeUpdate$MH = RuntimeHelper.downcallHandle(
        "EVP_EncodeUpdate",
        constants$287.EVP_EncodeUpdate$FUNC, false
    );
    static final FunctionDescriptor EVP_EncodeFinal$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle EVP_EncodeFinal$MH = RuntimeHelper.downcallHandle(
        "EVP_EncodeFinal",
        constants$287.EVP_EncodeFinal$FUNC, false
    );
    static final FunctionDescriptor EVP_EncodeBlock$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EVP_EncodeBlock$MH = RuntimeHelper.downcallHandle(
        "EVP_EncodeBlock",
        constants$287.EVP_EncodeBlock$FUNC, false
    );
    static final FunctionDescriptor EVP_DecodeInit$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle EVP_DecodeInit$MH = RuntimeHelper.downcallHandle(
        "EVP_DecodeInit",
        constants$287.EVP_DecodeInit$FUNC, false
    );
}


