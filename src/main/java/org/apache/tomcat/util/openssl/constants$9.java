// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$9 {

    static final FunctionDescriptor jrand48_r$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle jrand48_r$MH = RuntimeHelper.downcallHandle(
        "jrand48_r",
        constants$9.jrand48_r$FUNC, false
    );
    static final FunctionDescriptor srand48_r$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle srand48_r$MH = RuntimeHelper.downcallHandle(
        "srand48_r",
        constants$9.srand48_r$FUNC, false
    );
    static final FunctionDescriptor seed48_r$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle seed48_r$MH = RuntimeHelper.downcallHandle(
        "seed48_r",
        constants$9.seed48_r$FUNC, false
    );
    static final FunctionDescriptor lcong48_r$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle lcong48_r$MH = RuntimeHelper.downcallHandle(
        "lcong48_r",
        constants$9.lcong48_r$FUNC, false
    );
    static final FunctionDescriptor malloc$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle malloc$MH = RuntimeHelper.downcallHandle(
        "malloc",
        constants$9.malloc$FUNC, false
    );
    static final FunctionDescriptor calloc$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_LONG,
        JAVA_LONG
    );
    static final MethodHandle calloc$MH = RuntimeHelper.downcallHandle(
        "calloc",
        constants$9.calloc$FUNC, false
    );
}


