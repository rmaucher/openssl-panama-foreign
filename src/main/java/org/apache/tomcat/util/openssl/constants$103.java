// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$103 {

    static final FunctionDescriptor COMP_CTX_get_method$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle COMP_CTX_get_method$MH = RuntimeHelper.downcallHandle(
        "COMP_CTX_get_method",
        constants$103.COMP_CTX_get_method$FUNC, false
    );
    static final FunctionDescriptor COMP_CTX_get_type$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle COMP_CTX_get_type$MH = RuntimeHelper.downcallHandle(
        "COMP_CTX_get_type",
        constants$103.COMP_CTX_get_type$FUNC, false
    );
    static final FunctionDescriptor COMP_get_type$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle COMP_get_type$MH = RuntimeHelper.downcallHandle(
        "COMP_get_type",
        constants$103.COMP_get_type$FUNC, false
    );
    static final FunctionDescriptor COMP_get_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle COMP_get_name$MH = RuntimeHelper.downcallHandle(
        "COMP_get_name",
        constants$103.COMP_get_name$FUNC, false
    );
    static final FunctionDescriptor COMP_CTX_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle COMP_CTX_free$MH = RuntimeHelper.downcallHandle(
        "COMP_CTX_free",
        constants$103.COMP_CTX_free$FUNC, false
    );
    static final FunctionDescriptor COMP_compress_block$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle COMP_compress_block$MH = RuntimeHelper.downcallHandle(
        "COMP_compress_block",
        constants$103.COMP_compress_block$FUNC, false
    );
}


