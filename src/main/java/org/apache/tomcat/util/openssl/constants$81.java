// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$81 {

    static final FunctionDescriptor sched_get_priority_max$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle sched_get_priority_max$MH = RuntimeHelper.downcallHandle(
        "sched_get_priority_max",
        constants$81.sched_get_priority_max$FUNC, false
    );
    static final FunctionDescriptor sched_get_priority_min$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle sched_get_priority_min$MH = RuntimeHelper.downcallHandle(
        "sched_get_priority_min",
        constants$81.sched_get_priority_min$FUNC, false
    );
    static final FunctionDescriptor sched_rr_get_interval$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle sched_rr_get_interval$MH = RuntimeHelper.downcallHandle(
        "sched_rr_get_interval",
        constants$81.sched_rr_get_interval$FUNC, false
    );
    static final FunctionDescriptor pthread_create$__start_routine$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle pthread_create$__start_routine$MH = RuntimeHelper.downcallHandle(
        constants$81.pthread_create$__start_routine$FUNC, false
    );
    static final FunctionDescriptor pthread_create$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle pthread_create$MH = RuntimeHelper.downcallHandle(
        "pthread_create",
        constants$81.pthread_create$FUNC, false
    );
}


