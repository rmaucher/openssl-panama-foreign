// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$106 {

    static final FunctionDescriptor BIO_set_callback$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_set_callback$MH = RuntimeHelper.downcallHandle(
        "BIO_set_callback",
        constants$106.BIO_set_callback$FUNC, false
    );
    static final FunctionDescriptor BIO_get_callback_ex$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_get_callback_ex$MH = RuntimeHelper.downcallHandle(
        "BIO_get_callback_ex",
        constants$106.BIO_get_callback_ex$FUNC, false
    );
    static final FunctionDescriptor BIO_set_callback_ex$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_set_callback_ex$MH = RuntimeHelper.downcallHandle(
        "BIO_set_callback_ex",
        constants$106.BIO_set_callback_ex$FUNC, false
    );
    static final FunctionDescriptor BIO_get_callback_arg$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_get_callback_arg$MH = RuntimeHelper.downcallHandle(
        "BIO_get_callback_arg",
        constants$106.BIO_get_callback_arg$FUNC, false
    );
    static final FunctionDescriptor BIO_set_callback_arg$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_set_callback_arg$MH = RuntimeHelper.downcallHandle(
        "BIO_set_callback_arg",
        constants$106.BIO_set_callback_arg$FUNC, false
    );
    static final FunctionDescriptor BIO_method_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_method_name$MH = RuntimeHelper.downcallHandle(
        "BIO_method_name",
        constants$106.BIO_method_name$FUNC, false
    );
}


