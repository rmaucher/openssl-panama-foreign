// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$78 {

    static final FunctionDescriptor OPENSSL_init_crypto$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle OPENSSL_init_crypto$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_init_crypto",
        constants$78.OPENSSL_init_crypto$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_atexit$handler$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle OPENSSL_atexit$handler$MH = RuntimeHelper.downcallHandle(
        constants$78.OPENSSL_atexit$handler$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_atexit$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle OPENSSL_atexit$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_atexit",
        constants$78.OPENSSL_atexit$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_thread_stop$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle OPENSSL_thread_stop$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_thread_stop",
        constants$78.OPENSSL_thread_stop$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_INIT_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle OPENSSL_INIT_new$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_INIT_new",
        constants$78.OPENSSL_INIT_new$FUNC, false
    );
}


