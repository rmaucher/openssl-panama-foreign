// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class tls_session_ticket_ext_st {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        JAVA_SHORT.withName("length"),
        MemoryLayout.paddingLayout(48),
        ADDRESS.withName("data")
    ).withName("tls_session_ticket_ext_st");
    public static MemoryLayout $LAYOUT() {
        return tls_session_ticket_ext_st.$struct$LAYOUT;
    }
    static final VarHandle length$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("length"));
    public static VarHandle length$VH() {
        return tls_session_ticket_ext_st.length$VH;
    }
    public static short length$get(MemorySegment seg) {
        return (short)tls_session_ticket_ext_st.length$VH.get(seg);
    }
    public static void length$set( MemorySegment seg, short x) {
        tls_session_ticket_ext_st.length$VH.set(seg, x);
    }
    public static short length$get(MemorySegment seg, long index) {
        return (short)tls_session_ticket_ext_st.length$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void length$set(MemorySegment seg, long index, short x) {
        tls_session_ticket_ext_st.length$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("data"));
    public static VarHandle data$VH() {
        return tls_session_ticket_ext_st.data$VH;
    }
    public static MemoryAddress data$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)tls_session_ticket_ext_st.data$VH.get(seg);
    }
    public static void data$set( MemorySegment seg, MemoryAddress x) {
        tls_session_ticket_ext_st.data$VH.set(seg, x);
    }
    public static MemoryAddress data$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)tls_session_ticket_ext_st.data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void data$set(MemorySegment seg, long index, MemoryAddress x) {
        tls_session_ticket_ext_st.data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


