/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$14 {

    static final FunctionDescriptor SSL_get_current_cipher$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_get_current_cipher$MH = RuntimeHelper.downcallHandle(
        "SSL_get_current_cipher",
        constants$14.SSL_get_current_cipher$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_name$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_name",
        constants$14.SSL_CIPHER_get_name$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_kx_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_kx_nid$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_kx_nid",
        constants$14.SSL_CIPHER_get_kx_nid$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_auth_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_auth_nid$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_auth_nid",
        constants$14.SSL_CIPHER_get_auth_nid$FUNC, false
    );
    static final FunctionDescriptor SSL_pending$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_pending$MH = RuntimeHelper.downcallHandle(
        "SSL_pending",
        constants$14.SSL_pending$FUNC, false
    );
    static final FunctionDescriptor SSL_set_bio$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_set_bio$MH = RuntimeHelper.downcallHandle(
        "SSL_set_bio",
        constants$14.SSL_set_bio$FUNC, false
    );
}


