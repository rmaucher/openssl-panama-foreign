// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$250 {

    static final FunctionDescriptor ASN1_SCTX_new$scan_cb$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_new$scan_cb$MH = RuntimeHelper.downcallHandle(
        constants$250.ASN1_SCTX_new$scan_cb$FUNC, false
    );
    static final FunctionDescriptor ASN1_SCTX_new$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_new$MH = RuntimeHelper.downcallHandle(
        "ASN1_SCTX_new",
        constants$250.ASN1_SCTX_new$FUNC, false
    );
    static final FunctionDescriptor ASN1_SCTX_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_free$MH = RuntimeHelper.downcallHandle(
        "ASN1_SCTX_free",
        constants$250.ASN1_SCTX_free$FUNC, false
    );
    static final FunctionDescriptor ASN1_SCTX_get_item$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_get_item$MH = RuntimeHelper.downcallHandle(
        "ASN1_SCTX_get_item",
        constants$250.ASN1_SCTX_get_item$FUNC, false
    );
    static final FunctionDescriptor ASN1_SCTX_get_template$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_get_template$MH = RuntimeHelper.downcallHandle(
        "ASN1_SCTX_get_template",
        constants$250.ASN1_SCTX_get_template$FUNC, false
    );
    static final FunctionDescriptor ASN1_SCTX_get_flags$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle ASN1_SCTX_get_flags$MH = RuntimeHelper.downcallHandle(
        "ASN1_SCTX_get_flags",
        constants$250.ASN1_SCTX_get_flags$FUNC, false
    );
}


