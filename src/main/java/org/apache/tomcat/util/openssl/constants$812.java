// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$812 {

    static final FunctionDescriptor SSL_SESSION_set1_id_context$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle SSL_SESSION_set1_id_context$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_set1_id_context",
        constants$812.SSL_SESSION_set1_id_context$FUNC, false
    );
    static final FunctionDescriptor SSL_SESSION_set1_id$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle SSL_SESSION_set1_id$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_set1_id",
        constants$812.SSL_SESSION_set1_id$FUNC, false
    );
    static final FunctionDescriptor SSL_SESSION_is_resumable$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_SESSION_is_resumable$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_is_resumable",
        constants$812.SSL_SESSION_is_resumable$FUNC, false
    );
    static final FunctionDescriptor SSL_SESSION_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle SSL_SESSION_new$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_new",
        constants$812.SSL_SESSION_new$FUNC, false
    );
    static final FunctionDescriptor SSL_SESSION_dup$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_SESSION_dup$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_dup",
        constants$812.SSL_SESSION_dup$FUNC, false
    );
    static final FunctionDescriptor SSL_SESSION_get_id$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_SESSION_get_id$MH = RuntimeHelper.downcallHandle(
        "SSL_SESSION_get_id",
        constants$812.SSL_SESSION_get_id$FUNC, false
    );
}


