// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class __pthread_unwind_buf_t {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(1, MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(8, JAVA_LONG).withName("__cancel_jmp_buf"),
            JAVA_INT.withName("__mask_was_saved"),
            MemoryLayout.paddingLayout(32)
        ).withName("__cancel_jmp_buf_tag")).withName("__cancel_jmp_buf"),
        MemoryLayout.sequenceLayout(4, ADDRESS).withName("__pad")
    );
    public static MemoryLayout $LAYOUT() {
        return __pthread_unwind_buf_t.$struct$LAYOUT;
    }
    public static MemorySegment __cancel_jmp_buf$slice(MemorySegment seg) {
        return seg.asSlice(0, 72);
    }
    public static MemorySegment __pad$slice(MemorySegment seg) {
        return seg.asSlice(72, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


