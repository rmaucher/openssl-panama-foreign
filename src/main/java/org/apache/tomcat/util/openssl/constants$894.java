// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$894 {

    static final FunctionDescriptor d2i_PKCS12$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle d2i_PKCS12$MH = RuntimeHelper.downcallHandle(
        "d2i_PKCS12",
        constants$894.d2i_PKCS12$FUNC, false
    );
    static final FunctionDescriptor i2d_PKCS12$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_PKCS12$MH = RuntimeHelper.downcallHandle(
        "i2d_PKCS12",
        constants$894.i2d_PKCS12$FUNC, false
    );
    static final FunctionDescriptor PKCS12_MAC_DATA_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle PKCS12_MAC_DATA_new$MH = RuntimeHelper.downcallHandle(
        "PKCS12_MAC_DATA_new",
        constants$894.PKCS12_MAC_DATA_new$FUNC, false
    );
    static final FunctionDescriptor PKCS12_MAC_DATA_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle PKCS12_MAC_DATA_free$MH = RuntimeHelper.downcallHandle(
        "PKCS12_MAC_DATA_free",
        constants$894.PKCS12_MAC_DATA_free$FUNC, false
    );
    static final FunctionDescriptor d2i_PKCS12_MAC_DATA$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle d2i_PKCS12_MAC_DATA$MH = RuntimeHelper.downcallHandle(
        "d2i_PKCS12_MAC_DATA",
        constants$894.d2i_PKCS12_MAC_DATA$FUNC, false
    );
    static final FunctionDescriptor i2d_PKCS12_MAC_DATA$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_PKCS12_MAC_DATA$MH = RuntimeHelper.downcallHandle(
        "i2d_PKCS12_MAC_DATA",
        constants$894.i2d_PKCS12_MAC_DATA$FUNC, false
    );
}


