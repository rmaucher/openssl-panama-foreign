// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$749 {

    static final FunctionDescriptor SCT_set1_log_id$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SCT_set1_log_id$MH = RuntimeHelper.downcallHandle(
        "SCT_set1_log_id",
        constants$749.SCT_set1_log_id$FUNC, false
    );
    static final FunctionDescriptor SCT_get_timestamp$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle SCT_get_timestamp$MH = RuntimeHelper.downcallHandle(
        "SCT_get_timestamp",
        constants$749.SCT_get_timestamp$FUNC, false
    );
    static final FunctionDescriptor SCT_set_timestamp$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SCT_set_timestamp$MH = RuntimeHelper.downcallHandle(
        "SCT_set_timestamp",
        constants$749.SCT_set_timestamp$FUNC, false
    );
    static final FunctionDescriptor SCT_get_signature_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SCT_get_signature_nid$MH = RuntimeHelper.downcallHandle(
        "SCT_get_signature_nid",
        constants$749.SCT_get_signature_nid$FUNC, false
    );
    static final FunctionDescriptor SCT_set_signature_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle SCT_set_signature_nid$MH = RuntimeHelper.downcallHandle(
        "SCT_set_signature_nid",
        constants$749.SCT_set_signature_nid$FUNC, false
    );
    static final FunctionDescriptor SCT_get0_extensions$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SCT_get0_extensions$MH = RuntimeHelper.downcallHandle(
        "SCT_get0_extensions",
        constants$749.SCT_get0_extensions$FUNC, false
    );
}


