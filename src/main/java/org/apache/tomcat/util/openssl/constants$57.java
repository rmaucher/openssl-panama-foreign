// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$57 {

    static final FunctionDescriptor sk_OPENSSL_BLOCK_zero$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle sk_OPENSSL_BLOCK_zero$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_zero",
        constants$57.sk_OPENSSL_BLOCK_zero$FUNC, false
    );
    static final FunctionDescriptor sk_OPENSSL_BLOCK_delete$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle sk_OPENSSL_BLOCK_delete$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_delete",
        constants$57.sk_OPENSSL_BLOCK_delete$FUNC, false
    );
    static final FunctionDescriptor sk_OPENSSL_BLOCK_delete_ptr$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle sk_OPENSSL_BLOCK_delete_ptr$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_delete_ptr",
        constants$57.sk_OPENSSL_BLOCK_delete_ptr$FUNC, false
    );
    static final FunctionDescriptor sk_OPENSSL_BLOCK_push$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle sk_OPENSSL_BLOCK_push$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_push",
        constants$57.sk_OPENSSL_BLOCK_push$FUNC, false
    );
    static final FunctionDescriptor sk_OPENSSL_BLOCK_unshift$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle sk_OPENSSL_BLOCK_unshift$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_unshift",
        constants$57.sk_OPENSSL_BLOCK_unshift$FUNC, false
    );
    static final FunctionDescriptor sk_OPENSSL_BLOCK_pop$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle sk_OPENSSL_BLOCK_pop$MH = RuntimeHelper.downcallHandle(
        "sk_OPENSSL_BLOCK_pop",
        constants$57.sk_OPENSSL_BLOCK_pop$FUNC, false
    );
}


