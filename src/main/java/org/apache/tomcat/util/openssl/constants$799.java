// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$799 {

    static final FunctionDescriptor SSL_CIPHER_get_id$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_id$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_id",
        constants$799.SSL_CIPHER_get_id$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_protocol_id$FUNC = FunctionDescriptor.of(JAVA_SHORT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_protocol_id$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_protocol_id",
        constants$799.SSL_CIPHER_get_protocol_id$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_kx_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_kx_nid$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_kx_nid",
        constants$799.SSL_CIPHER_get_kx_nid$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_auth_nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_auth_nid$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_auth_nid",
        constants$799.SSL_CIPHER_get_auth_nid$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_handshake_digest$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_handshake_digest$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_handshake_digest",
        constants$799.SSL_CIPHER_get_handshake_digest$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_is_aead$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_is_aead$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_is_aead",
        constants$799.SSL_CIPHER_is_aead$FUNC, false
    );
}


