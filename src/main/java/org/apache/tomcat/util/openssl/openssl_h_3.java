// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class openssl_h_3 extends openssl_h_2 {

    public static int DH_FLAG_NO_EXP_CONSTTIME() {
        return (int)0L;
    }
    public static int DH_FLAG_FIPS_METHOD() {
        return (int)1024L;
    }
    public static int DH_FLAG_NON_FIPS_ALLOW() {
        return (int)1024L;
    }
    public static int DH_GENERATOR_2() {
        return (int)2L;
    }
    public static int DH_GENERATOR_5() {
        return (int)5L;
    }
    public static int DH_CHECK_P_NOT_PRIME() {
        return (int)1L;
    }
    public static int DH_CHECK_P_NOT_SAFE_PRIME() {
        return (int)2L;
    }
    public static int DH_UNABLE_TO_CHECK_GENERATOR() {
        return (int)4L;
    }
    public static int DH_NOT_SUITABLE_GENERATOR() {
        return (int)8L;
    }
    public static int DH_CHECK_Q_NOT_PRIME() {
        return (int)16L;
    }
    public static int DH_CHECK_INVALID_Q_VALUE() {
        return (int)32L;
    }
    public static int DH_CHECK_INVALID_J_VALUE() {
        return (int)64L;
    }
    public static int DH_CHECK_PUBKEY_TOO_SMALL() {
        return (int)1L;
    }
    public static int DH_CHECK_PUBKEY_TOO_LARGE() {
        return (int)2L;
    }
    public static int DH_CHECK_PUBKEY_INVALID() {
        return (int)4L;
    }
    public static int EVP_PKEY_DH_KDF_NONE() {
        return (int)1L;
    }
    public static int EVP_PKEY_DH_KDF_X9_42() {
        return (int)2L;
    }
    public static int DSA_F_DSAPARAMS_PRINT() {
        return (int)100L;
    }
    public static int DSA_F_DSAPARAMS_PRINT_FP() {
        return (int)101L;
    }
    public static int DSA_F_DSA_BUILTIN_KEYGEN() {
        return (int)202L;
    }
    public static int DSA_F_DSA_BUILTIN_PARAMGEN() {
        return (int)125L;
    }
    public static int DSA_F_DSA_BUILTIN_PARAMGEN2() {
        return (int)126L;
    }
    public static int DSA_F_DSA_GENERATE_KEY() {
        return (int)201L;
    }
    public static int DSA_F_DSA_GENERATE_PARAMETERS_EX() {
        return (int)200L;
    }
    public static int DSA_F_DSA_DO_SIGN() {
        return (int)112L;
    }
    public static int DSA_F_DSA_DO_VERIFY() {
        return (int)113L;
    }
    public static int DSA_F_DSA_METH_DUP() {
        return (int)127L;
    }
    public static int DSA_F_DSA_METH_NEW() {
        return (int)128L;
    }
    public static int DSA_F_DSA_METH_SET1_NAME() {
        return (int)129L;
    }
    public static int DSA_F_DSA_NEW_METHOD() {
        return (int)103L;
    }
    public static int DSA_F_DSA_PARAM_DECODE() {
        return (int)119L;
    }
    public static int DSA_F_DSA_PRINT_FP() {
        return (int)105L;
    }
    public static int DSA_F_DSA_PRIV_DECODE() {
        return (int)115L;
    }
    public static int DSA_F_DSA_PRIV_ENCODE() {
        return (int)116L;
    }
    public static int DSA_F_DSA_PUB_DECODE() {
        return (int)117L;
    }
    public static int DSA_F_DSA_PUB_ENCODE() {
        return (int)118L;
    }
    public static int DSA_F_DSA_SIGN() {
        return (int)106L;
    }
    public static int DSA_F_DSA_SIGN_SETUP() {
        return (int)107L;
    }
    public static int DSA_F_DSA_SIG_NEW() {
        return (int)102L;
    }
    public static int DSA_F_OLD_DSA_PRIV_DECODE() {
        return (int)122L;
    }
    public static int DSA_F_PKEY_DSA_CTRL() {
        return (int)120L;
    }
    public static int DSA_F_PKEY_DSA_CTRL_STR() {
        return (int)104L;
    }
    public static int DSA_F_PKEY_DSA_KEYGEN() {
        return (int)121L;
    }
    public static int DSA_R_BAD_Q_VALUE() {
        return (int)102L;
    }
    public static int DSA_R_BN_DECODE_ERROR() {
        return (int)108L;
    }
    public static int DSA_R_BN_ERROR() {
        return (int)109L;
    }
    public static int DSA_R_DECODE_ERROR() {
        return (int)104L;
    }
    public static int DSA_R_INVALID_DIGEST_TYPE() {
        return (int)106L;
    }
    public static int DSA_R_INVALID_PARAMETERS() {
        return (int)112L;
    }
    public static int DSA_R_KEY_SIZE_INVALID() {
        return (int)201L;
    }
    public static int DSA_R_KEY_SIZE_TOO_SMALL() {
        return (int)202L;
    }
    public static int DSA_R_MISSING_PARAMETERS() {
        return (int)101L;
    }
    public static int DSA_R_MISSING_PRIVATE_KEY() {
        return (int)111L;
    }
    public static int DSA_R_MODULUS_TOO_LARGE() {
        return (int)103L;
    }
    public static int DSA_R_NO_PARAMETERS_SET() {
        return (int)107L;
    }
    public static int DSA_R_NON_FIPS_DSA_METHOD() {
        return (int)200L;
    }
    public static int DSA_R_PARAMETER_ENCODING_ERROR() {
        return (int)105L;
    }
    public static int DSA_R_Q_NOT_PRIME() {
        return (int)113L;
    }
    public static int DSA_R_SEED_LEN_SMALL() {
        return (int)110L;
    }
    public static int OPENSSL_DSA_MAX_MODULUS_BITS() {
        return (int)10000L;
    }
    public static int OPENSSL_DSA_FIPS_MIN_MODULUS_BITS() {
        return (int)1024L;
    }
    public static int OPENSSL_DSA_FIPS_MIN_MODULUS_BITS_GEN() {
        return (int)2048L;
    }
    public static int DSA_FLAG_CACHE_MONT_P() {
        return (int)1L;
    }
    public static int DSA_FLAG_NO_EXP_CONSTTIME() {
        return (int)0L;
    }
    public static int DSA_FLAG_FIPS_METHOD() {
        return (int)1024L;
    }
    public static int DSA_FLAG_NON_FIPS_ALLOW() {
        return (int)1024L;
    }
    public static int DSA_FLAG_FIPS_CHECKED() {
        return (int)2048L;
    }
    public static int DSS_prime_checks() {
        return (int)64L;
    }
    public static int SHA_LBLOCK() {
        return (int)16L;
    }
    public static int SHA_DIGEST_LENGTH() {
        return (int)20L;
    }
    public static int SHA224_DIGEST_LENGTH() {
        return (int)28L;
    }
    public static int SHA256_DIGEST_LENGTH() {
        return (int)32L;
    }
    public static int SHA384_DIGEST_LENGTH() {
        return (int)48L;
    }
    public static int SHA512_DIGEST_LENGTH() {
        return (int)64L;
    }
    public static int X509_F_ADD_CERT_DIR() {
        return (int)100L;
    }
    public static int X509_F_BUILD_CHAIN() {
        return (int)106L;
    }
    public static int X509_F_BY_FILE_CTRL() {
        return (int)101L;
    }
    public static int X509_F_CHECK_NAME_CONSTRAINTS() {
        return (int)149L;
    }
    public static int X509_F_CHECK_POLICY() {
        return (int)145L;
    }
    public static int X509_F_DANE_I2D() {
        return (int)107L;
    }
    public static int X509_F_DIR_CTRL() {
        return (int)102L;
    }
    public static int X509_F_GET_CERT_BY_SUBJECT() {
        return (int)103L;
    }
    public static int X509_F_I2D_X509_AUX() {
        return (int)151L;
    }
    public static int X509_F_LOOKUP_CERTS_SK() {
        return (int)152L;
    }
    public static int X509_F_NETSCAPE_SPKI_B64_DECODE() {
        return (int)129L;
    }
    public static int X509_F_NETSCAPE_SPKI_B64_ENCODE() {
        return (int)130L;
    }
    public static int X509_F_NEW_DIR() {
        return (int)153L;
    }
    public static int X509_F_X509AT_ADD1_ATTR() {
        return (int)135L;
    }
    public static int X509_F_X509V3_ADD_EXT() {
        return (int)104L;
    }
    public static int X509_F_X509_ATTRIBUTE_CREATE_BY_NID() {
        return (int)136L;
    }
    public static int X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ() {
        return (int)137L;
    }
    public static int X509_F_X509_ATTRIBUTE_CREATE_BY_TXT() {
        return (int)140L;
    }
    public static int X509_F_X509_ATTRIBUTE_GET0_DATA() {
        return (int)139L;
    }
    public static int X509_F_X509_ATTRIBUTE_SET1_DATA() {
        return (int)138L;
    }
    public static int X509_F_X509_CHECK_PRIVATE_KEY() {
        return (int)128L;
    }
    public static int X509_F_X509_CRL_DIFF() {
        return (int)105L;
    }
    public static int X509_F_X509_CRL_METHOD_NEW() {
        return (int)154L;
    }
    public static int X509_F_X509_CRL_PRINT_FP() {
        return (int)147L;
    }
    public static int X509_F_X509_EXTENSION_CREATE_BY_NID() {
        return (int)108L;
    }
    public static int X509_F_X509_EXTENSION_CREATE_BY_OBJ() {
        return (int)109L;
    }
    public static int X509_F_X509_GET_PUBKEY_PARAMETERS() {
        return (int)110L;
    }
    public static int X509_F_X509_LOAD_CERT_CRL_FILE() {
        return (int)132L;
    }
    public static int X509_F_X509_LOAD_CERT_FILE() {
        return (int)111L;
    }
    public static int X509_F_X509_LOAD_CRL_FILE() {
        return (int)112L;
    }
    public static int X509_F_X509_LOOKUP_METH_NEW() {
        return (int)160L;
    }
    public static int X509_F_X509_LOOKUP_NEW() {
        return (int)155L;
    }
    public static int X509_F_X509_NAME_ADD_ENTRY() {
        return (int)113L;
    }
    public static int X509_F_X509_NAME_CANON() {
        return (int)156L;
    }
    public static int X509_F_X509_NAME_ENTRY_CREATE_BY_NID() {
        return (int)114L;
    }
    public static int X509_F_X509_NAME_ENTRY_CREATE_BY_TXT() {
        return (int)131L;
    }
    public static int X509_F_X509_NAME_ENTRY_SET_OBJECT() {
        return (int)115L;
    }
    public static int X509_F_X509_NAME_ONELINE() {
        return (int)116L;
    }
    public static int X509_F_X509_NAME_PRINT() {
        return (int)117L;
    }
    public static int X509_F_X509_OBJECT_NEW() {
        return (int)150L;
    }
    public static int X509_F_X509_PRINT_EX_FP() {
        return (int)118L;
    }
    public static int X509_F_X509_PUBKEY_DECODE() {
        return (int)148L;
    }
    public static int X509_F_X509_PUBKEY_GET() {
        return (int)161L;
    }
    public static int X509_F_X509_PUBKEY_GET0() {
        return (int)119L;
    }
    public static int X509_F_X509_PUBKEY_SET() {
        return (int)120L;
    }
    public static int X509_F_X509_REQ_CHECK_PRIVATE_KEY() {
        return (int)144L;
    }
    public static int X509_F_X509_REQ_PRINT_EX() {
        return (int)121L;
    }
    public static int X509_F_X509_REQ_PRINT_FP() {
        return (int)122L;
    }
    public static int X509_F_X509_REQ_TO_X509() {
        return (int)123L;
    }
    public static int X509_F_X509_STORE_ADD_CERT() {
        return (int)124L;
    }
    public static int X509_F_X509_STORE_ADD_CRL() {
        return (int)125L;
    }
    public static int X509_F_X509_STORE_ADD_LOOKUP() {
        return (int)157L;
    }
    public static int X509_F_X509_STORE_CTX_GET1_ISSUER() {
        return (int)146L;
    }
    public static int X509_F_X509_STORE_CTX_INIT() {
        return (int)143L;
    }
    public static int X509_F_X509_STORE_CTX_NEW() {
        return (int)142L;
    }
    public static int X509_F_X509_STORE_CTX_PURPOSE_INHERIT() {
        return (int)134L;
    }
    public static int X509_F_X509_STORE_NEW() {
        return (int)158L;
    }
    public static int X509_F_X509_TO_X509_REQ() {
        return (int)126L;
    }
    public static int X509_F_X509_TRUST_ADD() {
        return (int)133L;
    }
    public static int X509_F_X509_TRUST_SET() {
        return (int)141L;
    }
    public static int X509_F_X509_VERIFY_CERT() {
        return (int)127L;
    }
    public static int X509_F_X509_VERIFY_PARAM_NEW() {
        return (int)159L;
    }
    public static int X509_R_AKID_MISMATCH() {
        return (int)110L;
    }
    public static int X509_R_BAD_SELECTOR() {
        return (int)133L;
    }
    public static int X509_R_BAD_X509_FILETYPE() {
        return (int)100L;
    }
    public static int X509_R_BASE64_DECODE_ERROR() {
        return (int)118L;
    }
    public static int X509_R_CANT_CHECK_DH_KEY() {
        return (int)114L;
    }
    public static int X509_R_CERT_ALREADY_IN_HASH_TABLE() {
        return (int)101L;
    }
    public static int X509_R_CRL_ALREADY_DELTA() {
        return (int)127L;
    }
    public static int X509_R_CRL_VERIFY_FAILURE() {
        return (int)131L;
    }
    public static int X509_R_IDP_MISMATCH() {
        return (int)128L;
    }
    public static int X509_R_INVALID_ATTRIBUTES() {
        return (int)138L;
    }
    public static int X509_R_INVALID_DIRECTORY() {
        return (int)113L;
    }
    public static int X509_R_INVALID_FIELD_NAME() {
        return (int)119L;
    }
    public static int X509_R_INVALID_TRUST() {
        return (int)123L;
    }
    public static int X509_R_ISSUER_MISMATCH() {
        return (int)129L;
    }
    public static int X509_R_KEY_TYPE_MISMATCH() {
        return (int)115L;
    }
    public static int X509_R_KEY_VALUES_MISMATCH() {
        return (int)116L;
    }
    public static int X509_R_LOADING_CERT_DIR() {
        return (int)103L;
    }
    public static int X509_R_LOADING_DEFAULTS() {
        return (int)104L;
    }
    public static int X509_R_METHOD_NOT_SUPPORTED() {
        return (int)124L;
    }
    public static int X509_R_NAME_TOO_LONG() {
        return (int)134L;
    }
    public static int X509_R_NEWER_CRL_NOT_NEWER() {
        return (int)132L;
    }
    public static int X509_R_NO_CERTIFICATE_FOUND() {
        return (int)135L;
    }
    public static int X509_R_NO_CERTIFICATE_OR_CRL_FOUND() {
        return (int)136L;
    }
    public static int X509_R_NO_CERT_SET_FOR_US_TO_VERIFY() {
        return (int)105L;
    }
    public static int X509_R_NO_CRL_FOUND() {
        return (int)137L;
    }
    public static int X509_R_NO_CRL_NUMBER() {
        return (int)130L;
    }
    public static int X509_R_PUBLIC_KEY_DECODE_ERROR() {
        return (int)125L;
    }
    public static int X509_R_PUBLIC_KEY_ENCODE_ERROR() {
        return (int)126L;
    }
    public static int X509_R_SHOULD_RETRY() {
        return (int)106L;
    }
    public static int X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN() {
        return (int)107L;
    }
    public static int X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY() {
        return (int)108L;
    }
    public static int X509_R_UNKNOWN_KEY_TYPE() {
        return (int)117L;
    }
    public static int X509_R_UNKNOWN_NID() {
        return (int)109L;
    }
    public static int X509_R_UNKNOWN_PURPOSE_ID() {
        return (int)121L;
    }
    public static int X509_R_UNKNOWN_TRUST_ID() {
        return (int)120L;
    }
    public static int X509_R_UNSUPPORTED_ALGORITHM() {
        return (int)111L;
    }
    public static int X509_R_WRONG_LOOKUP_TYPE() {
        return (int)112L;
    }
    public static int X509_R_WRONG_TYPE() {
        return (int)122L;
    }
    public static int X509_SIG_INFO_VALID() {
        return (int)1L;
    }
    public static int X509_SIG_INFO_TLS() {
        return (int)2L;
    }
    public static int X509_FILETYPE_PEM() {
        return (int)1L;
    }
    public static int X509_FILETYPE_ASN1() {
        return (int)2L;
    }
    public static int X509_FILETYPE_DEFAULT() {
        return (int)3L;
    }
    public static int X509v3_KU_DIGITAL_SIGNATURE() {
        return (int)128L;
    }
    public static int X509v3_KU_NON_REPUDIATION() {
        return (int)64L;
    }
    public static int X509v3_KU_KEY_ENCIPHERMENT() {
        return (int)32L;
    }
    public static int X509v3_KU_DATA_ENCIPHERMENT() {
        return (int)16L;
    }
    public static int X509v3_KU_KEY_AGREEMENT() {
        return (int)8L;
    }
    public static int X509v3_KU_KEY_CERT_SIGN() {
        return (int)4L;
    }
    public static int X509v3_KU_CRL_SIGN() {
        return (int)2L;
    }
    public static int X509v3_KU_ENCIPHER_ONLY() {
        return (int)1L;
    }
    public static int X509v3_KU_DECIPHER_ONLY() {
        return (int)32768L;
    }
    public static int X509v3_KU_UNDEF() {
        return (int)65535L;
    }
    public static int X509_EX_V_NETSCAPE_HACK() {
        return (int)32768L;
    }
    public static int X509_EX_V_INIT() {
        return (int)1L;
    }
    public static int X509_TRUST_DEFAULT() {
        return (int)0L;
    }
    public static int X509_TRUST_COMPAT() {
        return (int)1L;
    }
    public static int X509_TRUST_SSL_CLIENT() {
        return (int)2L;
    }
    public static int X509_TRUST_SSL_SERVER() {
        return (int)3L;
    }
    public static int X509_TRUST_EMAIL() {
        return (int)4L;
    }
    public static int X509_TRUST_OBJECT_SIGN() {
        return (int)5L;
    }
    public static int X509_TRUST_OCSP_SIGN() {
        return (int)6L;
    }
    public static int X509_TRUST_OCSP_REQUEST() {
        return (int)7L;
    }
    public static int X509_TRUST_TSA() {
        return (int)8L;
    }
    public static int X509_TRUST_MIN() {
        return (int)1L;
    }
    public static int X509_TRUST_MAX() {
        return (int)8L;
    }
    public static int X509_TRUST_TRUSTED() {
        return (int)1L;
    }
    public static int X509_TRUST_REJECTED() {
        return (int)2L;
    }
    public static int X509_TRUST_UNTRUSTED() {
        return (int)3L;
    }
    public static int X509_FLAG_COMPAT() {
        return (int)0L;
    }
    public static int XN_FLAG_COMPAT() {
        return (int)0L;
    }
    public static int XN_FLAG_FN_SN() {
        return (int)0L;
    }
    public static int LH_LOAD_MULT() {
        return (int)256L;
    }
    public static int X509_LU_FAIL() {
        return (int)0L;
    }
    public static int X509_L_FILE_LOAD() {
        return (int)1L;
    }
    public static int X509_L_ADD_DIR() {
        return (int)2L;
    }
    public static int X509_V_OK() {
        return (int)0L;
    }
    public static int X509_V_ERR_UNSPECIFIED() {
        return (int)1L;
    }
    public static int X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT() {
        return (int)2L;
    }
    public static int X509_V_ERR_UNABLE_TO_GET_CRL() {
        return (int)3L;
    }
    public static int X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE() {
        return (int)4L;
    }
    public static int X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE() {
        return (int)5L;
    }
    public static int X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY() {
        return (int)6L;
    }
    public static int X509_V_ERR_CERT_SIGNATURE_FAILURE() {
        return (int)7L;
    }
    public static int X509_V_ERR_CRL_SIGNATURE_FAILURE() {
        return (int)8L;
    }
    public static int X509_V_ERR_CERT_NOT_YET_VALID() {
        return (int)9L;
    }
    public static int X509_V_ERR_CERT_HAS_EXPIRED() {
        return (int)10L;
    }
    public static int X509_V_ERR_CRL_NOT_YET_VALID() {
        return (int)11L;
    }
    public static int X509_V_ERR_CRL_HAS_EXPIRED() {
        return (int)12L;
    }
    public static int X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD() {
        return (int)13L;
    }
    public static int X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD() {
        return (int)14L;
    }
    public static int X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD() {
        return (int)15L;
    }
    public static int X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD() {
        return (int)16L;
    }
    public static int X509_V_ERR_OUT_OF_MEM() {
        return (int)17L;
    }
    public static int X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT() {
        return (int)18L;
    }
    public static int X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN() {
        return (int)19L;
    }
    public static int X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY() {
        return (int)20L;
    }
    public static int X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE() {
        return (int)21L;
    }
    public static int X509_V_ERR_CERT_CHAIN_TOO_LONG() {
        return (int)22L;
    }
    public static int X509_V_ERR_CERT_REVOKED() {
        return (int)23L;
    }
    public static int X509_V_ERR_INVALID_CA() {
        return (int)24L;
    }
    public static int X509_V_ERR_PATH_LENGTH_EXCEEDED() {
        return (int)25L;
    }
    public static int X509_V_ERR_INVALID_PURPOSE() {
        return (int)26L;
    }
    public static int X509_V_ERR_CERT_UNTRUSTED() {
        return (int)27L;
    }
    public static int X509_V_ERR_CERT_REJECTED() {
        return (int)28L;
    }
    public static int X509_V_ERR_SUBJECT_ISSUER_MISMATCH() {
        return (int)29L;
    }
    public static int X509_V_ERR_AKID_SKID_MISMATCH() {
        return (int)30L;
    }
    public static int X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH() {
        return (int)31L;
    }
    public static int X509_V_ERR_KEYUSAGE_NO_CERTSIGN() {
        return (int)32L;
    }
    public static int X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER() {
        return (int)33L;
    }
    public static int X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION() {
        return (int)34L;
    }
    public static int X509_V_ERR_KEYUSAGE_NO_CRL_SIGN() {
        return (int)35L;
    }
    public static int X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION() {
        return (int)36L;
    }
    public static int X509_V_ERR_INVALID_NON_CA() {
        return (int)37L;
    }
    public static int X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED() {
        return (int)38L;
    }
    public static int X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE() {
        return (int)39L;
    }
    public static int X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED() {
        return (int)40L;
    }
    public static int X509_V_ERR_INVALID_EXTENSION() {
        return (int)41L;
    }
    public static int X509_V_ERR_INVALID_POLICY_EXTENSION() {
        return (int)42L;
    }
    public static int X509_V_ERR_NO_EXPLICIT_POLICY() {
        return (int)43L;
    }
    public static int X509_V_ERR_DIFFERENT_CRL_SCOPE() {
        return (int)44L;
    }
    public static int X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE() {
        return (int)45L;
    }
    public static int X509_V_ERR_UNNESTED_RESOURCE() {
        return (int)46L;
    }
    public static int X509_V_ERR_PERMITTED_VIOLATION() {
        return (int)47L;
    }
    public static int X509_V_ERR_EXCLUDED_VIOLATION() {
        return (int)48L;
    }
    public static int X509_V_ERR_SUBTREE_MINMAX() {
        return (int)49L;
    }
    public static int X509_V_ERR_APPLICATION_VERIFICATION() {
        return (int)50L;
    }
    public static int X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE() {
        return (int)51L;
    }
    public static int X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX() {
        return (int)52L;
    }
    public static int X509_V_ERR_UNSUPPORTED_NAME_SYNTAX() {
        return (int)53L;
    }
    public static int X509_V_ERR_CRL_PATH_VALIDATION_ERROR() {
        return (int)54L;
    }
    public static int X509_V_ERR_PATH_LOOP() {
        return (int)55L;
    }
    public static int X509_V_ERR_SUITE_B_INVALID_VERSION() {
        return (int)56L;
    }
    public static int X509_V_ERR_SUITE_B_INVALID_ALGORITHM() {
        return (int)57L;
    }
    public static int X509_V_ERR_SUITE_B_INVALID_CURVE() {
        return (int)58L;
    }
    public static int X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM() {
        return (int)59L;
    }
    public static int X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED() {
        return (int)60L;
    }
    public static int X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256() {
        return (int)61L;
    }
    public static int X509_V_ERR_HOSTNAME_MISMATCH() {
        return (int)62L;
    }
    public static int X509_V_ERR_EMAIL_MISMATCH() {
        return (int)63L;
    }
    public static int X509_V_ERR_IP_ADDRESS_MISMATCH() {
        return (int)64L;
    }
    public static int X509_V_ERR_DANE_NO_MATCH() {
        return (int)65L;
    }
    public static int X509_V_ERR_EE_KEY_TOO_SMALL() {
        return (int)66L;
    }
    public static int X509_V_ERR_CA_KEY_TOO_SMALL() {
        return (int)67L;
    }
    public static int X509_V_ERR_CA_MD_TOO_WEAK() {
        return (int)68L;
    }
    public static int X509_V_ERR_INVALID_CALL() {
        return (int)69L;
    }
    public static int X509_V_ERR_STORE_LOOKUP() {
        return (int)70L;
    }
    public static int X509_V_ERR_NO_VALID_SCTS() {
        return (int)71L;
    }
    public static int X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION() {
        return (int)72L;
    }
    public static int X509_V_ERR_OCSP_VERIFY_NEEDED() {
        return (int)73L;
    }
    public static int X509_V_ERR_OCSP_VERIFY_FAILED() {
        return (int)74L;
    }
    public static int X509_V_ERR_OCSP_CERT_UNKNOWN() {
        return (int)75L;
    }
    public static int X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH() {
        return (int)76L;
    }
    public static int X509_V_ERR_NO_ISSUER_PUBLIC_KEY() {
        return (int)77L;
    }
    public static int X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM() {
        return (int)78L;
    }
    public static int X509_V_ERR_EC_KEY_EXPLICIT_PARAMS() {
        return (int)79L;
    }
    public static int X509_V_FLAG_CB_ISSUER_CHECK() {
        return (int)0L;
    }
    public static int X509_V_FLAG_USE_CHECK_TIME() {
        return (int)2L;
    }
    public static int X509_V_FLAG_CRL_CHECK() {
        return (int)4L;
    }
    public static int X509_V_FLAG_CRL_CHECK_ALL() {
        return (int)8L;
    }
    public static int X509_V_FLAG_IGNORE_CRITICAL() {
        return (int)16L;
    }
    public static int X509_V_FLAG_X509_STRICT() {
        return (int)32L;
    }
    public static int X509_V_FLAG_ALLOW_PROXY_CERTS() {
        return (int)64L;
    }
    public static int X509_V_FLAG_POLICY_CHECK() {
        return (int)128L;
    }
    public static int X509_V_FLAG_EXPLICIT_POLICY() {
        return (int)256L;
    }
    public static int X509_V_FLAG_INHIBIT_ANY() {
        return (int)512L;
    }
    public static int X509_V_FLAG_INHIBIT_MAP() {
        return (int)1024L;
    }
    public static int X509_V_FLAG_NOTIFY_POLICY() {
        return (int)2048L;
    }
    public static int X509_V_FLAG_EXTENDED_CRL_SUPPORT() {
        return (int)4096L;
    }
    public static int X509_V_FLAG_USE_DELTAS() {
        return (int)8192L;
    }
    public static int X509_V_FLAG_CHECK_SS_SIGNATURE() {
        return (int)16384L;
    }
    public static int X509_V_FLAG_TRUSTED_FIRST() {
        return (int)32768L;
    }
    public static int X509_V_FLAG_SUITEB_128_LOS_ONLY() {
        return (int)65536L;
    }
    public static int X509_V_FLAG_SUITEB_192_LOS() {
        return (int)131072L;
    }
    public static int X509_V_FLAG_SUITEB_128_LOS() {
        return (int)196608L;
    }
    public static int X509_V_FLAG_PARTIAL_CHAIN() {
        return (int)524288L;
    }
    public static int X509_V_FLAG_NO_ALT_CHAINS() {
        return (int)1048576L;
    }
    public static int X509_V_FLAG_NO_CHECK_TIME() {
        return (int)2097152L;
    }
    public static int X509_VP_FLAG_DEFAULT() {
        return (int)1L;
    }
    public static int X509_VP_FLAG_OVERWRITE() {
        return (int)2L;
    }
    public static int X509_VP_FLAG_RESET_FLAGS() {
        return (int)4L;
    }
    public static int X509_VP_FLAG_LOCKED() {
        return (int)8L;
    }
    public static int X509_VP_FLAG_ONCE() {
        return (int)16L;
    }
    public static int X509_PCY_TREE_INTERNAL() {
        return (int)0L;
    }
    public static int X509_PCY_TREE_VALID() {
        return (int)1L;
    }
    public static int X509_PCY_TREE_EMPTY() {
        return (int)2L;
    }
    public static int X509_PCY_TREE_EXPLICIT() {
        return (int)4L;
    }
    public static int PKCS7_F_DO_PKCS7_SIGNED_ATTRIB() {
        return (int)136L;
    }
    public static int PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME() {
        return (int)135L;
    }
    public static int PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP() {
        return (int)118L;
    }
    public static int PKCS7_F_PKCS7_ADD_CERTIFICATE() {
        return (int)100L;
    }
    public static int PKCS7_F_PKCS7_ADD_CRL() {
        return (int)101L;
    }
    public static int PKCS7_F_PKCS7_ADD_RECIPIENT_INFO() {
        return (int)102L;
    }
    public static int PKCS7_F_PKCS7_ADD_SIGNATURE() {
        return (int)131L;
    }
    public static int PKCS7_F_PKCS7_ADD_SIGNER() {
        return (int)103L;
    }
    public static int PKCS7_F_PKCS7_BIO_ADD_DIGEST() {
        return (int)125L;
    }
    public static int PKCS7_F_PKCS7_COPY_EXISTING_DIGEST() {
        return (int)138L;
    }
    public static int PKCS7_F_PKCS7_CTRL() {
        return (int)104L;
    }
    public static int PKCS7_F_PKCS7_DATADECODE() {
        return (int)112L;
    }
    public static int PKCS7_F_PKCS7_DATAFINAL() {
        return (int)128L;
    }
    public static int PKCS7_F_PKCS7_DATAINIT() {
        return (int)105L;
    }
    public static int PKCS7_F_PKCS7_DATAVERIFY() {
        return (int)107L;
    }
    public static int PKCS7_F_PKCS7_DECRYPT() {
        return (int)114L;
    }
    public static int PKCS7_F_PKCS7_DECRYPT_RINFO() {
        return (int)133L;
    }
    public static int PKCS7_F_PKCS7_ENCODE_RINFO() {
        return (int)132L;
    }
    public static int PKCS7_F_PKCS7_ENCRYPT() {
        return (int)115L;
    }
    public static int PKCS7_F_PKCS7_FINAL() {
        return (int)134L;
    }
    public static int PKCS7_F_PKCS7_FIND_DIGEST() {
        return (int)127L;
    }
    public static int PKCS7_F_PKCS7_GET0_SIGNERS() {
        return (int)124L;
    }
    public static int PKCS7_F_PKCS7_RECIP_INFO_SET() {
        return (int)130L;
    }
    public static int PKCS7_F_PKCS7_SET_CIPHER() {
        return (int)108L;
    }
    public static int PKCS7_F_PKCS7_SET_CONTENT() {
        return (int)109L;
    }
    public static int PKCS7_F_PKCS7_SET_DIGEST() {
        return (int)126L;
    }
    public static int PKCS7_F_PKCS7_SET_TYPE() {
        return (int)110L;
    }
    public static int PKCS7_F_PKCS7_SIGN() {
        return (int)116L;
    }
    public static int PKCS7_F_PKCS7_SIGNATUREVERIFY() {
        return (int)113L;
    }
    public static int PKCS7_F_PKCS7_SIGNER_INFO_SET() {
        return (int)129L;
    }
    public static int PKCS7_F_PKCS7_SIGNER_INFO_SIGN() {
        return (int)139L;
    }
    public static int PKCS7_F_PKCS7_SIGN_ADD_SIGNER() {
        return (int)137L;
    }
    public static int PKCS7_F_PKCS7_SIMPLE_SMIMECAP() {
        return (int)119L;
    }
    public static int PKCS7_F_PKCS7_VERIFY() {
        return (int)117L;
    }
    public static int PKCS7_R_CERTIFICATE_VERIFY_ERROR() {
        return (int)117L;
    }
    public static int PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER() {
        return (int)144L;
    }
    public static int PKCS7_R_CIPHER_NOT_INITIALIZED() {
        return (int)116L;
    }
    public static int PKCS7_R_CONTENT_AND_DATA_PRESENT() {
        return (int)118L;
    }
    public static int PKCS7_R_CTRL_ERROR() {
        return (int)152L;
    }
    public static int PKCS7_R_DECRYPT_ERROR() {
        return (int)119L;
    }
    public static int PKCS7_R_DIGEST_FAILURE() {
        return (int)101L;
    }
    public static int PKCS7_R_ENCRYPTION_CTRL_FAILURE() {
        return (int)149L;
    }
    public static int PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE() {
        return (int)150L;
    }
    public static int PKCS7_R_ERROR_ADDING_RECIPIENT() {
        return (int)120L;
    }
    public static int PKCS7_R_ERROR_SETTING_CIPHER() {
        return (int)121L;
    }
    public static int PKCS7_R_INVALID_NULL_POINTER() {
        return (int)143L;
    }
    public static int PKCS7_R_INVALID_SIGNED_DATA_TYPE() {
        return (int)155L;
    }
    public static int PKCS7_R_NO_CONTENT() {
        return (int)122L;
    }
    public static int PKCS7_R_NO_DEFAULT_DIGEST() {
        return (int)151L;
    }
    public static int PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND() {
        return (int)154L;
    }
    public static int PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE() {
        return (int)115L;
    }
    public static int PKCS7_R_NO_SIGNATURES_ON_DATA() {
        return (int)123L;
    }
    public static int PKCS7_R_NO_SIGNERS() {
        return (int)142L;
    }
    public static int PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE() {
        return (int)104L;
    }
    public static int PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR() {
        return (int)124L;
    }
    public static int PKCS7_R_PKCS7_ADD_SIGNER_ERROR() {
        return (int)153L;
    }
    public static int PKCS7_R_PKCS7_DATASIGN() {
        return (int)145L;
    }
    public static int PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE() {
        return (int)127L;
    }
    public static int PKCS7_R_SIGNATURE_FAILURE() {
        return (int)105L;
    }
    public static int PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND() {
        return (int)128L;
    }
    public static int PKCS7_R_SIGNING_CTRL_FAILURE() {
        return (int)147L;
    }
    public static int PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE() {
        return (int)148L;
    }
    public static int PKCS7_R_SMIME_TEXT_ERROR() {
        return (int)129L;
    }
    public static int PKCS7_R_UNABLE_TO_FIND_CERTIFICATE() {
        return (int)106L;
    }
    public static int PKCS7_R_UNABLE_TO_FIND_MEM_BIO() {
        return (int)107L;
    }
    public static int PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST() {
        return (int)108L;
    }
    public static int PKCS7_R_UNKNOWN_DIGEST_TYPE() {
        return (int)109L;
    }
    public static int PKCS7_R_UNKNOWN_OPERATION() {
        return (int)110L;
    }
    public static int PKCS7_R_UNSUPPORTED_CIPHER_TYPE() {
        return (int)111L;
    }
    public static int PKCS7_R_UNSUPPORTED_CONTENT_TYPE() {
        return (int)112L;
    }
    public static int PKCS7_R_WRONG_CONTENT_TYPE() {
        return (int)113L;
    }
    public static int PKCS7_R_WRONG_PKCS7_TYPE() {
        return (int)114L;
    }
    public static int PKCS7_S_HEADER() {
        return (int)0L;
    }
    public static int PKCS7_S_BODY() {
        return (int)1L;
    }
    public static int PKCS7_S_TAIL() {
        return (int)2L;
    }
    public static int PKCS7_OP_SET_DETACHED_SIGNATURE() {
        return (int)1L;
    }
    public static int PKCS7_OP_GET_DETACHED_SIGNATURE() {
        return (int)2L;
    }
    public static int PKCS7_TEXT() {
        return (int)1L;
    }
    public static int PKCS7_NOCERTS() {
        return (int)2L;
    }
    public static int PKCS7_NOSIGS() {
        return (int)4L;
    }
    public static int PKCS7_NOCHAIN() {
        return (int)8L;
    }
    public static int PKCS7_NOINTERN() {
        return (int)16L;
    }
    public static int PKCS7_NOVERIFY() {
        return (int)32L;
    }
    public static int PKCS7_DETACHED() {
        return (int)64L;
    }
    public static int PKCS7_BINARY() {
        return (int)128L;
    }
    public static int PKCS7_NOATTR() {
        return (int)256L;
    }
    public static int PKCS7_NOSMIMECAP() {
        return (int)512L;
    }
    public static int PKCS7_NOOLDMIMETYPE() {
        return (int)1024L;
    }
    public static int PKCS7_CRLFEOL() {
        return (int)2048L;
    }
    public static int PKCS7_STREAM() {
        return (int)4096L;
    }
    public static int PKCS7_NOCRL() {
        return (int)8192L;
    }
    public static int PKCS7_PARTIAL() {
        return (int)16384L;
    }
    public static int PKCS7_REUSE_DIGEST() {
        return (int)32768L;
    }
    public static int PKCS7_NO_DUAL_CONTENT() {
        return (int)65536L;
    }
    public static int SMIME_ASCIICRLF() {
        return (int)524288L;
    }
    public static int X509_EXT_PACK_UNKNOWN() {
        return (int)1L;
    }
    public static int X509_EXT_PACK_STRING() {
        return (int)2L;
    }
    public static int PEM_F_B2I_DSS() {
        return (int)127L;
    }
    public static int PEM_F_B2I_PVK_BIO() {
        return (int)128L;
    }
    public static int PEM_F_B2I_RSA() {
        return (int)129L;
    }
    public static int PEM_F_CHECK_BITLEN_DSA() {
        return (int)130L;
    }
    public static int PEM_F_CHECK_BITLEN_RSA() {
        return (int)131L;
    }
    public static int PEM_F_D2I_PKCS8PRIVATEKEY_BIO() {
        return (int)120L;
    }
    public static int PEM_F_D2I_PKCS8PRIVATEKEY_FP() {
        return (int)121L;
    }
    public static int PEM_F_DO_B2I() {
        return (int)132L;
    }
    public static int PEM_F_DO_B2I_BIO() {
        return (int)133L;
    }
    public static int PEM_F_DO_BLOB_HEADER() {
        return (int)134L;
    }
    public static int PEM_F_DO_I2B() {
        return (int)146L;
    }
    public static int PEM_F_DO_PK8PKEY() {
        return (int)126L;
    }
    public static int PEM_F_DO_PK8PKEY_FP() {
        return (int)125L;
    }
    public static int PEM_F_DO_PVK_BODY() {
        return (int)135L;
    }
    public static int PEM_F_DO_PVK_HEADER() {
        return (int)136L;
    }
    public static int PEM_F_GET_HEADER_AND_DATA() {
        return (int)143L;
    }
    public static int PEM_F_GET_NAME() {
        return (int)144L;
    }
    public static int PEM_F_I2B_PVK() {
        return (int)137L;
    }
    public static int PEM_F_I2B_PVK_BIO() {
        return (int)138L;
    }
    public static int PEM_F_LOAD_IV() {
        return (int)101L;
    }
    public static int PEM_F_PEM_ASN1_READ() {
        return (int)102L;
    }
    public static int PEM_F_PEM_ASN1_READ_BIO() {
        return (int)103L;
    }
    public static int PEM_F_PEM_ASN1_WRITE() {
        return (int)104L;
    }
    public static int PEM_F_PEM_ASN1_WRITE_BIO() {
        return (int)105L;
    }
    public static int PEM_F_PEM_DEF_CALLBACK() {
        return (int)100L;
    }
    public static int PEM_F_PEM_DO_HEADER() {
        return (int)106L;
    }
    public static int PEM_F_PEM_GET_EVP_CIPHER_INFO() {
        return (int)107L;
    }
    public static int PEM_F_PEM_READ() {
        return (int)108L;
    }
    public static int PEM_F_PEM_READ_BIO() {
        return (int)109L;
    }
    public static int PEM_F_PEM_READ_BIO_DHPARAMS() {
        return (int)141L;
    }
    public static int PEM_F_PEM_READ_BIO_EX() {
        return (int)145L;
    }
    public static int PEM_F_PEM_READ_BIO_PARAMETERS() {
        return (int)140L;
    }
    public static int PEM_F_PEM_READ_BIO_PRIVATEKEY() {
        return (int)123L;
    }
    public static int PEM_F_PEM_READ_DHPARAMS() {
        return (int)142L;
    }
    public static int PEM_F_PEM_READ_PRIVATEKEY() {
        return (int)124L;
    }
    public static int PEM_F_PEM_SIGNFINAL() {
        return (int)112L;
    }
    public static int PEM_F_PEM_WRITE() {
        return (int)113L;
    }
    public static int PEM_F_PEM_WRITE_BIO() {
        return (int)114L;
    }
    public static int PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL() {
        return (int)147L;
    }
    public static int PEM_F_PEM_WRITE_PRIVATEKEY() {
        return (int)139L;
    }
    public static int PEM_F_PEM_X509_INFO_READ() {
        return (int)115L;
    }
    public static int PEM_F_PEM_X509_INFO_READ_BIO() {
        return (int)116L;
    }
    public static int PEM_F_PEM_X509_INFO_WRITE_BIO() {
        return (int)117L;
    }
    public static int PEM_R_BAD_BASE64_DECODE() {
        return (int)100L;
    }
    public static int PEM_R_BAD_DECRYPT() {
        return (int)101L;
    }
    public static int PEM_R_BAD_END_LINE() {
        return (int)102L;
    }
    public static int PEM_R_BAD_IV_CHARS() {
        return (int)103L;
    }
    public static int PEM_R_BAD_MAGIC_NUMBER() {
        return (int)116L;
    }
    public static int PEM_R_BAD_PASSWORD_READ() {
        return (int)104L;
    }
    public static int PEM_R_BAD_VERSION_NUMBER() {
        return (int)117L;
    }
    public static int PEM_R_BIO_WRITE_FAILURE() {
        return (int)118L;
    }
    public static int PEM_R_CIPHER_IS_NULL() {
        return (int)127L;
    }
    public static int PEM_R_ERROR_CONVERTING_PRIVATE_KEY() {
        return (int)115L;
    }
    public static int PEM_R_EXPECTING_PRIVATE_KEY_BLOB() {
        return (int)119L;
    }
    public static int PEM_R_EXPECTING_PUBLIC_KEY_BLOB() {
        return (int)120L;
    }
    public static int PEM_R_HEADER_TOO_LONG() {
        return (int)128L;
    }
    public static int PEM_R_INCONSISTENT_HEADER() {
        return (int)121L;
    }
    public static int PEM_R_KEYBLOB_HEADER_PARSE_ERROR() {
        return (int)122L;
    }
    public static int PEM_R_KEYBLOB_TOO_SHORT() {
        return (int)123L;
    }
    public static int PEM_R_MISSING_DEK_IV() {
        return (int)129L;
    }
    public static int PEM_R_NOT_DEK_INFO() {
        return (int)105L;
    }
    public static int PEM_R_NOT_ENCRYPTED() {
        return (int)106L;
    }
    public static int PEM_R_NOT_PROC_TYPE() {
        return (int)107L;
    }
    public static int PEM_R_NO_START_LINE() {
        return (int)108L;
    }
    public static int PEM_R_PROBLEMS_GETTING_PASSWORD() {
        return (int)109L;
    }
    public static int PEM_R_PVK_DATA_TOO_SHORT() {
        return (int)124L;
    }
    public static int PEM_R_PVK_TOO_SHORT() {
        return (int)125L;
    }
    public static int PEM_R_READ_KEY() {
        return (int)111L;
    }
    public static int PEM_R_SHORT_HEADER() {
        return (int)112L;
    }
    public static int PEM_R_UNEXPECTED_DEK_IV() {
        return (int)130L;
    }
    public static int PEM_R_UNSUPPORTED_CIPHER() {
        return (int)113L;
    }
    public static int PEM_R_UNSUPPORTED_ENCRYPTION() {
        return (int)114L;
    }
    public static int PEM_R_UNSUPPORTED_KEY_COMPONENTS() {
        return (int)126L;
    }
    public static int PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE() {
        return (int)110L;
    }
    public static int PEM_BUFSIZE() {
        return (int)1024L;
    }
    public static int PEM_TYPE_ENCRYPTED() {
        return (int)10L;
    }
    public static int PEM_TYPE_MIC_ONLY() {
        return (int)20L;
    }
    public static int PEM_TYPE_MIC_CLEAR() {
        return (int)30L;
    }
    public static int PEM_TYPE_CLEAR() {
        return (int)40L;
    }
    public static int PEM_FLAG_SECURE() {
        return (int)1L;
    }
    public static int PEM_FLAG_EAY_COMPATIBLE() {
        return (int)2L;
    }
    public static int PEM_FLAG_ONLY_B64() {
        return (int)4L;
    }
    public static int HMAC_MAX_MD_CBLOCK() {
        return (int)128L;
    }
    public static int ASYNC_F_ASYNC_CTX_NEW() {
        return (int)100L;
    }
    public static int ASYNC_F_ASYNC_INIT_THREAD() {
        return (int)101L;
    }
    public static int ASYNC_F_ASYNC_JOB_NEW() {
        return (int)102L;
    }
    public static int ASYNC_F_ASYNC_PAUSE_JOB() {
        return (int)103L;
    }
    public static int ASYNC_F_ASYNC_START_FUNC() {
        return (int)104L;
    }
    public static int ASYNC_F_ASYNC_START_JOB() {
        return (int)105L;
    }
    public static int ASYNC_F_ASYNC_WAIT_CTX_SET_WAIT_FD() {
        return (int)106L;
    }
    public static int ASYNC_R_FAILED_TO_SET_POOL() {
        return (int)101L;
    }
    public static int ASYNC_R_FAILED_TO_SWAP_CONTEXT() {
        return (int)102L;
    }
    public static int ASYNC_R_INIT_FAILED() {
        return (int)105L;
    }
    public static int ASYNC_R_INVALID_POOL_SIZE() {
        return (int)103L;
    }
    public static int ASYNC_ERR() {
        return (int)0L;
    }
    public static int ASYNC_NO_JOBS() {
        return (int)1L;
    }
    public static int ASYNC_PAUSE() {
        return (int)2L;
    }
    public static int ASYNC_FINISH() {
        return (int)3L;
    }
    public static int CT_F_CTLOG_NEW() {
        return (int)117L;
    }
    public static int CT_F_CTLOG_NEW_FROM_BASE64() {
        return (int)118L;
    }
    public static int CT_F_CTLOG_NEW_FROM_CONF() {
        return (int)119L;
    }
    public static int CT_F_CTLOG_STORE_LOAD_CTX_NEW() {
        return (int)122L;
    }
    public static int CT_F_CTLOG_STORE_LOAD_FILE() {
        return (int)123L;
    }
    public static int CT_F_CTLOG_STORE_LOAD_LOG() {
        return (int)130L;
    }
    public static int CT_F_CTLOG_STORE_NEW() {
        return (int)131L;
    }
    public static int CT_F_CT_BASE64_DECODE() {
        return (int)124L;
    }
    public static int CT_F_CT_POLICY_EVAL_CTX_NEW() {
        return (int)133L;
    }
    public static int CT_F_CT_V1_LOG_ID_FROM_PKEY() {
        return (int)125L;
    }
    public static int CT_F_I2O_SCT() {
        return (int)107L;
    }
    public static int CT_F_I2O_SCT_LIST() {
        return (int)108L;
    }
    public static int CT_F_I2O_SCT_SIGNATURE() {
        return (int)109L;
    }
    public static int CT_F_O2I_SCT() {
        return (int)110L;
    }
    public static int CT_F_O2I_SCT_LIST() {
        return (int)111L;
    }
    public static int CT_F_O2I_SCT_SIGNATURE() {
        return (int)112L;
    }
    public static int CT_F_SCT_CTX_NEW() {
        return (int)126L;
    }
    public static int CT_F_SCT_CTX_VERIFY() {
        return (int)128L;
    }
    public static int CT_F_SCT_NEW() {
        return (int)100L;
    }
    public static int CT_F_SCT_NEW_FROM_BASE64() {
        return (int)127L;
    }
    public static int CT_F_SCT_SET0_LOG_ID() {
        return (int)101L;
    }
    public static int CT_F_SCT_SET1_EXTENSIONS() {
        return (int)114L;
    }
    public static int CT_F_SCT_SET1_LOG_ID() {
        return (int)115L;
    }
    public static int CT_F_SCT_SET1_SIGNATURE() {
        return (int)116L;
    }
    public static int CT_F_SCT_SET_LOG_ENTRY_TYPE() {
        return (int)102L;
    }
    public static int CT_F_SCT_SET_SIGNATURE_NID() {
        return (int)103L;
    }
    public static int CT_F_SCT_SET_VERSION() {
        return (int)104L;
    }
    public static int CT_R_BASE64_DECODE_ERROR() {
        return (int)108L;
    }
    public static int CT_R_INVALID_LOG_ID_LENGTH() {
        return (int)100L;
    }
    public static int CT_R_LOG_CONF_INVALID() {
        return (int)109L;
    }
    public static int CT_R_LOG_CONF_INVALID_KEY() {
        return (int)110L;
    }
    public static int CT_R_LOG_CONF_MISSING_DESCRIPTION() {
        return (int)111L;
    }
    public static int CT_R_LOG_CONF_MISSING_KEY() {
        return (int)112L;
    }
    public static int CT_R_LOG_KEY_INVALID() {
        return (int)113L;
    }
    public static int CT_R_SCT_FUTURE_TIMESTAMP() {
        return (int)116L;
    }
    public static int CT_R_SCT_INVALID() {
        return (int)104L;
    }
    public static int CT_R_SCT_INVALID_SIGNATURE() {
        return (int)107L;
    }
    public static int CT_R_SCT_LIST_INVALID() {
        return (int)105L;
    }
    public static int CT_R_SCT_LOG_ID_MISMATCH() {
        return (int)114L;
    }
    public static int CT_R_SCT_NOT_SET() {
        return (int)106L;
    }
    public static int CT_R_SCT_UNSUPPORTED_VERSION() {
        return (int)115L;
    }
    public static int CT_R_UNRECOGNIZED_SIGNATURE_NID() {
        return (int)101L;
    }
    public static int CT_R_UNSUPPORTED_ENTRY_TYPE() {
        return (int)102L;
    }
    public static int CT_R_UNSUPPORTED_VERSION() {
        return (int)103L;
    }
    public static int SCT_MIN_RSA_BITS() {
        return (int)2048L;
    }
    public static int SSL_F_ADD_CLIENT_KEY_SHARE_EXT() {
        return (int)438L;
    }
    public static int SSL_F_ADD_KEY_SHARE() {
        return (int)512L;
    }
    public static int SSL_F_BYTES_TO_CIPHER_LIST() {
        return (int)519L;
    }
    public static int SSL_F_CHECK_SUITEB_CIPHER_LIST() {
        return (int)331L;
    }
    public static int SSL_F_CIPHERSUITE_CB() {
        return (int)622L;
    }
    public static int SSL_F_CONSTRUCT_CA_NAMES() {
        return (int)552L;
    }
    public static int SSL_F_CONSTRUCT_KEY_EXCHANGE_TBS() {
        return (int)553L;
    }
    public static int SSL_F_CONSTRUCT_STATEFUL_TICKET() {
        return (int)636L;
    }
    public static int SSL_F_CONSTRUCT_STATELESS_TICKET() {
        return (int)637L;
    }
    public static int SSL_F_CREATE_SYNTHETIC_MESSAGE_HASH() {
        return (int)539L;
    }
    public static int SSL_F_CREATE_TICKET_PREQUEL() {
        return (int)638L;
    }
    public static int SSL_F_CT_MOVE_SCTS() {
        return (int)345L;
    }
    public static int SSL_F_CT_STRICT() {
        return (int)349L;
    }
    public static int SSL_F_CUSTOM_EXT_ADD() {
        return (int)554L;
    }
    public static int SSL_F_CUSTOM_EXT_PARSE() {
        return (int)555L;
    }
    public static int SSL_F_D2I_SSL_SESSION() {
        return (int)103L;
    }
    public static int SSL_F_DANE_CTX_ENABLE() {
        return (int)347L;
    }
    public static int SSL_F_DANE_MTYPE_SET() {
        return (int)393L;
    }
    public static int SSL_F_DANE_TLSA_ADD() {
        return (int)394L;
    }
    public static int SSL_F_DERIVE_SECRET_KEY_AND_IV() {
        return (int)514L;
    }
    public static int SSL_F_DO_DTLS1_WRITE() {
        return (int)245L;
    }
    public static int SSL_F_DO_SSL3_WRITE() {
        return (int)104L;
    }
    public static int SSL_F_DTLS1_BUFFER_RECORD() {
        return (int)247L;
    }
    public static int SSL_F_DTLS1_CHECK_TIMEOUT_NUM() {
        return (int)318L;
    }
    public static int SSL_F_DTLS1_HEARTBEAT() {
        return (int)305L;
    }
    public static int SSL_F_DTLS1_HM_FRAGMENT_NEW() {
        return (int)623L;
    }
    public static int SSL_F_DTLS1_PREPROCESS_FRAGMENT() {
        return (int)288L;
    }
    public static int SSL_F_DTLS1_PROCESS_BUFFERED_RECORDS() {
        return (int)424L;
    }
    public static int SSL_F_DTLS1_PROCESS_RECORD() {
        return (int)257L;
    }
    public static int SSL_F_DTLS1_READ_BYTES() {
        return (int)258L;
    }
    public static int SSL_F_DTLS1_READ_FAILED() {
        return (int)339L;
    }
    public static int SSL_F_DTLS1_RETRANSMIT_MESSAGE() {
        return (int)390L;
    }
    public static int SSL_F_DTLS1_WRITE_APP_DATA_BYTES() {
        return (int)268L;
    }
    public static int SSL_F_DTLS1_WRITE_BYTES() {
        return (int)545L;
    }
    public static int SSL_F_DTLSV1_LISTEN() {
        return (int)350L;
    }
    public static int SSL_F_DTLS_CONSTRUCT_CHANGE_CIPHER_SPEC() {
        return (int)371L;
    }
    public static int SSL_F_DTLS_CONSTRUCT_HELLO_VERIFY_REQUEST() {
        return (int)385L;
    }
    public static int SSL_F_DTLS_GET_REASSEMBLED_MESSAGE() {
        return (int)370L;
    }
    public static int SSL_F_DTLS_PROCESS_HELLO_VERIFY() {
        return (int)386L;
    }
    public static int SSL_F_DTLS_RECORD_LAYER_NEW() {
        return (int)635L;
    }
    public static int SSL_F_DTLS_WAIT_FOR_DRY() {
        return (int)592L;
    }
    public static int SSL_F_EARLY_DATA_COUNT_OK() {
        return (int)532L;
    }
    public static int SSL_F_FINAL_EARLY_DATA() {
        return (int)556L;
    }
    public static int SSL_F_FINAL_EC_PT_FORMATS() {
        return (int)485L;
    }
    public static int SSL_F_FINAL_EMS() {
        return (int)486L;
    }
    public static int SSL_F_FINAL_KEY_SHARE() {
        return (int)503L;
    }
    public static int SSL_F_FINAL_MAXFRAGMENTLEN() {
        return (int)557L;
    }
    public static int SSL_F_FINAL_PSK() {
        return (int)639L;
    }
    public static int SSL_F_FINAL_RENEGOTIATE() {
        return (int)483L;
    }
    public static int SSL_F_FINAL_SERVER_NAME() {
        return (int)558L;
    }
    public static int SSL_F_FINAL_SIG_ALGS() {
        return (int)497L;
    }
    public static int SSL_F_GET_CERT_VERIFY_TBS_DATA() {
        return (int)588L;
    }
    public static int SSL_F_NSS_KEYLOG_INT() {
        return (int)500L;
    }
    public static int SSL_F_OPENSSL_INIT_SSL() {
        return (int)342L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT13_READ_TRANSITION() {
        return (int)436L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT13_WRITE_TRANSITION() {
        return (int)598L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT_CONSTRUCT_MESSAGE() {
        return (int)430L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT_POST_PROCESS_MESSAGE() {
        return (int)593L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT_PROCESS_MESSAGE() {
        return (int)594L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT_READ_TRANSITION() {
        return (int)417L;
    }
    public static int SSL_F_OSSL_STATEM_CLIENT_WRITE_TRANSITION() {
        return (int)599L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER13_READ_TRANSITION() {
        return (int)437L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER13_WRITE_TRANSITION() {
        return (int)600L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_CONSTRUCT_MESSAGE() {
        return (int)431L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_POST_PROCESS_MESSAGE() {
        return (int)601L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_POST_WORK() {
        return (int)602L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_PRE_WORK() {
        return (int)640L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_PROCESS_MESSAGE() {
        return (int)603L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_READ_TRANSITION() {
        return (int)418L;
    }
    public static int SSL_F_OSSL_STATEM_SERVER_WRITE_TRANSITION() {
        return (int)604L;
    }
    public static int SSL_F_PARSE_CA_NAMES() {
        return (int)541L;
    }
    public static int SSL_F_PITEM_NEW() {
        return (int)624L;
    }
    public static int SSL_F_PQUEUE_NEW() {
        return (int)625L;
    }
    public static int SSL_F_PROCESS_KEY_SHARE_EXT() {
        return (int)439L;
    }
    public static int SSL_F_READ_STATE_MACHINE() {
        return (int)352L;
    }
    public static int SSL_F_SET_CLIENT_CIPHERSUITE() {
        return (int)540L;
    }
    public static int SSL_F_SRP_GENERATE_CLIENT_MASTER_SECRET() {
        return (int)595L;
    }
    public static int SSL_F_SRP_GENERATE_SERVER_MASTER_SECRET() {
        return (int)589L;
    }
    public static int SSL_F_SRP_VERIFY_SERVER_PARAM() {
        return (int)596L;
    }
    public static int SSL_F_SSL3_CHANGE_CIPHER_STATE() {
        return (int)129L;
    }
    public static int SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM() {
        return (int)130L;
    }
    public static int SSL_F_SSL3_CTRL() {
        return (int)213L;
    }
    public static int SSL_F_SSL3_CTX_CTRL() {
        return (int)133L;
    }
    public static int SSL_F_SSL3_DIGEST_CACHED_RECORDS() {
        return (int)293L;
    }
    public static int SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC() {
        return (int)292L;
    }
    public static int SSL_F_SSL3_ENC() {
        return (int)608L;
    }
    public static int SSL_F_SSL3_FINAL_FINISH_MAC() {
        return (int)285L;
    }
    public static int SSL_F_SSL3_FINISH_MAC() {
        return (int)587L;
    }
    public static int SSL_F_SSL3_GENERATE_KEY_BLOCK() {
        return (int)238L;
    }
    public static int SSL_F_SSL3_GENERATE_MASTER_SECRET() {
        return (int)388L;
    }
    public static int SSL_F_SSL3_GET_RECORD() {
        return (int)143L;
    }
    public static int SSL_F_SSL3_INIT_FINISHED_MAC() {
        return (int)397L;
    }
    public static int SSL_F_SSL3_OUTPUT_CERT_CHAIN() {
        return (int)147L;
    }
    public static int SSL_F_SSL3_READ_BYTES() {
        return (int)148L;
    }
    public static int SSL_F_SSL3_READ_N() {
        return (int)149L;
    }
    public static int SSL_F_SSL3_SETUP_KEY_BLOCK() {
        return (int)157L;
    }
    public static int SSL_F_SSL3_SETUP_READ_BUFFER() {
        return (int)156L;
    }
    public static int SSL_F_SSL3_SETUP_WRITE_BUFFER() {
        return (int)291L;
    }
    public static int SSL_F_SSL3_WRITE_BYTES() {
        return (int)158L;
    }
    public static int SSL_F_SSL3_WRITE_PENDING() {
        return (int)159L;
    }
    public static int SSL_F_SSL_ADD_CERT_CHAIN() {
        return (int)316L;
    }
    public static int SSL_F_SSL_ADD_CERT_TO_BUF() {
        return (int)319L;
    }
    public static int SSL_F_SSL_ADD_CERT_TO_WPACKET() {
        return (int)493L;
    }
    public static int SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT() {
        return (int)298L;
    }
    public static int SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT() {
        return (int)277L;
    }
    public static int SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT() {
        return (int)307L;
    }
    public static int SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK() {
        return (int)215L;
    }
    public static int SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK() {
        return (int)216L;
    }
    public static int SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT() {
        return (int)299L;
    }
    public static int SSL_F_SSL_ADD_SERVERHELLO_TLSEXT() {
        return (int)278L;
    }
    public static int SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT() {
        return (int)308L;
    }
    public static int SSL_F_SSL_BAD_METHOD() {
        return (int)160L;
    }
    public static int SSL_F_SSL_BUILD_CERT_CHAIN() {
        return (int)332L;
    }
    public static int SSL_F_SSL_BYTES_TO_CIPHER_LIST() {
        return (int)161L;
    }
    public static int SSL_F_SSL_CACHE_CIPHERLIST() {
        return (int)520L;
    }
    public static int SSL_F_SSL_CERT_ADD0_CHAIN_CERT() {
        return (int)346L;
    }
    public static int SSL_F_SSL_CERT_DUP() {
        return (int)221L;
    }
    public static int SSL_F_SSL_CERT_NEW() {
        return (int)162L;
    }
    public static int SSL_F_SSL_CERT_SET0_CHAIN() {
        return (int)340L;
    }
    public static int SSL_F_SSL_CHECK_PRIVATE_KEY() {
        return (int)163L;
    }
    public static int SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT() {
        return (int)280L;
    }
    public static int SSL_F_SSL_CHECK_SRP_EXT_CLIENTHELLO() {
        return (int)606L;
    }
    public static int SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG() {
        return (int)279L;
    }
    public static int SSL_F_SSL_CHOOSE_CLIENT_VERSION() {
        return (int)607L;
    }
    public static int SSL_F_SSL_CIPHER_DESCRIPTION() {
        return (int)626L;
    }
    public static int SSL_F_SSL_CIPHER_LIST_TO_BYTES() {
        return (int)425L;
    }
    public static int SSL_F_SSL_CIPHER_PROCESS_RULESTR() {
        return (int)230L;
    }
    public static int SSL_F_SSL_CIPHER_STRENGTH_SORT() {
        return (int)231L;
    }
    public static int SSL_F_SSL_CLEAR() {
        return (int)164L;
    }
    public static int SSL_F_SSL_CLIENT_HELLO_GET1_EXTENSIONS_PRESENT() {
        return (int)627L;
    }
    public static int SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD() {
        return (int)165L;
    }
    public static int SSL_F_SSL_CONF_CMD() {
        return (int)334L;
    }
    public static int SSL_F_SSL_CREATE_CIPHER_LIST() {
        return (int)166L;
    }
    public static int SSL_F_SSL_CTRL() {
        return (int)232L;
    }
    public static int SSL_F_SSL_CTX_CHECK_PRIVATE_KEY() {
        return (int)168L;
    }
    public static int SSL_F_SSL_CTX_ENABLE_CT() {
        return (int)398L;
    }
    public static int SSL_F_SSL_CTX_MAKE_PROFILES() {
        return (int)309L;
    }
    public static int SSL_F_SSL_CTX_NEW() {
        return (int)169L;
    }
    public static int SSL_F_SSL_CTX_SET_ALPN_PROTOS() {
        return (int)343L;
    }
    public static int SSL_F_SSL_CTX_SET_CIPHER_LIST() {
        return (int)269L;
    }
    public static int SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE() {
        return (int)290L;
    }
    public static int SSL_F_SSL_CTX_SET_CT_VALIDATION_CALLBACK() {
        return (int)396L;
    }
    public static int SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT() {
        return (int)219L;
    }
    public static int SSL_F_SSL_CTX_SET_SSL_VERSION() {
        return (int)170L;
    }
    public static int SSL_F_SSL_CTX_SET_TLSEXT_MAX_FRAGMENT_LENGTH() {
        return (int)551L;
    }
    public static int SSL_F_SSL_CTX_USE_CERTIFICATE() {
        return (int)171L;
    }
    public static int SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1() {
        return (int)172L;
    }
    public static int SSL_F_SSL_CTX_USE_CERTIFICATE_FILE() {
        return (int)173L;
    }
    public static int SSL_F_SSL_CTX_USE_PRIVATEKEY() {
        return (int)174L;
    }
    public static int SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1() {
        return (int)175L;
    }
    public static int SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE() {
        return (int)176L;
    }
    public static int SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT() {
        return (int)272L;
    }
    public static int SSL_F_SSL_CTX_USE_RSAPRIVATEKEY() {
        return (int)177L;
    }
    public static int SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1() {
        return (int)178L;
    }
    public static int SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE() {
        return (int)179L;
    }
    public static int SSL_F_SSL_CTX_USE_SERVERINFO() {
        return (int)336L;
    }
    public static int SSL_F_SSL_CTX_USE_SERVERINFO_EX() {
        return (int)543L;
    }
    public static int SSL_F_SSL_CTX_USE_SERVERINFO_FILE() {
        return (int)337L;
    }
    public static int SSL_F_SSL_DANE_DUP() {
        return (int)403L;
    }
    public static int SSL_F_SSL_DANE_ENABLE() {
        return (int)395L;
    }
    public static int SSL_F_SSL_DERIVE() {
        return (int)590L;
    }
    public static int SSL_F_SSL_DO_CONFIG() {
        return (int)391L;
    }
    public static int SSL_F_SSL_DO_HANDSHAKE() {
        return (int)180L;
    }
    public static int SSL_F_SSL_DUP_CA_LIST() {
        return (int)408L;
    }
    public static int SSL_F_SSL_ENABLE_CT() {
        return (int)402L;
    }
    public static int SSL_F_SSL_GENERATE_PKEY_GROUP() {
        return (int)559L;
    }
    public static int SSL_F_SSL_GENERATE_SESSION_ID() {
        return (int)547L;
    }
    public static int SSL_F_SSL_GET_NEW_SESSION() {
        return (int)181L;
    }
    public static int SSL_F_SSL_GET_PREV_SESSION() {
        return (int)217L;
    }
    public static int SSL_F_SSL_GET_SERVER_CERT_INDEX() {
        return (int)322L;
    }
    public static int SSL_F_SSL_GET_SIGN_PKEY() {
        return (int)183L;
    }
    public static int SSL_F_SSL_HANDSHAKE_HASH() {
        return (int)560L;
    }
    public static int SSL_F_SSL_INIT_WBIO_BUFFER() {
        return (int)184L;
    }
    public static int SSL_F_SSL_KEY_UPDATE() {
        return (int)515L;
    }
    public static int SSL_F_SSL_LOAD_CLIENT_CA_FILE() {
        return (int)185L;
    }
    public static int SSL_F_SSL_LOG_MASTER_SECRET() {
        return (int)498L;
    }
    public static int SSL_F_SSL_LOG_RSA_CLIENT_KEY_EXCHANGE() {
        return (int)499L;
    }
    public static int SSL_F_SSL_MODULE_INIT() {
        return (int)392L;
    }
    public static int SSL_F_SSL_NEW() {
        return (int)186L;
    }
    public static int SSL_F_SSL_NEXT_PROTO_VALIDATE() {
        return (int)565L;
    }
    public static int SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT() {
        return (int)300L;
    }
    public static int SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT() {
        return (int)302L;
    }
    public static int SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT() {
        return (int)310L;
    }
    public static int SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT() {
        return (int)301L;
    }
    public static int SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT() {
        return (int)303L;
    }
    public static int SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT() {
        return (int)311L;
    }
    public static int SSL_F_SSL_PEEK() {
        return (int)270L;
    }
    public static int SSL_F_SSL_PEEK_EX() {
        return (int)432L;
    }
    public static int SSL_F_SSL_PEEK_INTERNAL() {
        return (int)522L;
    }
    public static int SSL_F_SSL_READ() {
        return (int)223L;
    }
    public static int SSL_F_SSL_READ_EARLY_DATA() {
        return (int)529L;
    }
    public static int SSL_F_SSL_READ_EX() {
        return (int)434L;
    }
    public static int SSL_F_SSL_READ_INTERNAL() {
        return (int)523L;
    }
    public static int SSL_F_SSL_RENEGOTIATE() {
        return (int)516L;
    }
    public static int SSL_F_SSL_RENEGOTIATE_ABBREVIATED() {
        return (int)546L;
    }
    public static int SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT() {
        return (int)320L;
    }
    public static int SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT() {
        return (int)321L;
    }
    public static int SSL_F_SSL_SESSION_DUP() {
        return (int)348L;
    }
    public static int SSL_F_SSL_SESSION_NEW() {
        return (int)189L;
    }
    public static int SSL_F_SSL_SESSION_PRINT_FP() {
        return (int)190L;
    }
    public static int SSL_F_SSL_SESSION_SET1_ID() {
        return (int)423L;
    }
    public static int SSL_F_SSL_SESSION_SET1_ID_CONTEXT() {
        return (int)312L;
    }
    public static int SSL_F_SSL_SET_ALPN_PROTOS() {
        return (int)344L;
    }
    public static int SSL_F_SSL_SET_CERT() {
        return (int)191L;
    }
    public static int SSL_F_SSL_SET_CERT_AND_KEY() {
        return (int)621L;
    }
    public static int SSL_F_SSL_SET_CIPHER_LIST() {
        return (int)271L;
    }
    public static int SSL_F_SSL_SET_CT_VALIDATION_CALLBACK() {
        return (int)399L;
    }
    public static int SSL_F_SSL_SET_FD() {
        return (int)192L;
    }
    public static int SSL_F_SSL_SET_PKEY() {
        return (int)193L;
    }
    public static int SSL_F_SSL_SET_RFD() {
        return (int)194L;
    }
    public static int SSL_F_SSL_SET_SESSION() {
        return (int)195L;
    }
    public static int SSL_F_SSL_SET_SESSION_ID_CONTEXT() {
        return (int)218L;
    }
    public static int SSL_F_SSL_SET_SESSION_TICKET_EXT() {
        return (int)294L;
    }
    public static int SSL_F_SSL_SET_TLSEXT_MAX_FRAGMENT_LENGTH() {
        return (int)550L;
    }
    public static int SSL_F_SSL_SET_WFD() {
        return (int)196L;
    }
    public static int SSL_F_SSL_SHUTDOWN() {
        return (int)224L;
    }
    public static int SSL_F_SSL_SRP_CTX_INIT() {
        return (int)313L;
    }
    public static int SSL_F_SSL_START_ASYNC_JOB() {
        return (int)389L;
    }
    public static int SSL_F_SSL_UNDEFINED_FUNCTION() {
        return (int)197L;
    }
    public static int SSL_F_SSL_UNDEFINED_VOID_FUNCTION() {
        return (int)244L;
    }
    public static int SSL_F_SSL_USE_CERTIFICATE() {
        return (int)198L;
    }
    public static int SSL_F_SSL_USE_CERTIFICATE_ASN1() {
        return (int)199L;
    }
    public static int SSL_F_SSL_USE_CERTIFICATE_FILE() {
        return (int)200L;
    }
    public static int SSL_F_SSL_USE_PRIVATEKEY() {
        return (int)201L;
    }
    public static int SSL_F_SSL_USE_PRIVATEKEY_ASN1() {
        return (int)202L;
    }
    public static int SSL_F_SSL_USE_PRIVATEKEY_FILE() {
        return (int)203L;
    }
    public static int SSL_F_SSL_USE_PSK_IDENTITY_HINT() {
        return (int)273L;
    }
    public static int SSL_F_SSL_USE_RSAPRIVATEKEY() {
        return (int)204L;
    }
    public static int SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1() {
        return (int)205L;
    }
    public static int SSL_F_SSL_USE_RSAPRIVATEKEY_FILE() {
        return (int)206L;
    }
    public static int SSL_F_SSL_VALIDATE_CT() {
        return (int)400L;
    }
    public static int SSL_F_SSL_VERIFY_CERT_CHAIN() {
        return (int)207L;
    }
    public static int SSL_F_SSL_VERIFY_CLIENT_POST_HANDSHAKE() {
        return (int)616L;
    }
    public static int SSL_F_SSL_WRITE() {
        return (int)208L;
    }
    public static int SSL_F_SSL_WRITE_EARLY_DATA() {
        return (int)526L;
    }
    public static int SSL_F_SSL_WRITE_EARLY_FINISH() {
        return (int)527L;
    }
    public static int SSL_F_SSL_WRITE_EX() {
        return (int)433L;
    }
    public static int SSL_F_SSL_WRITE_INTERNAL() {
        return (int)524L;
    }
    public static int SSL_F_STATE_MACHINE() {
        return (int)353L;
    }
    public static int SSL_F_TLS12_CHECK_PEER_SIGALG() {
        return (int)333L;
    }
    public static int SSL_F_TLS12_COPY_SIGALGS() {
        return (int)533L;
    }
    public static int SSL_F_TLS13_CHANGE_CIPHER_STATE() {
        return (int)440L;
    }
    public static int SSL_F_TLS13_ENC() {
        return (int)609L;
    }
    public static int SSL_F_TLS13_FINAL_FINISH_MAC() {
        return (int)605L;
    }
    public static int SSL_F_TLS13_GENERATE_SECRET() {
        return (int)591L;
    }
    public static int SSL_F_TLS13_HKDF_EXPAND() {
        return (int)561L;
    }
    public static int SSL_F_TLS13_RESTORE_HANDSHAKE_DIGEST_FOR_PHA() {
        return (int)617L;
    }
    public static int SSL_F_TLS13_SAVE_HANDSHAKE_DIGEST_FOR_PHA() {
        return (int)618L;
    }
    public static int SSL_F_TLS13_SETUP_KEY_BLOCK() {
        return (int)441L;
    }
    public static int SSL_F_TLS1_CHANGE_CIPHER_STATE() {
        return (int)209L;
    }
    public static int SSL_F_TLS1_CHECK_DUPLICATE_EXTENSIONS() {
        return (int)341L;
    }
    public static int SSL_F_TLS1_ENC() {
        return (int)401L;
    }
    public static int SSL_F_TLS1_EXPORT_KEYING_MATERIAL() {
        return (int)314L;
    }
    public static int SSL_F_TLS1_GET_CURVELIST() {
        return (int)338L;
    }
    public static int SSL_F_TLS1_PRF() {
        return (int)284L;
    }
    public static int SSL_F_TLS1_SAVE_U16() {
        return (int)628L;
    }
    public static int SSL_F_TLS1_SETUP_KEY_BLOCK() {
        return (int)211L;
    }
    public static int SSL_F_TLS1_SET_GROUPS() {
        return (int)629L;
    }
    public static int SSL_F_TLS1_SET_RAW_SIGALGS() {
        return (int)630L;
    }
    public static int SSL_F_TLS1_SET_SERVER_SIGALGS() {
        return (int)335L;
    }
    public static int SSL_F_TLS1_SET_SHARED_SIGALGS() {
        return (int)631L;
    }
    public static int SSL_F_TLS1_SET_SIGALGS() {
        return (int)632L;
    }
    public static int SSL_F_TLS_CHOOSE_SIGALG() {
        return (int)513L;
    }
    public static int SSL_F_TLS_CLIENT_KEY_EXCHANGE_POST_WORK() {
        return (int)354L;
    }
    public static int SSL_F_TLS_COLLECT_EXTENSIONS() {
        return (int)435L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CERTIFICATE_AUTHORITIES() {
        return (int)542L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CERTIFICATE_REQUEST() {
        return (int)372L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CERT_STATUS() {
        return (int)429L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CERT_STATUS_BODY() {
        return (int)494L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CERT_VERIFY() {
        return (int)496L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CHANGE_CIPHER_SPEC() {
        return (int)427L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_DHE() {
        return (int)404L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_ECDHE() {
        return (int)405L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_GOST() {
        return (int)406L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_PSK_PREAMBLE() {
        return (int)407L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_RSA() {
        return (int)409L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CKE_SRP() {
        return (int)410L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CLIENT_CERTIFICATE() {
        return (int)484L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CLIENT_HELLO() {
        return (int)487L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CLIENT_KEY_EXCHANGE() {
        return (int)488L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY() {
        return (int)489L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_ALPN() {
        return (int)466L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_CERTIFICATE() {
        return (int)355L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_COOKIE() {
        return (int)535L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_EARLY_DATA() {
        return (int)530L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_EC_PT_FORMATS() {
        return (int)467L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_EMS() {
        return (int)468L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_ETM() {
        return (int)469L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_HELLO() {
        return (int)356L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_KEY_EXCHANGE() {
        return (int)357L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_KEY_SHARE() {
        return (int)470L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_MAXFRAGMENTLEN() {
        return (int)549L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_NPN() {
        return (int)471L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_PADDING() {
        return (int)472L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_POST_HANDSHAKE_AUTH() {
        return (int)619L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_PSK() {
        return (int)501L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_PSK_KEX_MODES() {
        return (int)509L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_RENEGOTIATE() {
        return (int)473L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SCT() {
        return (int)474L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SERVER_NAME() {
        return (int)475L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SESSION_TICKET() {
        return (int)476L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SIG_ALGS() {
        return (int)477L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SRP() {
        return (int)478L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_STATUS_REQUEST() {
        return (int)479L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_GROUPS() {
        return (int)480L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_VERSIONS() {
        return (int)481L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_USE_SRTP() {
        return (int)482L;
    }
    public static int SSL_F_TLS_CONSTRUCT_CTOS_VERIFY() {
        return (int)358L;
    }
    public static int SSL_F_TLS_CONSTRUCT_ENCRYPTED_EXTENSIONS() {
        return (int)443L;
    }
    public static int SSL_F_TLS_CONSTRUCT_END_OF_EARLY_DATA() {
        return (int)536L;
    }
    public static int SSL_F_TLS_CONSTRUCT_EXTENSIONS() {
        return (int)447L;
    }
    public static int SSL_F_TLS_CONSTRUCT_FINISHED() {
        return (int)359L;
    }
    public static int SSL_F_TLS_CONSTRUCT_HELLO_REQUEST() {
        return (int)373L;
    }
    public static int SSL_F_TLS_CONSTRUCT_HELLO_RETRY_REQUEST() {
        return (int)510L;
    }
    public static int SSL_F_TLS_CONSTRUCT_KEY_UPDATE() {
        return (int)517L;
    }
    public static int SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET() {
        return (int)428L;
    }
    public static int SSL_F_TLS_CONSTRUCT_NEXT_PROTO() {
        return (int)426L;
    }
    public static int SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE() {
        return (int)490L;
    }
    public static int SSL_F_TLS_CONSTRUCT_SERVER_HELLO() {
        return (int)491L;
    }
    public static int SSL_F_TLS_CONSTRUCT_SERVER_KEY_EXCHANGE() {
        return (int)492L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_ALPN() {
        return (int)451L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_CERTIFICATE() {
        return (int)374L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_COOKIE() {
        return (int)613L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_CRYPTOPRO_BUG() {
        return (int)452L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_DONE() {
        return (int)375L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA() {
        return (int)531L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA_INFO() {
        return (int)525L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_EC_PT_FORMATS() {
        return (int)453L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_EMS() {
        return (int)454L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_ETM() {
        return (int)455L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_HELLO() {
        return (int)376L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_KEY_EXCHANGE() {
        return (int)377L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_KEY_SHARE() {
        return (int)456L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_MAXFRAGMENTLEN() {
        return (int)548L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_NEXT_PROTO_NEG() {
        return (int)457L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_PSK() {
        return (int)504L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_RENEGOTIATE() {
        return (int)458L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_SERVER_NAME() {
        return (int)459L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_SESSION_TICKET() {
        return (int)460L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_STATUS_REQUEST() {
        return (int)461L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_GROUPS() {
        return (int)544L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_VERSIONS() {
        return (int)611L;
    }
    public static int SSL_F_TLS_CONSTRUCT_STOC_USE_SRTP() {
        return (int)462L;
    }
    public static int SSL_F_TLS_EARLY_POST_PROCESS_CLIENT_HELLO() {
        return (int)521L;
    }
    public static int SSL_F_TLS_FINISH_HANDSHAKE() {
        return (int)597L;
    }
    public static int SSL_F_TLS_GET_MESSAGE_BODY() {
        return (int)351L;
    }
    public static int SSL_F_TLS_GET_MESSAGE_HEADER() {
        return (int)387L;
    }
    public static int SSL_F_TLS_HANDLE_ALPN() {
        return (int)562L;
    }
    public static int SSL_F_TLS_HANDLE_STATUS_REQUEST() {
        return (int)563L;
    }
    public static int SSL_F_TLS_PARSE_CERTIFICATE_AUTHORITIES() {
        return (int)566L;
    }
    public static int SSL_F_TLS_PARSE_CLIENTHELLO_TLSEXT() {
        return (int)449L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_ALPN() {
        return (int)567L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_COOKIE() {
        return (int)614L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_EARLY_DATA() {
        return (int)568L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_EC_PT_FORMATS() {
        return (int)569L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_EMS() {
        return (int)570L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_KEY_SHARE() {
        return (int)463L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_MAXFRAGMENTLEN() {
        return (int)571L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_POST_HANDSHAKE_AUTH() {
        return (int)620L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_PSK() {
        return (int)505L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_PSK_KEX_MODES() {
        return (int)572L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_RENEGOTIATE() {
        return (int)464L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SERVER_NAME() {
        return (int)573L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SESSION_TICKET() {
        return (int)574L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SIG_ALGS() {
        return (int)575L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SIG_ALGS_CERT() {
        return (int)615L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SRP() {
        return (int)576L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_STATUS_REQUEST() {
        return (int)577L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_SUPPORTED_GROUPS() {
        return (int)578L;
    }
    public static int SSL_F_TLS_PARSE_CTOS_USE_SRTP() {
        return (int)465L;
    }
    public static int SSL_F_TLS_PARSE_STOC_ALPN() {
        return (int)579L;
    }
    public static int SSL_F_TLS_PARSE_STOC_COOKIE() {
        return (int)534L;
    }
    public static int SSL_F_TLS_PARSE_STOC_EARLY_DATA() {
        return (int)538L;
    }
    public static int SSL_F_TLS_PARSE_STOC_EARLY_DATA_INFO() {
        return (int)528L;
    }
    public static int SSL_F_TLS_PARSE_STOC_EC_PT_FORMATS() {
        return (int)580L;
    }
    public static int SSL_F_TLS_PARSE_STOC_KEY_SHARE() {
        return (int)445L;
    }
    public static int SSL_F_TLS_PARSE_STOC_MAXFRAGMENTLEN() {
        return (int)581L;
    }
    public static int SSL_F_TLS_PARSE_STOC_NPN() {
        return (int)582L;
    }
    public static int SSL_F_TLS_PARSE_STOC_PSK() {
        return (int)502L;
    }
    public static int SSL_F_TLS_PARSE_STOC_RENEGOTIATE() {
        return (int)448L;
    }
    public static int SSL_F_TLS_PARSE_STOC_SCT() {
        return (int)564L;
    }
    public static int SSL_F_TLS_PARSE_STOC_SERVER_NAME() {
        return (int)583L;
    }
    public static int SSL_F_TLS_PARSE_STOC_SESSION_TICKET() {
        return (int)584L;
    }
    public static int SSL_F_TLS_PARSE_STOC_STATUS_REQUEST() {
        return (int)585L;
    }
    public static int SSL_F_TLS_PARSE_STOC_SUPPORTED_VERSIONS() {
        return (int)612L;
    }
    public static int SSL_F_TLS_PARSE_STOC_USE_SRTP() {
        return (int)446L;
    }
    public static int SSL_F_TLS_POST_PROCESS_CLIENT_HELLO() {
        return (int)378L;
    }
    public static int SSL_F_TLS_POST_PROCESS_CLIENT_KEY_EXCHANGE() {
        return (int)384L;
    }
    public static int SSL_F_TLS_PREPARE_CLIENT_CERTIFICATE() {
        return (int)360L;
    }
    public static int SSL_F_TLS_PROCESS_AS_HELLO_RETRY_REQUEST() {
        return (int)610L;
    }
    public static int SSL_F_TLS_PROCESS_CERTIFICATE_REQUEST() {
        return (int)361L;
    }
    public static int SSL_F_TLS_PROCESS_CERT_STATUS() {
        return (int)362L;
    }
    public static int SSL_F_TLS_PROCESS_CERT_STATUS_BODY() {
        return (int)495L;
    }
    public static int SSL_F_TLS_PROCESS_CERT_VERIFY() {
        return (int)379L;
    }
    public static int SSL_F_TLS_PROCESS_CHANGE_CIPHER_SPEC() {
        return (int)363L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_DHE() {
        return (int)411L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_ECDHE() {
        return (int)412L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_GOST() {
        return (int)413L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_PSK_PREAMBLE() {
        return (int)414L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_RSA() {
        return (int)415L;
    }
    public static int SSL_F_TLS_PROCESS_CKE_SRP() {
        return (int)416L;
    }
    public static int SSL_F_TLS_PROCESS_CLIENT_CERTIFICATE() {
        return (int)380L;
    }
    public static int SSL_F_TLS_PROCESS_CLIENT_HELLO() {
        return (int)381L;
    }
    public static int SSL_F_TLS_PROCESS_CLIENT_KEY_EXCHANGE() {
        return (int)382L;
    }
    public static int SSL_F_TLS_PROCESS_ENCRYPTED_EXTENSIONS() {
        return (int)444L;
    }
    public static int SSL_F_TLS_PROCESS_END_OF_EARLY_DATA() {
        return (int)537L;
    }
    public static int SSL_F_TLS_PROCESS_FINISHED() {
        return (int)364L;
    }
    public static int SSL_F_TLS_PROCESS_HELLO_REQ() {
        return (int)507L;
    }
    public static int SSL_F_TLS_PROCESS_HELLO_RETRY_REQUEST() {
        return (int)511L;
    }
    public static int SSL_F_TLS_PROCESS_INITIAL_SERVER_FLIGHT() {
        return (int)442L;
    }
    public static int SSL_F_TLS_PROCESS_KEY_EXCHANGE() {
        return (int)365L;
    }
    public static int SSL_F_TLS_PROCESS_KEY_UPDATE() {
        return (int)518L;
    }
    public static int SSL_F_TLS_PROCESS_NEW_SESSION_TICKET() {
        return (int)366L;
    }
    public static int SSL_F_TLS_PROCESS_NEXT_PROTO() {
        return (int)383L;
    }
    public static int SSL_F_TLS_PROCESS_SERVER_CERTIFICATE() {
        return (int)367L;
    }
    public static int SSL_F_TLS_PROCESS_SERVER_DONE() {
        return (int)368L;
    }
    public static int SSL_F_TLS_PROCESS_SERVER_HELLO() {
        return (int)369L;
    }
    public static int SSL_F_TLS_PROCESS_SKE_DHE() {
        return (int)419L;
    }
    public static int SSL_F_TLS_PROCESS_SKE_ECDHE() {
        return (int)420L;
    }
    public static int SSL_F_TLS_PROCESS_SKE_PSK_PREAMBLE() {
        return (int)421L;
    }
    public static int SSL_F_TLS_PROCESS_SKE_SRP() {
        return (int)422L;
    }
    public static int SSL_F_TLS_PSK_DO_BINDER() {
        return (int)506L;
    }
    public static int SSL_F_TLS_SCAN_CLIENTHELLO_TLSEXT() {
        return (int)450L;
    }
    public static int SSL_F_TLS_SETUP_HANDSHAKE() {
        return (int)508L;
    }
    public static int SSL_F_USE_CERTIFICATE_CHAIN_FILE() {
        return (int)220L;
    }
    public static int SSL_F_WPACKET_INTERN_INIT_LEN() {
        return (int)633L;
    }
    public static int SSL_F_WPACKET_START_SUB_PACKET_LEN__() {
        return (int)634L;
    }
    public static int SSL_F_WRITE_STATE_MACHINE() {
        return (int)586L;
    }
    public static int SSL_R_APPLICATION_DATA_AFTER_CLOSE_NOTIFY() {
        return (int)291L;
    }
    public static int SSL_R_APP_DATA_IN_HANDSHAKE() {
        return (int)100L;
    }
    public static int SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT() {
        return (int)272L;
    }
    public static int SSL_R_AT_LEAST_TLS_1_0_NEEDED_IN_FIPS_MODE() {
        return (int)143L;
    }
    public static int SSL_R_AT_LEAST_TLS_1_2_NEEDED_IN_SUITEB_MODE() {
        return (int)158L;
    }
    public static int SSL_R_BAD_CHANGE_CIPHER_SPEC() {
        return (int)103L;
    }
    public static int SSL_R_BAD_CIPHER() {
        return (int)186L;
    }
    public static int SSL_R_BAD_DATA() {
        return (int)390L;
    }
    public static int SSL_R_BAD_DATA_RETURNED_BY_CALLBACK() {
        return (int)106L;
    }
}


