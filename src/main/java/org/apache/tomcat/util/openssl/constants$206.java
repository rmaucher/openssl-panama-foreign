// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$206 {

    static final FunctionDescriptor i2d_ASN1_TYPE$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_ASN1_TYPE$MH = RuntimeHelper.downcallHandle(
        "i2d_ASN1_TYPE",
        constants$206.i2d_ASN1_TYPE$FUNC, false
    );
    static final FunctionDescriptor ASN1_TYPE_get$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle ASN1_TYPE_get$MH = RuntimeHelper.downcallHandle(
        "ASN1_TYPE_get",
        constants$206.ASN1_TYPE_get$FUNC, false
    );
    static final FunctionDescriptor ASN1_TYPE_set$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle ASN1_TYPE_set$MH = RuntimeHelper.downcallHandle(
        "ASN1_TYPE_set",
        constants$206.ASN1_TYPE_set$FUNC, false
    );
    static final FunctionDescriptor ASN1_TYPE_set1$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle ASN1_TYPE_set1$MH = RuntimeHelper.downcallHandle(
        "ASN1_TYPE_set1",
        constants$206.ASN1_TYPE_set1$FUNC, false
    );
    static final FunctionDescriptor ASN1_TYPE_cmp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_TYPE_cmp$MH = RuntimeHelper.downcallHandle(
        "ASN1_TYPE_cmp",
        constants$206.ASN1_TYPE_cmp$FUNC, false
    );
    static final FunctionDescriptor ASN1_TYPE_pack_sequence$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_TYPE_pack_sequence$MH = RuntimeHelper.downcallHandle(
        "ASN1_TYPE_pack_sequence",
        constants$206.ASN1_TYPE_pack_sequence$FUNC, false
    );
}


