// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$798 {

    static final FunctionDescriptor SSL_get_pending_cipher$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_get_pending_cipher$MH = RuntimeHelper.downcallHandle(
        "SSL_get_pending_cipher",
        constants$798.SSL_get_pending_cipher$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_bits$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_bits$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_bits",
        constants$798.SSL_CIPHER_get_bits$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_version$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_version$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_version",
        constants$798.SSL_CIPHER_get_version$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_get_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_get_name$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_get_name",
        constants$798.SSL_CIPHER_get_name$FUNC, false
    );
    static final FunctionDescriptor SSL_CIPHER_standard_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CIPHER_standard_name$MH = RuntimeHelper.downcallHandle(
        "SSL_CIPHER_standard_name",
        constants$798.SSL_CIPHER_standard_name$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_cipher_name$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle OPENSSL_cipher_name$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_cipher_name",
        constants$798.OPENSSL_cipher_name$FUNC, false
    );
}


