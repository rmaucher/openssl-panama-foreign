// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$22 {

    static final FunctionDescriptor SSL_CONF_CTX_finish$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_CONF_CTX_finish$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_CTX_finish",
        constants$22.SSL_CONF_CTX_finish$FUNC, false
    );
    static final FunctionDescriptor SSL_CONF_CTX_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle SSL_CONF_CTX_free$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_CTX_free",
        constants$22.SSL_CONF_CTX_free$FUNC, false
    );
    static final FunctionDescriptor SSL_CONF_CTX_set_flags$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle SSL_CONF_CTX_set_flags$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_CTX_set_flags",
        constants$22.SSL_CONF_CTX_set_flags$FUNC, false
    );
    static final FunctionDescriptor SSL_CONF_CTX_set_ssl_ctx$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CONF_CTX_set_ssl_ctx$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_CTX_set_ssl_ctx",
        constants$22.SSL_CONF_CTX_set_ssl_ctx$FUNC, false
    );
    static final FunctionDescriptor SSL_CONF_cmd$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CONF_cmd$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_cmd",
        constants$22.SSL_CONF_cmd$FUNC, false
    );
    static final FunctionDescriptor SSL_CONF_cmd_value_type$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CONF_cmd_value_type$MH = RuntimeHelper.downcallHandle(
        "SSL_CONF_cmd_value_type",
        constants$22.SSL_CONF_cmd_value_type$FUNC, false
    );
}


