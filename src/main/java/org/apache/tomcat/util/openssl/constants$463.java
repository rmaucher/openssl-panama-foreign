// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$463 {

    static final FunctionDescriptor DSA_get_method$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle DSA_get_method$MH = RuntimeHelper.downcallHandle(
        "DSA_get_method",
        constants$463.DSA_get_method$FUNC, false
    );
    static final FunctionDescriptor DSA_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle DSA_new$MH = RuntimeHelper.downcallHandle(
        "DSA_new",
        constants$463.DSA_new$FUNC, false
    );
    static final FunctionDescriptor DSA_new_method$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle DSA_new_method$MH = RuntimeHelper.downcallHandle(
        "DSA_new_method",
        constants$463.DSA_new_method$FUNC, false
    );
    static final FunctionDescriptor DSA_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle DSA_free$MH = RuntimeHelper.downcallHandle(
        "DSA_free",
        constants$463.DSA_free$FUNC, false
    );
    static final FunctionDescriptor DSA_up_ref$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle DSA_up_ref$MH = RuntimeHelper.downcallHandle(
        "DSA_up_ref",
        constants$463.DSA_up_ref$FUNC, false
    );
    static final FunctionDescriptor DSA_size$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle DSA_size$MH = RuntimeHelper.downcallHandle(
        "DSA_size",
        constants$463.DSA_size$FUNC, false
    );
}


