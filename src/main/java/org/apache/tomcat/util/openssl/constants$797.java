// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$797 {

    static final FunctionDescriptor SSL_CTX_set_cert_store$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set_cert_store$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set_cert_store",
        constants$797.SSL_CTX_set_cert_store$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_set1_cert_store$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set1_cert_store$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set1_cert_store",
        constants$797.SSL_CTX_set1_cert_store$FUNC, false
    );
    static final FunctionDescriptor SSL_want$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_want$MH = RuntimeHelper.downcallHandle(
        "SSL_want",
        constants$797.SSL_want$FUNC, false
    );
    static final FunctionDescriptor SSL_clear$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_clear$MH = RuntimeHelper.downcallHandle(
        "SSL_clear",
        constants$797.SSL_clear$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_flush_sessions$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle SSL_CTX_flush_sessions$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_flush_sessions",
        constants$797.SSL_CTX_flush_sessions$FUNC, false
    );
    static final FunctionDescriptor SSL_get_current_cipher$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_get_current_cipher$MH = RuntimeHelper.downcallHandle(
        "SSL_get_current_cipher",
        constants$797.SSL_get_current_cipher$FUNC, false
    );
}


