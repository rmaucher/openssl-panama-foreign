// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface lh_ERR_STRING_DATA_new$hfn {

    long apply(jdk.incubator.foreign.MemoryAddress x0);
    static NativeSymbol allocate(lh_ERR_STRING_DATA_new$hfn fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(lh_ERR_STRING_DATA_new$hfn.class, fi, constants$870.lh_ERR_STRING_DATA_new$hfn$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;)J", scope);
    }
    static lh_ERR_STRING_DATA_new$hfn ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("lh_ERR_STRING_DATA_new$hfn::" + Long.toHexString(addr.toRawLongValue()), addr, scope);return (jdk.incubator.foreign.MemoryAddress x0) -> {
            try {
                return (long)constants$870.lh_ERR_STRING_DATA_new$hfn$MH.invokeExact(symbol, x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


