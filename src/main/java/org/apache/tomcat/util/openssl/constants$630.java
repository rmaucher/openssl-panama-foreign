// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$630 {

    static final FunctionDescriptor i2d_X509_fp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_X509_fp$MH = RuntimeHelper.downcallHandle(
        "i2d_X509_fp",
        constants$630.i2d_X509_fp$FUNC, false
    );
    static final FunctionDescriptor d2i_X509_CRL_fp$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle d2i_X509_CRL_fp$MH = RuntimeHelper.downcallHandle(
        "d2i_X509_CRL_fp",
        constants$630.d2i_X509_CRL_fp$FUNC, false
    );
    static final FunctionDescriptor i2d_X509_CRL_fp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_X509_CRL_fp$MH = RuntimeHelper.downcallHandle(
        "i2d_X509_CRL_fp",
        constants$630.i2d_X509_CRL_fp$FUNC, false
    );
    static final FunctionDescriptor d2i_X509_REQ_fp$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle d2i_X509_REQ_fp$MH = RuntimeHelper.downcallHandle(
        "d2i_X509_REQ_fp",
        constants$630.d2i_X509_REQ_fp$FUNC, false
    );
    static final FunctionDescriptor i2d_X509_REQ_fp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_X509_REQ_fp$MH = RuntimeHelper.downcallHandle(
        "i2d_X509_REQ_fp",
        constants$630.i2d_X509_REQ_fp$FUNC, false
    );
    static final FunctionDescriptor d2i_RSAPrivateKey_fp$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle d2i_RSAPrivateKey_fp$MH = RuntimeHelper.downcallHandle(
        "d2i_RSAPrivateKey_fp",
        constants$630.d2i_RSAPrivateKey_fp$FUNC, false
    );
}


