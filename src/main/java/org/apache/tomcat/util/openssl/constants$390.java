// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$390 {

    static final FunctionDescriptor EC_GROUP_get_ecpkparameters$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle EC_GROUP_get_ecpkparameters$MH = RuntimeHelper.downcallHandle(
        "EC_GROUP_get_ecpkparameters",
        constants$390.EC_GROUP_get_ecpkparameters$FUNC, false
    );
    static final FunctionDescriptor EC_get_builtin_curves$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle EC_get_builtin_curves$MH = RuntimeHelper.downcallHandle(
        "EC_get_builtin_curves",
        constants$390.EC_get_builtin_curves$FUNC, false
    );
    static final FunctionDescriptor EC_curve_nid2nist$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EC_curve_nid2nist$MH = RuntimeHelper.downcallHandle(
        "EC_curve_nid2nist",
        constants$390.EC_curve_nid2nist$FUNC, false
    );
    static final FunctionDescriptor EC_curve_nist2nid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle EC_curve_nist2nid$MH = RuntimeHelper.downcallHandle(
        "EC_curve_nist2nid",
        constants$390.EC_curve_nist2nid$FUNC, false
    );
    static final FunctionDescriptor EC_POINT_new$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle EC_POINT_new$MH = RuntimeHelper.downcallHandle(
        "EC_POINT_new",
        constants$390.EC_POINT_new$FUNC, false
    );
    static final FunctionDescriptor EC_POINT_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle EC_POINT_free$MH = RuntimeHelper.downcallHandle(
        "EC_POINT_free",
        constants$390.EC_POINT_free$FUNC, false
    );
}


