// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$225 {

    static final FunctionDescriptor UTF8_getc$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle UTF8_getc$MH = RuntimeHelper.downcallHandle(
        "UTF8_getc",
        constants$225.UTF8_getc$FUNC, false
    );
    static final FunctionDescriptor UTF8_putc$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        JAVA_LONG
    );
    static final MethodHandle UTF8_putc$MH = RuntimeHelper.downcallHandle(
        "UTF8_putc",
        constants$225.UTF8_putc$FUNC, false
    );
    static final FunctionDescriptor ASN1_PRINTABLE_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle ASN1_PRINTABLE_new$MH = RuntimeHelper.downcallHandle(
        "ASN1_PRINTABLE_new",
        constants$225.ASN1_PRINTABLE_new$FUNC, false
    );
    static final FunctionDescriptor ASN1_PRINTABLE_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle ASN1_PRINTABLE_free$MH = RuntimeHelper.downcallHandle(
        "ASN1_PRINTABLE_free",
        constants$225.ASN1_PRINTABLE_free$FUNC, false
    );
    static final FunctionDescriptor d2i_ASN1_PRINTABLE$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle d2i_ASN1_PRINTABLE$MH = RuntimeHelper.downcallHandle(
        "d2i_ASN1_PRINTABLE",
        constants$225.d2i_ASN1_PRINTABLE$FUNC, false
    );
    static final FunctionDescriptor i2d_ASN1_PRINTABLE$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_ASN1_PRINTABLE$MH = RuntimeHelper.downcallHandle(
        "i2d_ASN1_PRINTABLE",
        constants$225.i2d_ASN1_PRINTABLE$FUNC, false
    );
}


