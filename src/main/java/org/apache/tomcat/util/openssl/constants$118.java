// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$118 {

    static final FunctionDescriptor BIO_write$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle BIO_write$MH = RuntimeHelper.downcallHandle(
        "BIO_write",
        constants$118.BIO_write$FUNC, false
    );
    static final FunctionDescriptor BIO_write_ex$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle BIO_write_ex$MH = RuntimeHelper.downcallHandle(
        "BIO_write_ex",
        constants$118.BIO_write_ex$FUNC, false
    );
    static final FunctionDescriptor BIO_puts$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_puts$MH = RuntimeHelper.downcallHandle(
        "BIO_puts",
        constants$118.BIO_puts$FUNC, false
    );
    static final FunctionDescriptor BIO_indent$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle BIO_indent$MH = RuntimeHelper.downcallHandle(
        "BIO_indent",
        constants$118.BIO_indent$FUNC, false
    );
    static final FunctionDescriptor BIO_ctrl$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_INT,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle BIO_ctrl$MH = RuntimeHelper.downcallHandle(
        "BIO_ctrl",
        constants$118.BIO_ctrl$FUNC, false
    );
    static final FunctionDescriptor BIO_callback_ctrl$FUNC = FunctionDescriptor.of(JAVA_LONG,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle BIO_callback_ctrl$MH = RuntimeHelper.downcallHandle(
        "BIO_callback_ctrl",
        constants$118.BIO_callback_ctrl$FUNC, false
    );
}


