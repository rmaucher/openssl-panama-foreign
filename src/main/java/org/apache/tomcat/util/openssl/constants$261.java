// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$261 {

    static final FunctionDescriptor EVP_MD_meth_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle EVP_MD_meth_free$MH = RuntimeHelper.downcallHandle(
        "EVP_MD_meth_free",
        constants$261.EVP_MD_meth_free$FUNC, false
    );
    static final FunctionDescriptor EVP_MD_meth_set_input_blocksize$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EVP_MD_meth_set_input_blocksize$MH = RuntimeHelper.downcallHandle(
        "EVP_MD_meth_set_input_blocksize",
        constants$261.EVP_MD_meth_set_input_blocksize$FUNC, false
    );
    static final FunctionDescriptor EVP_MD_meth_set_result_size$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EVP_MD_meth_set_result_size$MH = RuntimeHelper.downcallHandle(
        "EVP_MD_meth_set_result_size",
        constants$261.EVP_MD_meth_set_result_size$FUNC, false
    );
    static final FunctionDescriptor EVP_MD_meth_set_app_datasize$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle EVP_MD_meth_set_app_datasize$MH = RuntimeHelper.downcallHandle(
        "EVP_MD_meth_set_app_datasize",
        constants$261.EVP_MD_meth_set_app_datasize$FUNC, false
    );
    static final FunctionDescriptor EVP_MD_meth_set_flags$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle EVP_MD_meth_set_flags$MH = RuntimeHelper.downcallHandle(
        "EVP_MD_meth_set_flags",
        constants$261.EVP_MD_meth_set_flags$FUNC, false
    );
    static final FunctionDescriptor EVP_MD_meth_set_init$init$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
}


