// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$136 {

    static final FunctionDescriptor BIO_vsnprintf$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_LONG,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_vsnprintf$MH = RuntimeHelper.downcallHandle(
        "BIO_vsnprintf",
        constants$136.BIO_vsnprintf$FUNC, false
    );
    static final FunctionDescriptor BIO_meth_new$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle BIO_meth_new$MH = RuntimeHelper.downcallHandle(
        "BIO_meth_new",
        constants$136.BIO_meth_new$FUNC, false
    );
    static final FunctionDescriptor BIO_meth_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle BIO_meth_free$MH = RuntimeHelper.downcallHandle(
        "BIO_meth_free",
        constants$136.BIO_meth_free$FUNC, false
    );
    static final FunctionDescriptor BIO_meth_get_write$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_meth_get_write$MH = RuntimeHelper.downcallHandle(
        "BIO_meth_get_write",
        constants$136.BIO_meth_get_write$FUNC, false
    );
    static final FunctionDescriptor BIO_meth_get_write_ex$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle BIO_meth_get_write_ex$MH = RuntimeHelper.downcallHandle(
        "BIO_meth_get_write_ex",
        constants$136.BIO_meth_get_write_ex$FUNC, false
    );
    static final FunctionDescriptor BIO_meth_set_write$write$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        JAVA_INT
    );
}


