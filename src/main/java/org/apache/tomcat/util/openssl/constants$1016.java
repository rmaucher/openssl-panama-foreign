// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$1016 {

    static final FunctionDescriptor X509_check_purpose$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        JAVA_INT
    );
    static final MethodHandle X509_check_purpose$MH = RuntimeHelper.downcallHandle(
        "X509_check_purpose",
        constants$1016.X509_check_purpose$FUNC, false
    );
    static final FunctionDescriptor X509_supported_extension$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle X509_supported_extension$MH = RuntimeHelper.downcallHandle(
        "X509_supported_extension",
        constants$1016.X509_supported_extension$FUNC, false
    );
    static final FunctionDescriptor X509_PURPOSE_set$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT
    );
    static final MethodHandle X509_PURPOSE_set$MH = RuntimeHelper.downcallHandle(
        "X509_PURPOSE_set",
        constants$1016.X509_PURPOSE_set$FUNC, false
    );
    static final FunctionDescriptor X509_check_issued$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle X509_check_issued$MH = RuntimeHelper.downcallHandle(
        "X509_check_issued",
        constants$1016.X509_check_issued$FUNC, false
    );
    static final FunctionDescriptor X509_check_akid$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle X509_check_akid$MH = RuntimeHelper.downcallHandle(
        "X509_check_akid",
        constants$1016.X509_check_akid$FUNC, false
    );
    static final FunctionDescriptor X509_set_proxy_flag$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle X509_set_proxy_flag$MH = RuntimeHelper.downcallHandle(
        "X509_set_proxy_flag",
        constants$1016.X509_set_proxy_flag$FUNC, false
    );
}


