// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$992 {

    static final FunctionDescriptor GENERAL_NAME_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle GENERAL_NAME_free$MH = RuntimeHelper.downcallHandle(
        "GENERAL_NAME_free",
        constants$992.GENERAL_NAME_free$FUNC, false
    );
    static final FunctionDescriptor d2i_GENERAL_NAME$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG
    );
    static final MethodHandle d2i_GENERAL_NAME$MH = RuntimeHelper.downcallHandle(
        "d2i_GENERAL_NAME",
        constants$992.d2i_GENERAL_NAME$FUNC, false
    );
    static final FunctionDescriptor i2d_GENERAL_NAME$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle i2d_GENERAL_NAME$MH = RuntimeHelper.downcallHandle(
        "i2d_GENERAL_NAME",
        constants$992.i2d_GENERAL_NAME$FUNC, false
    );
    static final FunctionDescriptor GENERAL_NAME_dup$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle GENERAL_NAME_dup$MH = RuntimeHelper.downcallHandle(
        "GENERAL_NAME_dup",
        constants$992.GENERAL_NAME_dup$FUNC, false
    );
    static final FunctionDescriptor GENERAL_NAME_cmp$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle GENERAL_NAME_cmp$MH = RuntimeHelper.downcallHandle(
        "GENERAL_NAME_cmp",
        constants$992.GENERAL_NAME_cmp$FUNC, false
    );
    static final FunctionDescriptor v2i_ASN1_BIT_STRING$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle v2i_ASN1_BIT_STRING$MH = RuntimeHelper.downcallHandle(
        "v2i_ASN1_BIT_STRING",
        constants$992.v2i_ASN1_BIT_STRING$FUNC, false
    );
}


