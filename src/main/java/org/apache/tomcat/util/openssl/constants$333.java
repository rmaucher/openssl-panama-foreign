// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$333 {

    static final FunctionDescriptor EVP_PKEY_get0_asn1$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle EVP_PKEY_get0_asn1$MH = RuntimeHelper.downcallHandle(
        "EVP_PKEY_get0_asn1",
        constants$333.EVP_PKEY_get0_asn1$FUNC, false
    );
    static final FunctionDescriptor EVP_PKEY_asn1_new$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_INT,
        JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle EVP_PKEY_asn1_new$MH = RuntimeHelper.downcallHandle(
        "EVP_PKEY_asn1_new",
        constants$333.EVP_PKEY_asn1_new$FUNC, false
    );
    static final FunctionDescriptor EVP_PKEY_asn1_copy$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle EVP_PKEY_asn1_copy$MH = RuntimeHelper.downcallHandle(
        "EVP_PKEY_asn1_copy",
        constants$333.EVP_PKEY_asn1_copy$FUNC, false
    );
    static final FunctionDescriptor EVP_PKEY_asn1_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle EVP_PKEY_asn1_free$MH = RuntimeHelper.downcallHandle(
        "EVP_PKEY_asn1_free",
        constants$333.EVP_PKEY_asn1_free$FUNC, false
    );
    static final FunctionDescriptor EVP_PKEY_asn1_set_public$pub_decode$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle EVP_PKEY_asn1_set_public$pub_decode$MH = RuntimeHelper.downcallHandle(
        constants$333.EVP_PKEY_asn1_set_public$pub_decode$FUNC, false
    );
}


