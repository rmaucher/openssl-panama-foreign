// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class openssl_h_4 extends openssl_h_3 {

    public static int SSL_R_BAD_DECOMPRESSION() {
        return (int)107L;
    }
    public static int SSL_R_BAD_DH_VALUE() {
        return (int)102L;
    }
    public static int SSL_R_BAD_DIGEST_LENGTH() {
        return (int)111L;
    }
    public static int SSL_R_BAD_EARLY_DATA() {
        return (int)233L;
    }
    public static int SSL_R_BAD_ECC_CERT() {
        return (int)304L;
    }
    public static int SSL_R_BAD_ECPOINT() {
        return (int)306L;
    }
    public static int SSL_R_BAD_EXTENSION() {
        return (int)110L;
    }
    public static int SSL_R_BAD_HANDSHAKE_LENGTH() {
        return (int)332L;
    }
    public static int SSL_R_BAD_HANDSHAKE_STATE() {
        return (int)236L;
    }
    public static int SSL_R_BAD_HELLO_REQUEST() {
        return (int)105L;
    }
    public static int SSL_R_BAD_HRR_VERSION() {
        return (int)263L;
    }
    public static int SSL_R_BAD_KEY_SHARE() {
        return (int)108L;
    }
    public static int SSL_R_BAD_KEY_UPDATE() {
        return (int)122L;
    }
    public static int SSL_R_BAD_LEGACY_VERSION() {
        return (int)292L;
    }
    public static int SSL_R_BAD_LENGTH() {
        return (int)271L;
    }
    public static int SSL_R_BAD_PACKET() {
        return (int)240L;
    }
    public static int SSL_R_BAD_PACKET_LENGTH() {
        return (int)115L;
    }
    public static int SSL_R_BAD_PROTOCOL_VERSION_NUMBER() {
        return (int)116L;
    }
    public static int SSL_R_BAD_PSK() {
        return (int)219L;
    }
    public static int SSL_R_BAD_PSK_IDENTITY() {
        return (int)114L;
    }
    public static int SSL_R_BAD_RECORD_TYPE() {
        return (int)443L;
    }
    public static int SSL_R_BAD_RSA_ENCRYPT() {
        return (int)119L;
    }
    public static int SSL_R_BAD_SIGNATURE() {
        return (int)123L;
    }
    public static int SSL_R_BAD_SRP_A_LENGTH() {
        return (int)347L;
    }
    public static int SSL_R_BAD_SRP_PARAMETERS() {
        return (int)371L;
    }
    public static int SSL_R_BAD_SRTP_MKI_VALUE() {
        return (int)352L;
    }
    public static int SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST() {
        return (int)353L;
    }
    public static int SSL_R_BAD_SSL_FILETYPE() {
        return (int)124L;
    }
    public static int SSL_R_BAD_VALUE() {
        return (int)384L;
    }
    public static int SSL_R_BAD_WRITE_RETRY() {
        return (int)127L;
    }
    public static int SSL_R_BINDER_DOES_NOT_VERIFY() {
        return (int)253L;
    }
    public static int SSL_R_BIO_NOT_SET() {
        return (int)128L;
    }
    public static int SSL_R_BLOCK_CIPHER_PAD_IS_WRONG() {
        return (int)129L;
    }
    public static int SSL_R_BN_LIB() {
        return (int)130L;
    }
    public static int SSL_R_CALLBACK_FAILED() {
        return (int)234L;
    }
    public static int SSL_R_CANNOT_CHANGE_CIPHER() {
        return (int)109L;
    }
    public static int SSL_R_CA_DN_LENGTH_MISMATCH() {
        return (int)131L;
    }
    public static int SSL_R_CA_KEY_TOO_SMALL() {
        return (int)397L;
    }
    public static int SSL_R_CA_MD_TOO_WEAK() {
        return (int)398L;
    }
    public static int SSL_R_CCS_RECEIVED_EARLY() {
        return (int)133L;
    }
    public static int SSL_R_CERTIFICATE_VERIFY_FAILED() {
        return (int)134L;
    }
    public static int SSL_R_CERT_CB_ERROR() {
        return (int)377L;
    }
    public static int SSL_R_CERT_LENGTH_MISMATCH() {
        return (int)135L;
    }
    public static int SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED() {
        return (int)218L;
    }
    public static int SSL_R_CIPHER_CODE_WRONG_LENGTH() {
        return (int)137L;
    }
    public static int SSL_R_CIPHER_OR_HASH_UNAVAILABLE() {
        return (int)138L;
    }
    public static int SSL_R_CLIENTHELLO_TLSEXT() {
        return (int)226L;
    }
    public static int SSL_R_COMPRESSED_LENGTH_TOO_LONG() {
        return (int)140L;
    }
    public static int SSL_R_COMPRESSION_DISABLED() {
        return (int)343L;
    }
    public static int SSL_R_COMPRESSION_FAILURE() {
        return (int)141L;
    }
    public static int SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE() {
        return (int)307L;
    }
    public static int SSL_R_COMPRESSION_LIBRARY_ERROR() {
        return (int)142L;
    }
    public static int SSL_R_CONNECTION_TYPE_NOT_SET() {
        return (int)144L;
    }
    public static int SSL_R_CONTEXT_NOT_DANE_ENABLED() {
        return (int)167L;
    }
    public static int SSL_R_COOKIE_GEN_CALLBACK_FAILURE() {
        return (int)400L;
    }
    public static int SSL_R_COOKIE_MISMATCH() {
        return (int)308L;
    }
    public static int SSL_R_CUSTOM_EXT_HANDLER_ALREADY_INSTALLED() {
        return (int)206L;
    }
    public static int SSL_R_DANE_ALREADY_ENABLED() {
        return (int)172L;
    }
    public static int SSL_R_DANE_CANNOT_OVERRIDE_MTYPE_FULL() {
        return (int)173L;
    }
    public static int SSL_R_DANE_NOT_ENABLED() {
        return (int)175L;
    }
    public static int SSL_R_DANE_TLSA_BAD_CERTIFICATE() {
        return (int)180L;
    }
    public static int SSL_R_DANE_TLSA_BAD_CERTIFICATE_USAGE() {
        return (int)184L;
    }
    public static int SSL_R_DANE_TLSA_BAD_DATA_LENGTH() {
        return (int)189L;
    }
    public static int SSL_R_DANE_TLSA_BAD_DIGEST_LENGTH() {
        return (int)192L;
    }
    public static int SSL_R_DANE_TLSA_BAD_MATCHING_TYPE() {
        return (int)200L;
    }
    public static int SSL_R_DANE_TLSA_BAD_PUBLIC_KEY() {
        return (int)201L;
    }
    public static int SSL_R_DANE_TLSA_BAD_SELECTOR() {
        return (int)202L;
    }
    public static int SSL_R_DANE_TLSA_NULL_DATA() {
        return (int)203L;
    }
    public static int SSL_R_DATA_BETWEEN_CCS_AND_FINISHED() {
        return (int)145L;
    }
    public static int SSL_R_DATA_LENGTH_TOO_LONG() {
        return (int)146L;
    }
    public static int SSL_R_DECRYPTION_FAILED() {
        return (int)147L;
    }
    public static int SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC() {
        return (int)281L;
    }
    public static int SSL_R_DH_KEY_TOO_SMALL() {
        return (int)394L;
    }
    public static int SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG() {
        return (int)148L;
    }
    public static int SSL_R_DIGEST_CHECK_FAILED() {
        return (int)149L;
    }
    public static int SSL_R_DTLS_MESSAGE_TOO_BIG() {
        return (int)334L;
    }
    public static int SSL_R_DUPLICATE_COMPRESSION_ID() {
        return (int)309L;
    }
    public static int SSL_R_ECC_CERT_NOT_FOR_SIGNING() {
        return (int)318L;
    }
    public static int SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE() {
        return (int)374L;
    }
    public static int SSL_R_EE_KEY_TOO_SMALL() {
        return (int)399L;
    }
    public static int SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST() {
        return (int)354L;
    }
    public static int SSL_R_ENCRYPTED_LENGTH_TOO_LONG() {
        return (int)150L;
    }
    public static int SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST() {
        return (int)151L;
    }
    public static int SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN() {
        return (int)204L;
    }
    public static int SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE() {
        return (int)194L;
    }
    public static int SSL_R_EXCESSIVE_MESSAGE_SIZE() {
        return (int)152L;
    }
    public static int SSL_R_EXTENSION_NOT_RECEIVED() {
        return (int)279L;
    }
    public static int SSL_R_EXTRA_DATA_IN_MESSAGE() {
        return (int)153L;
    }
    public static int SSL_R_EXT_LENGTH_MISMATCH() {
        return (int)163L;
    }
    public static int SSL_R_FAILED_TO_INIT_ASYNC() {
        return (int)405L;
    }
    public static int SSL_R_FRAGMENTED_CLIENT_HELLO() {
        return (int)401L;
    }
    public static int SSL_R_GOT_A_FIN_BEFORE_A_CCS() {
        return (int)154L;
    }
    public static int SSL_R_HTTPS_PROXY_REQUEST() {
        return (int)155L;
    }
    public static int SSL_R_HTTP_REQUEST() {
        return (int)156L;
    }
    public static int SSL_R_ILLEGAL_POINT_COMPRESSION() {
        return (int)162L;
    }
    public static int SSL_R_ILLEGAL_SUITEB_DIGEST() {
        return (int)380L;
    }
    public static int SSL_R_INAPPROPRIATE_FALLBACK() {
        return (int)373L;
    }
    public static int SSL_R_INCONSISTENT_COMPRESSION() {
        return (int)340L;
    }
    public static int SSL_R_INCONSISTENT_EARLY_DATA_ALPN() {
        return (int)222L;
    }
    public static int SSL_R_INCONSISTENT_EARLY_DATA_SNI() {
        return (int)231L;
    }
    public static int SSL_R_INCONSISTENT_EXTMS() {
        return (int)104L;
    }
    public static int SSL_R_INSUFFICIENT_SECURITY() {
        return (int)241L;
    }
    public static int SSL_R_INVALID_ALERT() {
        return (int)205L;
    }
    public static int SSL_R_INVALID_CCS_MESSAGE() {
        return (int)260L;
    }
    public static int SSL_R_INVALID_CERTIFICATE_OR_ALG() {
        return (int)238L;
    }
    public static int SSL_R_INVALID_COMMAND() {
        return (int)280L;
    }
    public static int SSL_R_INVALID_COMPRESSION_ALGORITHM() {
        return (int)341L;
    }
    public static int SSL_R_INVALID_CONFIG() {
        return (int)283L;
    }
    public static int SSL_R_INVALID_CONFIGURATION_NAME() {
        return (int)113L;
    }
    public static int SSL_R_INVALID_CONTEXT() {
        return (int)282L;
    }
    public static int SSL_R_INVALID_CT_VALIDATION_TYPE() {
        return (int)212L;
    }
    public static int SSL_R_INVALID_KEY_UPDATE_TYPE() {
        return (int)120L;
    }
    public static int SSL_R_INVALID_MAX_EARLY_DATA() {
        return (int)174L;
    }
    public static int SSL_R_INVALID_NULL_CMD_NAME() {
        return (int)385L;
    }
    public static int SSL_R_INVALID_SEQUENCE_NUMBER() {
        return (int)402L;
    }
    public static int SSL_R_INVALID_SERVERINFO_DATA() {
        return (int)388L;
    }
    public static int SSL_R_INVALID_SESSION_ID() {
        return (int)999L;
    }
    public static int SSL_R_INVALID_SRP_USERNAME() {
        return (int)357L;
    }
    public static int SSL_R_INVALID_STATUS_RESPONSE() {
        return (int)328L;
    }
    public static int SSL_R_INVALID_TICKET_KEYS_LENGTH() {
        return (int)325L;
    }
    public static int SSL_R_LENGTH_MISMATCH() {
        return (int)159L;
    }
    public static int SSL_R_LENGTH_TOO_LONG() {
        return (int)404L;
    }
    public static int SSL_R_LENGTH_TOO_SHORT() {
        return (int)160L;
    }
    public static int SSL_R_LIBRARY_BUG() {
        return (int)274L;
    }
    public static int SSL_R_LIBRARY_HAS_NO_CIPHERS() {
        return (int)161L;
    }
    public static int SSL_R_MISSING_DSA_SIGNING_CERT() {
        return (int)165L;
    }
    public static int SSL_R_MISSING_ECDSA_SIGNING_CERT() {
        return (int)381L;
    }
    public static int SSL_R_MISSING_FATAL() {
        return (int)256L;
    }
    public static int SSL_R_MISSING_PARAMETERS() {
        return (int)290L;
    }
    public static int SSL_R_MISSING_PSK_KEX_MODES_EXTENSION() {
        return (int)310L;
    }
    public static int SSL_R_MISSING_RSA_CERTIFICATE() {
        return (int)168L;
    }
    public static int SSL_R_MISSING_RSA_ENCRYPTING_CERT() {
        return (int)169L;
    }
    public static int SSL_R_MISSING_RSA_SIGNING_CERT() {
        return (int)170L;
    }
    public static int SSL_R_MISSING_SIGALGS_EXTENSION() {
        return (int)112L;
    }
    public static int SSL_R_MISSING_SIGNING_CERT() {
        return (int)221L;
    }
    public static int SSL_R_MISSING_SRP_PARAM() {
        return (int)358L;
    }
    public static int SSL_R_MISSING_SUPPORTED_GROUPS_EXTENSION() {
        return (int)209L;
    }
    public static int SSL_R_MISSING_TMP_DH_KEY() {
        return (int)171L;
    }
    public static int SSL_R_MISSING_TMP_ECDH_KEY() {
        return (int)311L;
    }
    public static int SSL_R_MIXED_HANDSHAKE_AND_NON_HANDSHAKE_DATA() {
        return (int)293L;
    }
    public static int SSL_R_NOT_ON_RECORD_BOUNDARY() {
        return (int)182L;
    }
    public static int SSL_R_NOT_REPLACING_CERTIFICATE() {
        return (int)289L;
    }
    public static int SSL_R_NOT_SERVER() {
        return (int)284L;
    }
    public static int SSL_R_NO_APPLICATION_PROTOCOL() {
        return (int)235L;
    }
    public static int SSL_R_NO_CERTIFICATES_RETURNED() {
        return (int)176L;
    }
    public static int SSL_R_NO_CERTIFICATE_ASSIGNED() {
        return (int)177L;
    }
    public static int SSL_R_NO_CERTIFICATE_SET() {
        return (int)179L;
    }
    public static int SSL_R_NO_CHANGE_FOLLOWING_HRR() {
        return (int)214L;
    }
    public static int SSL_R_NO_CIPHERS_AVAILABLE() {
        return (int)181L;
    }
    public static int SSL_R_NO_CIPHERS_SPECIFIED() {
        return (int)183L;
    }
    public static int SSL_R_NO_CIPHER_MATCH() {
        return (int)185L;
    }
    public static int SSL_R_NO_CLIENT_CERT_METHOD() {
        return (int)331L;
    }
    public static int SSL_R_NO_COMPRESSION_SPECIFIED() {
        return (int)187L;
    }
    public static int SSL_R_NO_COOKIE_CALLBACK_SET() {
        return (int)287L;
    }
    public static int SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER() {
        return (int)330L;
    }
    public static int SSL_R_NO_METHOD_SPECIFIED() {
        return (int)188L;
    }
    public static int SSL_R_NO_PEM_EXTENSIONS() {
        return (int)389L;
    }
    public static int SSL_R_NO_PRIVATE_KEY_ASSIGNED() {
        return (int)190L;
    }
    public static int SSL_R_NO_PROTOCOLS_AVAILABLE() {
        return (int)191L;
    }
    public static int SSL_R_NO_RENEGOTIATION() {
        return (int)339L;
    }
    public static int SSL_R_NO_REQUIRED_DIGEST() {
        return (int)324L;
    }
    public static int SSL_R_NO_SHARED_CIPHER() {
        return (int)193L;
    }
    public static int SSL_R_NO_SHARED_GROUPS() {
        return (int)410L;
    }
    public static int SSL_R_NO_SHARED_SIGNATURE_ALGORITHMS() {
        return (int)376L;
    }
    public static int SSL_R_NO_SRTP_PROFILES() {
        return (int)359L;
    }
    public static int SSL_R_NO_SUITABLE_KEY_SHARE() {
        return (int)101L;
    }
    public static int SSL_R_NO_SUITABLE_SIGNATURE_ALGORITHM() {
        return (int)118L;
    }
    public static int SSL_R_NO_VALID_SCTS() {
        return (int)216L;
    }
    public static int SSL_R_NO_VERIFY_COOKIE_CALLBACK() {
        return (int)403L;
    }
    public static int SSL_R_NULL_SSL_CTX() {
        return (int)195L;
    }
    public static int SSL_R_NULL_SSL_METHOD_PASSED() {
        return (int)196L;
    }
    public static int SSL_R_OCSP_CALLBACK_FAILURE() {
        return (int)294L;
    }
    public static int SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED() {
        return (int)197L;
    }
    public static int SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED() {
        return (int)344L;
    }
    public static int SSL_R_OVERFLOW_ERROR() {
        return (int)237L;
    }
    public static int SSL_R_PACKET_LENGTH_TOO_LONG() {
        return (int)198L;
    }
    public static int SSL_R_PARSE_TLSEXT() {
        return (int)227L;
    }
    public static int SSL_R_PATH_TOO_LONG() {
        return (int)270L;
    }
    public static int SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE() {
        return (int)199L;
    }
    public static int SSL_R_PEM_NAME_BAD_PREFIX() {
        return (int)391L;
    }
    public static int SSL_R_PEM_NAME_TOO_SHORT() {
        return (int)392L;
    }
    public static int SSL_R_PIPELINE_FAILURE() {
        return (int)406L;
    }
    public static int SSL_R_POST_HANDSHAKE_AUTH_ENCODING_ERR() {
        return (int)278L;
    }
    public static int SSL_R_PRIVATE_KEY_MISMATCH() {
        return (int)288L;
    }
    public static int SSL_R_PROTOCOL_IS_SHUTDOWN() {
        return (int)207L;
    }
    public static int SSL_R_PSK_IDENTITY_NOT_FOUND() {
        return (int)223L;
    }
    public static int SSL_R_PSK_NO_CLIENT_CB() {
        return (int)224L;
    }
    public static int SSL_R_PSK_NO_SERVER_CB() {
        return (int)225L;
    }
    public static int SSL_R_READ_BIO_NOT_SET() {
        return (int)211L;
    }
    public static int SSL_R_READ_TIMEOUT_EXPIRED() {
        return (int)312L;
    }
    public static int SSL_R_RECORD_LENGTH_MISMATCH() {
        return (int)213L;
    }
    public static int SSL_R_RECORD_TOO_SMALL() {
        return (int)298L;
    }
    public static int SSL_R_RENEGOTIATE_EXT_TOO_LONG() {
        return (int)335L;
    }
    public static int SSL_R_RENEGOTIATION_ENCODING_ERR() {
        return (int)336L;
    }
    public static int SSL_R_RENEGOTIATION_MISMATCH() {
        return (int)337L;
    }
    public static int SSL_R_REQUEST_PENDING() {
        return (int)285L;
    }
    public static int SSL_R_REQUEST_SENT() {
        return (int)286L;
    }
    public static int SSL_R_REQUIRED_CIPHER_MISSING() {
        return (int)215L;
    }
    public static int SSL_R_REQUIRED_COMPRESSION_ALGORITHM_MISSING() {
        return (int)342L;
    }
    public static int SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING() {
        return (int)345L;
    }
    public static int SSL_R_SCT_VERIFICATION_FAILED() {
        return (int)208L;
    }
    public static int SSL_R_SERVERHELLO_TLSEXT() {
        return (int)275L;
    }
    public static int SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED() {
        return (int)277L;
    }
    public static int SSL_R_SHUTDOWN_WHILE_IN_INIT() {
        return (int)407L;
    }
    public static int SSL_R_SIGNATURE_ALGORITHMS_ERROR() {
        return (int)360L;
    }
    public static int SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE() {
        return (int)220L;
    }
    public static int SSL_R_SRP_A_CALC() {
        return (int)361L;
    }
    public static int SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES() {
        return (int)362L;
    }
    public static int SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG() {
        return (int)363L;
    }
    public static int SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE() {
        return (int)364L;
    }
    public static int SSL_R_SSL3_EXT_INVALID_MAX_FRAGMENT_LENGTH() {
        return (int)232L;
    }
    public static int SSL_R_SSL3_EXT_INVALID_SERVERNAME() {
        return (int)319L;
    }
    public static int SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE() {
        return (int)320L;
    }
    public static int SSL_R_SSL3_SESSION_ID_TOO_LONG() {
        return (int)300L;
    }
    public static int SSL_R_SSLV3_ALERT_BAD_CERTIFICATE() {
        return (int)1042L;
    }
    public static int SSL_R_SSLV3_ALERT_BAD_RECORD_MAC() {
        return (int)1020L;
    }
    public static int SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED() {
        return (int)1045L;
    }
    public static int SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED() {
        return (int)1044L;
    }
    public static int SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN() {
        return (int)1046L;
    }
    public static int SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE() {
        return (int)1030L;
    }
    public static int SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE() {
        return (int)1040L;
    }
    public static int SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER() {
        return (int)1047L;
    }
    public static int SSL_R_SSLV3_ALERT_NO_CERTIFICATE() {
        return (int)1041L;
    }
    public static int SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE() {
        return (int)1010L;
    }
    public static int SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE() {
        return (int)1043L;
    }
    public static int SSL_R_SSL_COMMAND_SECTION_EMPTY() {
        return (int)117L;
    }
    public static int SSL_R_SSL_COMMAND_SECTION_NOT_FOUND() {
        return (int)125L;
    }
    public static int SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION() {
        return (int)228L;
    }
    public static int SSL_R_SSL_HANDSHAKE_FAILURE() {
        return (int)229L;
    }
    public static int SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS() {
        return (int)230L;
    }
    public static int SSL_R_SSL_NEGATIVE_LENGTH() {
        return (int)372L;
    }
    public static int SSL_R_SSL_SECTION_EMPTY() {
        return (int)126L;
    }
    public static int SSL_R_SSL_SECTION_NOT_FOUND() {
        return (int)136L;
    }
    public static int SSL_R_SSL_SESSION_ID_CALLBACK_FAILED() {
        return (int)301L;
    }
    public static int SSL_R_SSL_SESSION_ID_CONFLICT() {
        return (int)302L;
    }
    public static int SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG() {
        return (int)273L;
    }
    public static int SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH() {
        return (int)303L;
    }
    public static int SSL_R_SSL_SESSION_ID_TOO_LONG() {
        return (int)408L;
    }
    public static int SSL_R_SSL_SESSION_VERSION_MISMATCH() {
        return (int)210L;
    }
    public static int SSL_R_STILL_IN_INIT() {
        return (int)121L;
    }
    public static int SSL_R_TLSV13_ALERT_CERTIFICATE_REQUIRED() {
        return (int)1116L;
    }
    public static int SSL_R_TLSV13_ALERT_MISSING_EXTENSION() {
        return (int)1109L;
    }
    public static int SSL_R_TLSV1_ALERT_ACCESS_DENIED() {
        return (int)1049L;
    }
    public static int SSL_R_TLSV1_ALERT_DECODE_ERROR() {
        return (int)1050L;
    }
    public static int SSL_R_TLSV1_ALERT_DECRYPTION_FAILED() {
        return (int)1021L;
    }
    public static int SSL_R_TLSV1_ALERT_DECRYPT_ERROR() {
        return (int)1051L;
    }
    public static int SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION() {
        return (int)1060L;
    }
    public static int SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK() {
        return (int)1086L;
    }
    public static int SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY() {
        return (int)1071L;
    }
    public static int SSL_R_TLSV1_ALERT_INTERNAL_ERROR() {
        return (int)1080L;
    }
    public static int SSL_R_TLSV1_ALERT_NO_RENEGOTIATION() {
        return (int)1100L;
    }
    public static int SSL_R_TLSV1_ALERT_PROTOCOL_VERSION() {
        return (int)1070L;
    }
    public static int SSL_R_TLSV1_ALERT_RECORD_OVERFLOW() {
        return (int)1022L;
    }
    public static int SSL_R_TLSV1_ALERT_UNKNOWN_CA() {
        return (int)1048L;
    }
    public static int SSL_R_TLSV1_ALERT_USER_CANCELLED() {
        return (int)1090L;
    }
    public static int SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE() {
        return (int)1114L;
    }
    public static int SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE() {
        return (int)1113L;
    }
    public static int SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE() {
        return (int)1111L;
    }
    public static int SSL_R_TLSV1_UNRECOGNIZED_NAME() {
        return (int)1112L;
    }
    public static int SSL_R_TLSV1_UNSUPPORTED_EXTENSION() {
        return (int)1110L;
    }
    public static int SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT() {
        return (int)365L;
    }
    public static int SSL_R_TLS_HEARTBEAT_PENDING() {
        return (int)366L;
    }
    public static int SSL_R_TLS_ILLEGAL_EXPORTER_LABEL() {
        return (int)367L;
    }
    public static int SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST() {
        return (int)157L;
    }
    public static int SSL_R_TOO_MANY_KEY_UPDATES() {
        return (int)132L;
    }
    public static int SSL_R_TOO_MANY_WARN_ALERTS() {
        return (int)409L;
    }
    public static int SSL_R_TOO_MUCH_EARLY_DATA() {
        return (int)164L;
    }
    public static int SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS() {
        return (int)314L;
    }
    public static int SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS() {
        return (int)239L;
    }
    public static int SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES() {
        return (int)242L;
    }
    public static int SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES() {
        return (int)243L;
    }
    public static int SSL_R_UNEXPECTED_CCS_MESSAGE() {
        return (int)262L;
    }
    public static int SSL_R_UNEXPECTED_END_OF_EARLY_DATA() {
        return (int)178L;
    }
    public static int SSL_R_UNEXPECTED_MESSAGE() {
        return (int)244L;
    }
    public static int SSL_R_UNEXPECTED_RECORD() {
        return (int)245L;
    }
    public static int SSL_R_UNINITIALIZED() {
        return (int)276L;
    }
    public static int SSL_R_UNKNOWN_ALERT_TYPE() {
        return (int)246L;
    }
    public static int SSL_R_UNKNOWN_CERTIFICATE_TYPE() {
        return (int)247L;
    }
    public static int SSL_R_UNKNOWN_CIPHER_RETURNED() {
        return (int)248L;
    }
    public static int SSL_R_UNKNOWN_CIPHER_TYPE() {
        return (int)249L;
    }
    public static int SSL_R_UNKNOWN_CMD_NAME() {
        return (int)386L;
    }
    public static int SSL_R_UNKNOWN_COMMAND() {
        return (int)139L;
    }
    public static int SSL_R_UNKNOWN_DIGEST() {
        return (int)368L;
    }
    public static int SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE() {
        return (int)250L;
    }
    public static int SSL_R_UNKNOWN_PKEY_TYPE() {
        return (int)251L;
    }
    public static int SSL_R_UNKNOWN_PROTOCOL() {
        return (int)252L;
    }
    public static int SSL_R_UNKNOWN_SSL_VERSION() {
        return (int)254L;
    }
    public static int SSL_R_UNKNOWN_STATE() {
        return (int)255L;
    }
    public static int SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED() {
        return (int)338L;
    }
    public static int SSL_R_UNSOLICITED_EXTENSION() {
        return (int)217L;
    }
    public static int SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM() {
        return (int)257L;
    }
    public static int SSL_R_UNSUPPORTED_ELLIPTIC_CURVE() {
        return (int)315L;
    }
    public static int SSL_R_UNSUPPORTED_PROTOCOL() {
        return (int)258L;
    }
    public static int SSL_R_UNSUPPORTED_SSL_VERSION() {
        return (int)259L;
    }
    public static int SSL_R_UNSUPPORTED_STATUS_TYPE() {
        return (int)329L;
    }
    public static int SSL_R_USE_SRTP_NOT_NEGOTIATED() {
        return (int)369L;
    }
    public static int SSL_R_VERSION_TOO_HIGH() {
        return (int)166L;
    }
    public static int SSL_R_VERSION_TOO_LOW() {
        return (int)396L;
    }
    public static int SSL_R_WRONG_CERTIFICATE_TYPE() {
        return (int)383L;
    }
    public static int SSL_R_WRONG_CIPHER_RETURNED() {
        return (int)261L;
    }
    public static int SSL_R_WRONG_CURVE() {
        return (int)378L;
    }
    public static int SSL_R_WRONG_SIGNATURE_LENGTH() {
        return (int)264L;
    }
    public static int SSL_R_WRONG_SIGNATURE_SIZE() {
        return (int)265L;
    }
    public static int SSL_R_WRONG_SIGNATURE_TYPE() {
        return (int)370L;
    }
    public static int SSL_R_WRONG_SSL_VERSION() {
        return (int)266L;
    }
    public static int SSL_R_WRONG_VERSION_NUMBER() {
        return (int)267L;
    }
    public static int SSL_R_X509_LIB() {
        return (int)268L;
    }
    public static int SSL_R_X509_VERIFICATION_SETUP_PROBLEMS() {
        return (int)269L;
    }
    public static int SSL_SESSION_ASN1_VERSION() {
        return (int)1L;
    }
    public static int SSL_MAX_SSL_SESSION_ID_LENGTH() {
        return (int)32L;
    }
    public static int SSL_MAX_SID_CTX_LENGTH() {
        return (int)32L;
    }
    public static int SSL_MAX_KEY_ARG_LENGTH() {
        return (int)8L;
    }
    public static int SSL_MAX_MASTER_KEY_LENGTH() {
        return (int)48L;
    }
    public static int SSL_MAX_PIPELINES() {
        return (int)32L;
    }
    public static int SSL_SENT_SHUTDOWN() {
        return (int)1L;
    }
    public static int SSL_RECEIVED_SHUTDOWN() {
        return (int)2L;
    }
    public static int SSL_EXT_TLS_ONLY() {
        return (int)1L;
    }
    public static int SSL_EXT_DTLS_ONLY() {
        return (int)2L;
    }
    public static int SSL_EXT_TLS_IMPLEMENTATION_ONLY() {
        return (int)4L;
    }
    public static int SSL_EXT_SSL3_ALLOWED() {
        return (int)8L;
    }
    public static int SSL_EXT_TLS1_2_AND_BELOW_ONLY() {
        return (int)16L;
    }
    public static int SSL_EXT_TLS1_3_ONLY() {
        return (int)32L;
    }
    public static int SSL_EXT_IGNORE_ON_RESUMPTION() {
        return (int)64L;
    }
    public static int SSL_EXT_CLIENT_HELLO() {
        return (int)128L;
    }
    public static int SSL_EXT_TLS1_2_SERVER_HELLO() {
        return (int)256L;
    }
    public static int SSL_EXT_TLS1_3_SERVER_HELLO() {
        return (int)512L;
    }
    public static int SSL_EXT_TLS1_3_ENCRYPTED_EXTENSIONS() {
        return (int)1024L;
    }
    public static int SSL_EXT_TLS1_3_HELLO_RETRY_REQUEST() {
        return (int)2048L;
    }
    public static int SSL_EXT_TLS1_3_CERTIFICATE() {
        return (int)4096L;
    }
    public static int SSL_EXT_TLS1_3_NEW_SESSION_TICKET() {
        return (int)8192L;
    }
    public static int SSL_EXT_TLS1_3_CERTIFICATE_REQUEST() {
        return (int)16384L;
    }
    public static int SSL_OP_MICROSOFT_SESS_ID_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_NETSCAPE_CHALLENGE_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER() {
        return (int)0L;
    }
    public static int SSL_OP_MSIE_SSLV2_RSA_PADDING() {
        return (int)0L;
    }
    public static int SSL_OP_SSLEAY_080_CLIENT_DH_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_TLS_D5_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_TLS_BLOCK_PADDING_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_SINGLE_ECDH_USE() {
        return (int)0L;
    }
    public static int SSL_OP_SINGLE_DH_USE() {
        return (int)0L;
    }
    public static int SSL_OP_EPHEMERAL_RSA() {
        return (int)0L;
    }
    public static int SSL_OP_NO_SSLv2() {
        return (int)0L;
    }
    public static int SSL_OP_PKCS1_CHECK_1() {
        return (int)0L;
    }
    public static int SSL_OP_PKCS1_CHECK_2() {
        return (int)0L;
    }
    public static int SSL_OP_NETSCAPE_CA_DN_BUG() {
        return (int)0L;
    }
    public static int SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG() {
        return (int)0L;
    }
    public static int SSL_CERT_FLAG_SUITEB_128_LOS_ONLY() {
        return (int)65536L;
    }
    public static int SSL_CERT_FLAG_SUITEB_192_LOS() {
        return (int)131072L;
    }
    public static int SSL_CERT_FLAG_SUITEB_128_LOS() {
        return (int)196608L;
    }
    public static int SSL_CERT_FLAG_BROKEN_PROTOCOL() {
        return (int)268435456L;
    }
    public static int SSL_BUILD_CHAIN_FLAG_UNTRUSTED() {
        return (int)1L;
    }
    public static int SSL_BUILD_CHAIN_FLAG_NO_ROOT() {
        return (int)2L;
    }
    public static int SSL_BUILD_CHAIN_FLAG_CHECK() {
        return (int)4L;
    }
    public static int SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR() {
        return (int)8L;
    }
    public static int SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR() {
        return (int)16L;
    }
    public static int CERT_PKEY_VALID() {
        return (int)1L;
    }
    public static int CERT_PKEY_SIGN() {
        return (int)2L;
    }
    public static int CERT_PKEY_EE_SIGNATURE() {
        return (int)16L;
    }
    public static int CERT_PKEY_CA_SIGNATURE() {
        return (int)32L;
    }
    public static int CERT_PKEY_EE_PARAM() {
        return (int)64L;
    }
    public static int CERT_PKEY_CA_PARAM() {
        return (int)128L;
    }
    public static int CERT_PKEY_EXPLICIT_SIGN() {
        return (int)256L;
    }
    public static int CERT_PKEY_ISSUER_NAME() {
        return (int)512L;
    }
    public static int CERT_PKEY_CERT_TYPE() {
        return (int)1024L;
    }
    public static int CERT_PKEY_SUITEB() {
        return (int)2048L;
    }
    public static int SSL_CONF_FLAG_CMDLINE() {
        return (int)1L;
    }
    public static int SSL_CONF_FLAG_FILE() {
        return (int)2L;
    }
    public static int SSL_CONF_FLAG_CLIENT() {
        return (int)4L;
    }
    public static int SSL_CONF_FLAG_SERVER() {
        return (int)8L;
    }
    public static int SSL_CONF_FLAG_SHOW_ERRORS() {
        return (int)16L;
    }
    public static int SSL_CONF_FLAG_CERTIFICATE() {
        return (int)32L;
    }
    public static int SSL_CONF_FLAG_REQUIRE_PRIVATE() {
        return (int)64L;
    }
    public static int SSL_CONF_TYPE_UNKNOWN() {
        return (int)0L;
    }
    public static int SSL_CONF_TYPE_STRING() {
        return (int)1L;
    }
    public static int SSL_CONF_TYPE_FILE() {
        return (int)2L;
    }
    public static int SSL_CONF_TYPE_DIR() {
        return (int)3L;
    }
    public static int SSL_CONF_TYPE_NONE() {
        return (int)4L;
    }
    public static int SSL_COOKIE_LENGTH() {
        return (int)4096L;
    }
    public static int SSL_SESS_CACHE_OFF() {
        return (int)0L;
    }
    public static int SSL_SESS_CACHE_CLIENT() {
        return (int)1L;
    }
    public static int SSL_SESS_CACHE_SERVER() {
        return (int)2L;
    }
    public static int SSL_SESS_CACHE_NO_AUTO_CLEAR() {
        return (int)128L;
    }
    public static int SSL_SESS_CACHE_NO_INTERNAL_LOOKUP() {
        return (int)256L;
    }
    public static int SSL_SESS_CACHE_NO_INTERNAL_STORE() {
        return (int)512L;
    }
    public static int OPENSSL_NPN_UNSUPPORTED() {
        return (int)0L;
    }
    public static int OPENSSL_NPN_NEGOTIATED() {
        return (int)1L;
    }
    public static int OPENSSL_NPN_NO_OVERLAP() {
        return (int)2L;
    }
    public static int PSK_MAX_IDENTITY_LEN() {
        return (int)128L;
    }
    public static int PSK_MAX_PSK_LEN() {
        return (int)256L;
    }
    public static int SSL_NOTHING() {
        return (int)1L;
    }
    public static int SSL_WRITING() {
        return (int)2L;
    }
    public static int SSL_READING() {
        return (int)3L;
    }
    public static int SSL_X509_LOOKUP() {
        return (int)4L;
    }
    public static int SSL_ASYNC_PAUSED() {
        return (int)5L;
    }
    public static int SSL_ASYNC_NO_JOBS() {
        return (int)6L;
    }
    public static int SSL_CLIENT_HELLO_CB() {
        return (int)7L;
    }
    public static int SSL_MAC_FLAG_READ_MAC_STREAM() {
        return (int)1L;
    }
    public static int SSL_MAC_FLAG_WRITE_MAC_STREAM() {
        return (int)2L;
    }
    public static int SSL2_VERSION() {
        return (int)2L;
    }
    public static int SSL2_MT_CLIENT_HELLO() {
        return (int)1L;
    }
    public static int SSL3_CK_SCSV() {
        return (int)50331903L;
    }
    public static int SSL3_CK_FALLBACK_SCSV() {
        return (int)50353664L;
    }
    public static int SSL3_CK_RSA_NULL_MD5() {
        return (int)50331649L;
    }
    public static int SSL3_CK_RSA_NULL_SHA() {
        return (int)50331650L;
    }
    public static int SSL3_CK_RSA_RC4_40_MD5() {
        return (int)50331651L;
    }
    public static int SSL3_CK_RSA_RC4_128_MD5() {
        return (int)50331652L;
    }
    public static int SSL3_CK_RSA_RC4_128_SHA() {
        return (int)50331653L;
    }
    public static int SSL3_CK_RSA_RC2_40_MD5() {
        return (int)50331654L;
    }
    public static int SSL3_CK_RSA_IDEA_128_SHA() {
        return (int)50331655L;
    }
    public static int SSL3_CK_RSA_DES_40_CBC_SHA() {
        return (int)50331656L;
    }
    public static int SSL3_CK_RSA_DES_64_CBC_SHA() {
        return (int)50331657L;
    }
    public static int SSL3_CK_RSA_DES_192_CBC3_SHA() {
        return (int)50331658L;
    }
    public static int SSL3_CK_DH_DSS_DES_40_CBC_SHA() {
        return (int)50331659L;
    }
    public static int SSL3_CK_DH_DSS_DES_64_CBC_SHA() {
        return (int)50331660L;
    }
    public static int SSL3_CK_DH_DSS_DES_192_CBC3_SHA() {
        return (int)50331661L;
    }
    public static int SSL3_CK_DH_RSA_DES_40_CBC_SHA() {
        return (int)50331662L;
    }
    public static int SSL3_CK_DH_RSA_DES_64_CBC_SHA() {
        return (int)50331663L;
    }
    public static int SSL3_CK_DH_RSA_DES_192_CBC3_SHA() {
        return (int)50331664L;
    }
    public static int SSL3_CK_DHE_DSS_DES_40_CBC_SHA() {
        return (int)50331665L;
    }
    public static int SSL3_CK_DHE_DSS_DES_64_CBC_SHA() {
        return (int)50331666L;
    }
    public static int SSL3_CK_DHE_DSS_DES_192_CBC3_SHA() {
        return (int)50331667L;
    }
    public static int SSL3_CK_DHE_RSA_DES_40_CBC_SHA() {
        return (int)50331668L;
    }
    public static int SSL3_CK_DHE_RSA_DES_64_CBC_SHA() {
        return (int)50331669L;
    }
    public static int SSL3_CK_DHE_RSA_DES_192_CBC3_SHA() {
        return (int)50331670L;
    }
    public static int SSL3_CK_ADH_RC4_40_MD5() {
        return (int)50331671L;
    }
    public static int SSL3_CK_ADH_RC4_128_MD5() {
        return (int)50331672L;
    }
    public static int SSL3_CK_ADH_DES_40_CBC_SHA() {
        return (int)50331673L;
    }
    public static int SSL3_CK_ADH_DES_64_CBC_SHA() {
        return (int)50331674L;
    }
    public static int SSL3_CK_ADH_DES_192_CBC_SHA() {
        return (int)50331675L;
    }
    public static int SSL3_SSL_SESSION_ID_LENGTH() {
        return (int)32L;
    }
    public static int SSL3_MAX_SSL_SESSION_ID_LENGTH() {
        return (int)32L;
    }
    public static int SSL3_MASTER_SECRET_SIZE() {
        return (int)48L;
    }
    public static int SSL3_RANDOM_SIZE() {
        return (int)32L;
    }
    public static int SSL3_SESSION_ID_SIZE() {
        return (int)32L;
    }
    public static int SSL3_RT_HEADER_LENGTH() {
        return (int)5L;
    }
    public static int SSL3_HM_HEADER_LENGTH() {
        return (int)4L;
    }
    public static int SSL3_ALIGN_PAYLOAD() {
        return (int)8L;
    }
    public static int SSL3_RT_MAX_MD_SIZE() {
        return (int)64L;
    }
    public static int SSL_RT_MAX_CIPHER_BLOCK_SIZE() {
        return (int)16L;
    }
    public static int SSL3_RT_MAX_PLAIN_LENGTH() {
        return (int)16384L;
    }
    public static int SSL3_RT_MAX_COMPRESSED_OVERHEAD() {
        return (int)1024L;
    }
    public static int SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD() {
        return (int)256L;
    }
    public static int SSL3_VERSION() {
        return (int)768L;
    }
    public static int SSL3_VERSION_MAJOR() {
        return (int)3L;
    }
    public static int SSL3_VERSION_MINOR() {
        return (int)0L;
    }
    public static int SSL3_RT_CHANGE_CIPHER_SPEC() {
        return (int)20L;
    }
    public static int SSL3_RT_ALERT() {
        return (int)21L;
    }
    public static int SSL3_RT_HANDSHAKE() {
        return (int)22L;
    }
    public static int SSL3_RT_APPLICATION_DATA() {
        return (int)23L;
    }
    public static int DTLS1_RT_HEARTBEAT() {
        return (int)24L;
    }
    public static int TLS1_RT_CRYPTO() {
        return (int)4096L;
    }
    public static int TLS1_RT_CRYPTO_READ() {
        return (int)0L;
    }
    public static int TLS1_RT_CRYPTO_WRITE() {
        return (int)256L;
    }
    public static int SSL3_RT_HEADER() {
        return (int)256L;
    }
    public static int SSL3_RT_INNER_CONTENT_TYPE() {
        return (int)257L;
    }
    public static int SSL3_AL_WARNING() {
        return (int)1L;
    }
    public static int SSL3_AL_FATAL() {
        return (int)2L;
    }
    public static int SSL3_AD_CLOSE_NOTIFY() {
        return (int)0L;
    }
    public static int SSL3_AD_UNEXPECTED_MESSAGE() {
        return (int)10L;
    }
    public static int SSL3_AD_BAD_RECORD_MAC() {
        return (int)20L;
    }
    public static int SSL3_AD_DECOMPRESSION_FAILURE() {
        return (int)30L;
    }
    public static int SSL3_AD_HANDSHAKE_FAILURE() {
        return (int)40L;
    }
    public static int SSL3_AD_NO_CERTIFICATE() {
        return (int)41L;
    }
    public static int SSL3_AD_BAD_CERTIFICATE() {
        return (int)42L;
    }
    public static int SSL3_AD_UNSUPPORTED_CERTIFICATE() {
        return (int)43L;
    }
    public static int SSL3_AD_CERTIFICATE_REVOKED() {
        return (int)44L;
    }
    public static int SSL3_AD_CERTIFICATE_EXPIRED() {
        return (int)45L;
    }
    public static int SSL3_AD_CERTIFICATE_UNKNOWN() {
        return (int)46L;
    }
    public static int SSL3_AD_ILLEGAL_PARAMETER() {
        return (int)47L;
    }
    public static int TLS1_HB_REQUEST() {
        return (int)1L;
    }
    public static int TLS1_HB_RESPONSE() {
        return (int)2L;
    }
    public static int SSL3_CT_RSA_SIGN() {
        return (int)1L;
    }
    public static int SSL3_CT_DSS_SIGN() {
        return (int)2L;
    }
    public static int SSL3_CT_RSA_FIXED_DH() {
        return (int)3L;
    }
    public static int SSL3_CT_DSS_FIXED_DH() {
        return (int)4L;
    }
    public static int SSL3_CT_RSA_EPHEMERAL_DH() {
        return (int)5L;
    }
    public static int SSL3_CT_DSS_EPHEMERAL_DH() {
        return (int)6L;
    }
    public static int SSL3_CT_FORTEZZA_DMS() {
        return (int)20L;
    }
    public static int SSL3_CT_NUMBER() {
        return (int)10L;
    }
    public static int SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS() {
        return (int)1L;
    }
    public static int TLS1_FLAGS_TLS_PADDING_BUG() {
        return (int)0L;
    }
    public static int TLS1_FLAGS_SKIP_CERT_VERIFY() {
        return (int)16L;
    }
    public static int TLS1_FLAGS_ENCRYPT_THEN_MAC_READ() {
        return (int)256L;
    }
    public static int TLS1_FLAGS_RECEIVED_EXTMS() {
        return (int)512L;
    }
    public static int TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE() {
        return (int)1024L;
    }
    public static int TLS1_FLAGS_STATELESS() {
        return (int)2048L;
    }
    public static int TLS1_FLAGS_REQUIRED_EXTMS() {
        return (int)4096L;
    }
    public static int SSL3_MT_HELLO_REQUEST() {
        return (int)0L;
    }
    public static int SSL3_MT_CLIENT_HELLO() {
        return (int)1L;
    }
    public static int SSL3_MT_SERVER_HELLO() {
        return (int)2L;
    }
    public static int SSL3_MT_NEWSESSION_TICKET() {
        return (int)4L;
    }
    public static int SSL3_MT_END_OF_EARLY_DATA() {
        return (int)5L;
    }
    public static int SSL3_MT_ENCRYPTED_EXTENSIONS() {
        return (int)8L;
    }
    public static int SSL3_MT_CERTIFICATE() {
        return (int)11L;
    }
    public static int SSL3_MT_SERVER_KEY_EXCHANGE() {
        return (int)12L;
    }
    public static int SSL3_MT_CERTIFICATE_REQUEST() {
        return (int)13L;
    }
    public static int SSL3_MT_SERVER_DONE() {
        return (int)14L;
    }
    public static int SSL3_MT_CERTIFICATE_VERIFY() {
        return (int)15L;
    }
    public static int SSL3_MT_CLIENT_KEY_EXCHANGE() {
        return (int)16L;
    }
    public static int SSL3_MT_FINISHED() {
        return (int)20L;
    }
    public static int SSL3_MT_CERTIFICATE_URL() {
        return (int)21L;
    }
    public static int SSL3_MT_CERTIFICATE_STATUS() {
        return (int)22L;
    }
    public static int SSL3_MT_SUPPLEMENTAL_DATA() {
        return (int)23L;
    }
    public static int SSL3_MT_KEY_UPDATE() {
        return (int)24L;
    }
    public static int SSL3_MT_NEXT_PROTO() {
        return (int)67L;
    }
    public static int SSL3_MT_MESSAGE_HASH() {
        return (int)254L;
    }
    public static int DTLS1_MT_HELLO_VERIFY_REQUEST() {
        return (int)3L;
    }
    public static int SSL3_MT_CHANGE_CIPHER_SPEC() {
        return (int)257L;
    }
    public static int SSL3_MT_CCS() {
        return (int)1L;
    }
    public static int SSL3_CC_READ() {
        return (int)1L;
    }
    public static int SSL3_CC_WRITE() {
        return (int)2L;
    }
    public static int SSL3_CC_CLIENT() {
        return (int)16L;
    }
    public static int SSL3_CC_SERVER() {
        return (int)32L;
    }
    public static int SSL3_CC_EARLY() {
        return (int)64L;
    }
    public static int SSL3_CC_HANDSHAKE() {
        return (int)128L;
    }
    public static int SSL3_CC_APPLICATION() {
        return (int)256L;
    }
    public static int OPENSSL_TLS_SECURITY_LEVEL() {
        return (int)1L;
    }
    public static int TLS1_VERSION() {
        return (int)769L;
    }
    public static int TLS1_1_VERSION() {
        return (int)770L;
    }
    public static int TLS1_2_VERSION() {
        return (int)771L;
    }
    public static int TLS1_3_VERSION() {
        return (int)772L;
    }
    public static int TLS_ANY_VERSION() {
        return (int)65536L;
    }
    public static int TLS1_VERSION_MAJOR() {
        return (int)3L;
    }
    public static int TLS1_VERSION_MINOR() {
        return (int)1L;
    }
    public static int TLS1_1_VERSION_MAJOR() {
        return (int)3L;
    }
    public static int TLS1_1_VERSION_MINOR() {
        return (int)2L;
    }
    public static int TLS1_2_VERSION_MAJOR() {
        return (int)3L;
    }
    public static int TLS1_2_VERSION_MINOR() {
        return (int)3L;
    }
    public static int TLS1_AD_DECRYPTION_FAILED() {
        return (int)21L;
    }
    public static int TLS1_AD_RECORD_OVERFLOW() {
        return (int)22L;
    }
    public static int TLS1_AD_UNKNOWN_CA() {
        return (int)48L;
    }
    public static int TLS1_AD_ACCESS_DENIED() {
        return (int)49L;
    }
    public static int TLS1_AD_DECODE_ERROR() {
        return (int)50L;
    }
    public static int TLS1_AD_DECRYPT_ERROR() {
        return (int)51L;
    }
    public static int TLS1_AD_EXPORT_RESTRICTION() {
        return (int)60L;
    }
    public static int TLS1_AD_PROTOCOL_VERSION() {
        return (int)70L;
    }
    public static int TLS1_AD_INSUFFICIENT_SECURITY() {
        return (int)71L;
    }
    public static int TLS1_AD_INTERNAL_ERROR() {
        return (int)80L;
    }
    public static int TLS1_AD_INAPPROPRIATE_FALLBACK() {
        return (int)86L;
    }
    public static int TLS1_AD_USER_CANCELLED() {
        return (int)90L;
    }
    public static int TLS1_AD_NO_RENEGOTIATION() {
        return (int)100L;
    }
    public static int TLS13_AD_MISSING_EXTENSION() {
        return (int)109L;
    }
    public static int TLS13_AD_CERTIFICATE_REQUIRED() {
        return (int)116L;
    }
    public static int TLS1_AD_UNSUPPORTED_EXTENSION() {
        return (int)110L;
    }
    public static int TLS1_AD_CERTIFICATE_UNOBTAINABLE() {
        return (int)111L;
    }
    public static int TLS1_AD_UNRECOGNIZED_NAME() {
        return (int)112L;
    }
    public static int TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE() {
        return (int)113L;
    }
    public static int TLS1_AD_BAD_CERTIFICATE_HASH_VALUE() {
        return (int)114L;
    }
    public static int TLS1_AD_UNKNOWN_PSK_IDENTITY() {
        return (int)115L;
    }
    public static int TLS1_AD_NO_APPLICATION_PROTOCOL() {
        return (int)120L;
    }
    public static int TLSEXT_TYPE_server_name() {
        return (int)0L;
    }
    public static int TLSEXT_TYPE_max_fragment_length() {
        return (int)1L;
    }
    public static int TLSEXT_TYPE_client_certificate_url() {
        return (int)2L;
    }
    public static int TLSEXT_TYPE_trusted_ca_keys() {
        return (int)3L;
    }
    public static int TLSEXT_TYPE_truncated_hmac() {
        return (int)4L;
    }
    public static int TLSEXT_TYPE_status_request() {
        return (int)5L;
    }
    public static int TLSEXT_TYPE_user_mapping() {
        return (int)6L;
    }
    public static int TLSEXT_TYPE_client_authz() {
        return (int)7L;
    }
    public static int TLSEXT_TYPE_server_authz() {
        return (int)8L;
    }
    public static int TLSEXT_TYPE_cert_type() {
        return (int)9L;
    }
    public static int TLSEXT_TYPE_supported_groups() {
        return (int)10L;
    }
    public static int TLSEXT_TYPE_ec_point_formats() {
        return (int)11L;
    }
    public static int TLSEXT_TYPE_srp() {
        return (int)12L;
    }
    public static int TLSEXT_TYPE_signature_algorithms() {
        return (int)13L;
    }
    public static int TLSEXT_TYPE_use_srtp() {
        return (int)14L;
    }
    public static int TLSEXT_TYPE_heartbeat() {
        return (int)15L;
    }
    public static int TLSEXT_TYPE_application_layer_protocol_negotiation() {
        return (int)16L;
    }
    public static int TLSEXT_TYPE_signed_certificate_timestamp() {
        return (int)18L;
    }
    public static int TLSEXT_TYPE_padding() {
        return (int)21L;
    }
    public static int TLSEXT_TYPE_encrypt_then_mac() {
        return (int)22L;
    }
    public static int TLSEXT_TYPE_extended_master_secret() {
        return (int)23L;
    }
    public static int TLSEXT_TYPE_session_ticket() {
        return (int)35L;
    }
    public static int TLSEXT_TYPE_psk() {
        return (int)41L;
    }
    public static int TLSEXT_TYPE_early_data() {
        return (int)42L;
    }
    public static int TLSEXT_TYPE_supported_versions() {
        return (int)43L;
    }
    public static int TLSEXT_TYPE_cookie() {
        return (int)44L;
    }
    public static int TLSEXT_TYPE_psk_kex_modes() {
        return (int)45L;
    }
    public static int TLSEXT_TYPE_certificate_authorities() {
        return (int)47L;
    }
    public static int TLSEXT_TYPE_post_handshake_auth() {
        return (int)49L;
    }
    public static int TLSEXT_TYPE_signature_algorithms_cert() {
        return (int)50L;
    }
    public static int TLSEXT_TYPE_key_share() {
        return (int)51L;
    }
    public static int TLSEXT_TYPE_renegotiate() {
        return (int)65281L;
    }
    public static int TLSEXT_TYPE_next_proto_neg() {
        return (int)13172L;
    }
    public static int TLSEXT_NAMETYPE_host_name() {
        return (int)0L;
    }
    public static int TLSEXT_STATUSTYPE_ocsp() {
        return (int)1L;
    }
    public static int TLSEXT_ECPOINTFORMAT_first() {
        return (int)0L;
    }
    public static int TLSEXT_ECPOINTFORMAT_uncompressed() {
        return (int)0L;
    }
    public static int TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime() {
        return (int)1L;
    }
    public static int TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2() {
        return (int)2L;
    }
    public static int TLSEXT_ECPOINTFORMAT_last() {
        return (int)2L;
    }
    public static int TLSEXT_signature_anonymous() {
        return (int)0L;
    }
    public static int TLSEXT_signature_rsa() {
        return (int)1L;
    }
    public static int TLSEXT_signature_dsa() {
        return (int)2L;
    }
    public static int TLSEXT_signature_ecdsa() {
        return (int)3L;
    }
    public static int TLSEXT_signature_gostr34102001() {
        return (int)237L;
    }
    public static int TLSEXT_signature_gostr34102012_256() {
        return (int)238L;
    }
    public static int TLSEXT_signature_gostr34102012_512() {
        return (int)239L;
    }
    public static int TLSEXT_signature_num() {
        return (int)7L;
    }
    public static int TLSEXT_hash_none() {
        return (int)0L;
    }
    public static int TLSEXT_hash_md5() {
        return (int)1L;
    }
    public static int TLSEXT_hash_sha1() {
        return (int)2L;
    }
    public static int TLSEXT_hash_sha224() {
        return (int)3L;
    }
    public static int TLSEXT_hash_sha256() {
        return (int)4L;
    }
    public static int TLSEXT_hash_sha384() {
        return (int)5L;
    }
    public static int TLSEXT_hash_sha512() {
        return (int)6L;
    }
    public static int TLSEXT_hash_gostr3411() {
        return (int)237L;
    }
    public static int TLSEXT_hash_gostr34112012_256() {
        return (int)238L;
    }
    public static int TLSEXT_hash_gostr34112012_512() {
        return (int)239L;
    }
    public static int TLSEXT_hash_num() {
        return (int)10L;
    }
    public static int TLSEXT_nid_unknown() {
        return (int)16777216L;
    }
    public static int TLSEXT_curve_P_256() {
        return (int)23L;
    }
    public static int TLSEXT_curve_P_384() {
        return (int)24L;
    }
    public static int TLSEXT_max_fragment_length_DISABLED() {
        return (int)0L;
    }
    public static int TLSEXT_max_fragment_length_512() {
        return (int)1L;
    }
    public static int TLSEXT_max_fragment_length_1024() {
        return (int)2L;
    }
    public static int TLSEXT_max_fragment_length_2048() {
        return (int)3L;
    }
    public static int TLSEXT_max_fragment_length_4096() {
        return (int)4L;
    }
    public static int TLSEXT_MAXLEN_host_name() {
        return (int)255L;
    }
    public static int SSL_TLSEXT_ERR_OK() {
        return (int)0L;
    }
    public static int SSL_TLSEXT_ERR_ALERT_WARNING() {
        return (int)1L;
    }
    public static int SSL_TLSEXT_ERR_ALERT_FATAL() {
        return (int)2L;
    }
    public static int SSL_TLSEXT_ERR_NOACK() {
        return (int)3L;
    }
    public static int TLS1_CK_PSK_WITH_RC4_128_SHA() {
        return (int)50331786L;
    }
    public static int TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA() {
        return (int)50331787L;
    }
    public static int TLS1_CK_PSK_WITH_AES_128_CBC_SHA() {
        return (int)50331788L;
    }
    public static int TLS1_CK_PSK_WITH_AES_256_CBC_SHA() {
        return (int)50331789L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_RC4_128_SHA() {
        return (int)50331790L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA() {
        return (int)50331791L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA() {
        return (int)50331792L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA() {
        return (int)50331793L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_RC4_128_SHA() {
        return (int)50331794L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA() {
        return (int)50331795L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA() {
        return (int)50331796L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA() {
        return (int)50331797L;
    }
    public static int TLS1_CK_PSK_WITH_AES_128_GCM_SHA256() {
        return (int)50331816L;
    }
    public static int TLS1_CK_PSK_WITH_AES_256_GCM_SHA384() {
        return (int)50331817L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256() {
        return (int)50331818L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384() {
        return (int)50331819L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256() {
        return (int)50331820L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384() {
        return (int)50331821L;
    }
    public static int TLS1_CK_PSK_WITH_AES_128_CBC_SHA256() {
        return (int)50331822L;
    }
    public static int TLS1_CK_PSK_WITH_AES_256_CBC_SHA384() {
        return (int)50331823L;
    }
    public static int TLS1_CK_PSK_WITH_NULL_SHA256() {
        return (int)50331824L;
    }
    public static int TLS1_CK_PSK_WITH_NULL_SHA384() {
        return (int)50331825L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256() {
        return (int)50331826L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384() {
        return (int)50331827L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_NULL_SHA256() {
        return (int)50331828L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_NULL_SHA384() {
        return (int)50331829L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256() {
        return (int)50331830L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384() {
        return (int)50331831L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_NULL_SHA256() {
        return (int)50331832L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_NULL_SHA384() {
        return (int)50331833L;
    }
    public static int TLS1_CK_PSK_WITH_NULL_SHA() {
        return (int)50331692L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_NULL_SHA() {
        return (int)50331693L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_NULL_SHA() {
        return (int)50331694L;
    }
    public static int TLS1_CK_RSA_WITH_AES_128_SHA() {
        return (int)50331695L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_128_SHA() {
        return (int)50331696L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_128_SHA() {
        return (int)50331697L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_128_SHA() {
        return (int)50331698L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_128_SHA() {
        return (int)50331699L;
    }
    public static int TLS1_CK_ADH_WITH_AES_128_SHA() {
        return (int)50331700L;
    }
    public static int TLS1_CK_RSA_WITH_AES_256_SHA() {
        return (int)50331701L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_256_SHA() {
        return (int)50331702L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_256_SHA() {
        return (int)50331703L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_256_SHA() {
        return (int)50331704L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_256_SHA() {
        return (int)50331705L;
    }
    public static int TLS1_CK_ADH_WITH_AES_256_SHA() {
        return (int)50331706L;
    }
    public static int TLS1_CK_RSA_WITH_NULL_SHA256() {
        return (int)50331707L;
    }
    public static int TLS1_CK_RSA_WITH_AES_128_SHA256() {
        return (int)50331708L;
    }
    public static int TLS1_CK_RSA_WITH_AES_256_SHA256() {
        return (int)50331709L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_128_SHA256() {
        return (int)50331710L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_128_SHA256() {
        return (int)50331711L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_128_SHA256() {
        return (int)50331712L;
    }
    public static int TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331713L;
    }
    public static int TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331714L;
    }
    public static int TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331715L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331716L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331717L;
    }
    public static int TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA() {
        return (int)50331718L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_128_SHA256() {
        return (int)50331751L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_256_SHA256() {
        return (int)50331752L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_256_SHA256() {
        return (int)50331753L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_256_SHA256() {
        return (int)50331754L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_256_SHA256() {
        return (int)50331755L;
    }
    public static int TLS1_CK_ADH_WITH_AES_128_SHA256() {
        return (int)50331756L;
    }
    public static int TLS1_CK_ADH_WITH_AES_256_SHA256() {
        return (int)50331757L;
    }
    public static int TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331780L;
    }
    public static int TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331781L;
    }
    public static int TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331782L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331783L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331784L;
    }
    public static int TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA() {
        return (int)50331785L;
    }
    public static int TLS1_CK_RSA_WITH_SEED_SHA() {
        return (int)50331798L;
    }
    public static int TLS1_CK_DH_DSS_WITH_SEED_SHA() {
        return (int)50331799L;
    }
    public static int TLS1_CK_DH_RSA_WITH_SEED_SHA() {
        return (int)50331800L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_SEED_SHA() {
        return (int)50331801L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_SEED_SHA() {
        return (int)50331802L;
    }
    public static int TLS1_CK_ADH_WITH_SEED_SHA() {
        return (int)50331803L;
    }
    public static int TLS1_CK_RSA_WITH_AES_128_GCM_SHA256() {
        return (int)50331804L;
    }
    public static int TLS1_CK_RSA_WITH_AES_256_GCM_SHA384() {
        return (int)50331805L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256() {
        return (int)50331806L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384() {
        return (int)50331807L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256() {
        return (int)50331808L;
    }
    public static int TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384() {
        return (int)50331809L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256() {
        return (int)50331810L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384() {
        return (int)50331811L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256() {
        return (int)50331812L;
    }
    public static int TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384() {
        return (int)50331813L;
    }
    public static int TLS1_CK_ADH_WITH_AES_128_GCM_SHA256() {
        return (int)50331814L;
    }
    public static int TLS1_CK_ADH_WITH_AES_256_GCM_SHA384() {
        return (int)50331815L;
    }
    public static int TLS1_CK_RSA_WITH_AES_128_CCM() {
        return (int)50380956L;
    }
    public static int TLS1_CK_RSA_WITH_AES_256_CCM() {
        return (int)50380957L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_128_CCM() {
        return (int)50380958L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_256_CCM() {
        return (int)50380959L;
    }
    public static int TLS1_CK_RSA_WITH_AES_128_CCM_8() {
        return (int)50380960L;
    }
    public static int TLS1_CK_RSA_WITH_AES_256_CCM_8() {
        return (int)50380961L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_128_CCM_8() {
        return (int)50380962L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_AES_256_CCM_8() {
        return (int)50380963L;
    }
    public static int TLS1_CK_PSK_WITH_AES_128_CCM() {
        return (int)50380964L;
    }
    public static int TLS1_CK_PSK_WITH_AES_256_CCM() {
        return (int)50380965L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_128_CCM() {
        return (int)50380966L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_256_CCM() {
        return (int)50380967L;
    }
    public static int TLS1_CK_PSK_WITH_AES_128_CCM_8() {
        return (int)50380968L;
    }
    public static int TLS1_CK_PSK_WITH_AES_256_CCM_8() {
        return (int)50380969L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_128_CCM_8() {
        return (int)50380970L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_AES_256_CCM_8() {
        return (int)50380971L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM() {
        return (int)50380972L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM() {
        return (int)50380973L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8() {
        return (int)50380974L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8() {
        return (int)50380975L;
    }
    public static int TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331834L;
    }
    public static int TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331835L;
    }
    public static int TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331836L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331837L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331838L;
    }
    public static int TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50331839L;
    }
    public static int TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331840L;
    }
    public static int TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331841L;
    }
    public static int TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331842L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331843L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331844L;
    }
    public static int TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256() {
        return (int)50331845L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA() {
        return (int)50380801L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA() {
        return (int)50380802L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA() {
        return (int)50380803L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA() {
        return (int)50380804L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA() {
        return (int)50380805L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA() {
        return (int)50380806L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA() {
        return (int)50380807L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA() {
        return (int)50380808L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA() {
        return (int)50380809L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA() {
        return (int)50380810L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_NULL_SHA() {
        return (int)50380811L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA() {
        return (int)50380812L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA() {
        return (int)50380813L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA() {
        return (int)50380814L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA() {
        return (int)50380815L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_NULL_SHA() {
        return (int)50380816L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA() {
        return (int)50380817L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA() {
        return (int)50380818L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA() {
        return (int)50380819L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA() {
        return (int)50380820L;
    }
    public static int TLS1_CK_ECDH_anon_WITH_NULL_SHA() {
        return (int)50380821L;
    }
    public static int TLS1_CK_ECDH_anon_WITH_RC4_128_SHA() {
        return (int)50380822L;
    }
    public static int TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA() {
        return (int)50380823L;
    }
    public static int TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA() {
        return (int)50380824L;
    }
    public static int TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA() {
        return (int)50380825L;
    }
    public static int TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA() {
        return (int)50380826L;
    }
    public static int TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA() {
        return (int)50380827L;
    }
    public static int TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA() {
        return (int)50380828L;
    }
    public static int TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA() {
        return (int)50380829L;
    }
    public static int TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA() {
        return (int)50380830L;
    }
    public static int TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA() {
        return (int)50380831L;
    }
    public static int TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA() {
        return (int)50380832L;
    }
    public static int TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA() {
        return (int)50380833L;
    }
    public static int TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA() {
        return (int)50380834L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256() {
        return (int)50380835L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384() {
        return (int)50380836L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256() {
        return (int)50380837L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384() {
        return (int)50380838L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256() {
        return (int)50380839L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384() {
        return (int)50380840L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256() {
        return (int)50380841L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384() {
        return (int)50380842L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256() {
        return (int)50380843L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384() {
        return (int)50380844L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256() {
        return (int)50380845L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384() {
        return (int)50380846L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256() {
        return (int)50380847L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384() {
        return (int)50380848L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256() {
        return (int)50380849L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384() {
        return (int)50380850L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA() {
        return (int)50380851L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA() {
        return (int)50380852L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA() {
        return (int)50380853L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA() {
        return (int)50380854L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256() {
        return (int)50380855L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384() {
        return (int)50380856L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_NULL_SHA() {
        return (int)50380857L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_NULL_SHA256() {
        return (int)50380858L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_NULL_SHA384() {
        return (int)50380859L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380914L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380915L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380916L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380917L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380918L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380919L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380920L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380921L;
    }
    public static int TLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380948L;
    }
    public static int TLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380949L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380950L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380951L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380952L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380953L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
        return (int)50380954L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
        return (int)50380955L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305() {
        return (int)50384040L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305() {
        return (int)50384041L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305() {
        return (int)50384042L;
    }
    public static int TLS1_CK_PSK_WITH_CHACHA20_POLY1305() {
        return (int)50384043L;
    }
    public static int TLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305() {
        return (int)50384044L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305() {
        return (int)50384045L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305() {
        return (int)50384046L;
    }
    public static int TLS1_3_CK_AES_128_GCM_SHA256() {
        return (int)50336513L;
    }
    public static int TLS1_3_CK_AES_256_GCM_SHA384() {
        return (int)50336514L;
    }
    public static int TLS1_3_CK_CHACHA20_POLY1305_SHA256() {
        return (int)50336515L;
    }
    public static int TLS1_3_CK_AES_128_CCM_SHA256() {
        return (int)50336516L;
    }
    public static int TLS1_3_CK_AES_128_CCM_8_SHA256() {
        return (int)50336517L;
    }
    public static int TLS1_CK_RSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380880L;
    }
    public static int TLS1_CK_RSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380881L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380882L;
    }
    public static int TLS1_CK_DHE_RSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380883L;
    }
    public static int TLS1_CK_DH_RSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380884L;
    }
    public static int TLS1_CK_DH_RSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380885L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380886L;
    }
    public static int TLS1_CK_DHE_DSS_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380887L;
    }
    public static int TLS1_CK_DH_DSS_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380888L;
    }
    public static int TLS1_CK_DH_DSS_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380889L;
    }
    public static int TLS1_CK_DH_anon_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380890L;
    }
    public static int TLS1_CK_DH_anon_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380891L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380892L;
    }
    public static int TLS1_CK_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380893L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380894L;
    }
    public static int TLS1_CK_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380895L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380896L;
    }
    public static int TLS1_CK_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380897L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380898L;
    }
    public static int TLS1_CK_ECDH_RSA_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380899L;
    }
    public static int TLS1_CK_PSK_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380906L;
    }
    public static int TLS1_CK_PSK_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380907L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380908L;
    }
    public static int TLS1_CK_DHE_PSK_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380909L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_ARIA_128_GCM_SHA256() {
        return (int)50380910L;
    }
    public static int TLS1_CK_RSA_PSK_WITH_ARIA_256_GCM_SHA384() {
        return (int)50380911L;
    }
    public static int TLS_CT_RSA_SIGN() {
        return (int)1L;
    }
    public static int TLS_CT_DSS_SIGN() {
        return (int)2L;
    }
    public static int TLS_CT_RSA_FIXED_DH() {
        return (int)3L;
    }
    public static int TLS_CT_DSS_FIXED_DH() {
        return (int)4L;
    }
    public static int TLS_CT_ECDSA_SIGN() {
        return (int)64L;
    }
    public static int TLS_CT_RSA_FIXED_ECDH() {
        return (int)65L;
    }
    public static int TLS_CT_ECDSA_FIXED_ECDH() {
        return (int)66L;
    }
    public static int TLS_CT_GOST01_SIGN() {
        return (int)22L;
    }
    public static int TLS_CT_GOST12_SIGN() {
        return (int)238L;
    }
    public static int TLS_CT_GOST12_512_SIGN() {
        return (int)239L;
    }
    public static int TLS_CT_NUMBER() {
        return (int)10L;
    }
    public static int TLS1_FINISH_MAC_LENGTH() {
        return (int)12L;
    }
    public static int TLS_MD_MAX_CONST_SIZE() {
        return (int)22L;
    }
    public static int TLS_MD_CLIENT_FINISH_CONST_SIZE() {
        return (int)15L;
    }
    public static int TLS_MD_SERVER_FINISH_CONST_SIZE() {
        return (int)15L;
    }
    public static int TLS_MD_KEY_EXPANSION_CONST_SIZE() {
        return (int)13L;
    }
    public static int TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE() {
        return (int)16L;
    }
    public static int TLS_MD_SERVER_WRITE_KEY_CONST_SIZE() {
        return (int)16L;
    }
    public static int TLS_MD_IV_BLOCK_CONST_SIZE() {
        return (int)8L;
    }
    public static int TLS_MD_MASTER_SECRET_CONST_SIZE() {
        return (int)13L;
    }
    public static int TLS_MD_EXTENDED_MASTER_SECRET_CONST_SIZE() {
        return (int)22L;
    }
    public static int DTLS1_VERSION() {
        return (int)65279L;
    }
    public static int DTLS1_2_VERSION() {
        return (int)65277L;
    }
    public static int DTLS1_VERSION_MAJOR() {
        return (int)254L;
    }
    public static int DTLS1_BAD_VER() {
        return (int)256L;
    }
    public static int DTLS_ANY_VERSION() {
        return (int)131071L;
    }
    public static int DTLS1_COOKIE_LENGTH() {
        return (int)256L;
    }
    public static int DTLS1_RT_HEADER_LENGTH() {
        return (int)13L;
    }
    public static int DTLS1_HM_HEADER_LENGTH() {
        return (int)12L;
    }
    public static int DTLS1_CCS_HEADER_LENGTH() {
        return (int)1L;
    }
    public static int DTLS1_AL_HEADER_LENGTH() {
        return (int)2L;
    }
    public static int DTLS1_TMO_READ_COUNT() {
        return (int)2L;
    }
    public static int DTLS1_TMO_WRITE_COUNT() {
        return (int)2L;
    }
    public static int DTLS1_TMO_ALERT_COUNT() {
        return (int)12L;
    }
    public static int SRTP_AES128_CM_SHA1_80() {
        return (int)1L;
    }
    public static int SRTP_AES128_CM_SHA1_32() {
        return (int)2L;
    }
    public static int SRTP_AES128_F8_SHA1_80() {
        return (int)3L;
    }
    public static int SRTP_AES128_F8_SHA1_32() {
        return (int)4L;
    }
    public static int SRTP_NULL_SHA1_80() {
        return (int)5L;
    }
    public static int SRTP_NULL_SHA1_32() {
        return (int)6L;
    }
    public static int SRTP_AEAD_AES_128_GCM() {
        return (int)7L;
    }
    public static int SRTP_AEAD_AES_256_GCM() {
        return (int)8L;
    }
    public static int SSL_KEY_UPDATE_NOT_REQUESTED() {
        return (int)0L;
    }
    public static int SSL_KEY_UPDATE_REQUESTED() {
        return (int)1L;
    }
    public static int SSL_ST_CONNECT() {
        return (int)4096L;
    }
    public static int SSL_ST_ACCEPT() {
        return (int)8192L;
    }
    public static int SSL_ST_MASK() {
        return (int)4095L;
    }
    public static int SSL_CB_LOOP() {
        return (int)1L;
    }
    public static int SSL_CB_EXIT() {
        return (int)2L;
    }
    public static int SSL_CB_READ() {
        return (int)4L;
    }
    public static int SSL_CB_WRITE() {
        return (int)8L;
    }
    public static int SSL_CB_ALERT() {
        return (int)16384L;
    }
    public static int SSL_CB_HANDSHAKE_START() {
        return (int)16L;
    }
    public static int SSL_CB_HANDSHAKE_DONE() {
        return (int)32L;
    }
    public static int SSL_ST_READ_HEADER() {
        return (int)240L;
    }
    public static int SSL_ST_READ_BODY() {
        return (int)241L;
    }
    public static int SSL_ST_READ_DONE() {
        return (int)242L;
    }
    public static int SSL_VERIFY_NONE() {
        return (int)0L;
    }
    public static int SSL_VERIFY_PEER() {
        return (int)1L;
    }
    public static int SSL_VERIFY_FAIL_IF_NO_PEER_CERT() {
        return (int)2L;
    }
    public static int SSL_VERIFY_CLIENT_ONCE() {
        return (int)4L;
    }
    public static int SSL_VERIFY_POST_HANDSHAKE() {
        return (int)8L;
    }
    public static int SSL_AD_REASON_OFFSET() {
        return (int)1000L;
    }
    public static int SSL_ERROR_NONE() {
        return (int)0L;
    }
    public static int SSL_ERROR_SSL() {
        return (int)1L;
    }
    public static int SSL_ERROR_WANT_READ() {
        return (int)2L;
    }
    public static int SSL_ERROR_WANT_WRITE() {
        return (int)3L;
    }
    public static int SSL_ERROR_WANT_X509_LOOKUP() {
        return (int)4L;
    }
    public static int SSL_ERROR_SYSCALL() {
        return (int)5L;
    }
    public static int SSL_ERROR_ZERO_RETURN() {
        return (int)6L;
    }
    public static int SSL_ERROR_WANT_CONNECT() {
        return (int)7L;
    }
    public static int SSL_ERROR_WANT_ACCEPT() {
        return (int)8L;
    }
    public static int SSL_ERROR_WANT_ASYNC() {
        return (int)9L;
    }
    public static int SSL_ERROR_WANT_ASYNC_JOB() {
        return (int)10L;
    }
    public static int SSL_ERROR_WANT_CLIENT_HELLO_CB() {
        return (int)11L;
    }
    public static int SSL_CTRL_SET_TMP_DH() {
        return (int)3L;
    }
    public static int SSL_CTRL_SET_TMP_ECDH() {
        return (int)4L;
    }
    public static int SSL_CTRL_SET_TMP_DH_CB() {
        return (int)6L;
    }
    public static int SSL_CTRL_GET_CLIENT_CERT_REQUEST() {
        return (int)9L;
    }
    public static int SSL_CTRL_GET_NUM_RENEGOTIATIONS() {
        return (int)10L;
    }
    public static int SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS() {
        return (int)11L;
    }
    public static int SSL_CTRL_GET_TOTAL_RENEGOTIATIONS() {
        return (int)12L;
    }
    public static int SSL_CTRL_GET_FLAGS() {
        return (int)13L;
    }
    public static int SSL_CTRL_EXTRA_CHAIN_CERT() {
        return (int)14L;
    }
    public static int SSL_CTRL_SET_MSG_CALLBACK() {
        return (int)15L;
    }
    public static int SSL_CTRL_SET_MSG_CALLBACK_ARG() {
        return (int)16L;
    }
    public static int SSL_CTRL_SET_MTU() {
        return (int)17L;
    }
    public static int SSL_CTRL_SESS_NUMBER() {
        return (int)20L;
    }
    public static int SSL_CTRL_SESS_CONNECT() {
        return (int)21L;
    }
    public static int SSL_CTRL_SESS_CONNECT_GOOD() {
        return (int)22L;
    }
    public static int SSL_CTRL_SESS_CONNECT_RENEGOTIATE() {
        return (int)23L;
    }
    public static int SSL_CTRL_SESS_ACCEPT() {
        return (int)24L;
    }
    public static int SSL_CTRL_SESS_ACCEPT_GOOD() {
        return (int)25L;
    }
    public static int SSL_CTRL_SESS_ACCEPT_RENEGOTIATE() {
        return (int)26L;
    }
    public static int SSL_CTRL_SESS_HIT() {
        return (int)27L;
    }
    public static int SSL_CTRL_SESS_CB_HIT() {
        return (int)28L;
    }
    public static int SSL_CTRL_SESS_MISSES() {
        return (int)29L;
    }
    public static int SSL_CTRL_SESS_TIMEOUTS() {
        return (int)30L;
    }
    public static int SSL_CTRL_SESS_CACHE_FULL() {
        return (int)31L;
    }
    public static int SSL_CTRL_MODE() {
        return (int)33L;
    }
    public static int SSL_CTRL_GET_READ_AHEAD() {
        return (int)40L;
    }
    public static int SSL_CTRL_SET_READ_AHEAD() {
        return (int)41L;
    }
    public static int SSL_CTRL_SET_SESS_CACHE_SIZE() {
        return (int)42L;
    }
    public static int SSL_CTRL_GET_SESS_CACHE_SIZE() {
        return (int)43L;
    }
    public static int SSL_CTRL_SET_SESS_CACHE_MODE() {
        return (int)44L;
    }
    public static int SSL_CTRL_GET_SESS_CACHE_MODE() {
        return (int)45L;
    }
    public static int SSL_CTRL_GET_MAX_CERT_LIST() {
        return (int)50L;
    }
    public static int SSL_CTRL_SET_MAX_CERT_LIST() {
        return (int)51L;
    }
    public static int SSL_CTRL_SET_MAX_SEND_FRAGMENT() {
        return (int)52L;
    }
    public static int SSL_CTRL_SET_TLSEXT_SERVERNAME_CB() {
        return (int)53L;
    }
    public static int SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG() {
        return (int)54L;
    }
    public static int SSL_CTRL_SET_TLSEXT_HOSTNAME() {
        return (int)55L;
    }
    public static int SSL_CTRL_SET_TLSEXT_DEBUG_CB() {
        return (int)56L;
    }
    public static int SSL_CTRL_SET_TLSEXT_DEBUG_ARG() {
        return (int)57L;
    }
    public static int SSL_CTRL_GET_TLSEXT_TICKET_KEYS() {
        return (int)58L;
    }
    public static int SSL_CTRL_SET_TLSEXT_TICKET_KEYS() {
        return (int)59L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB() {
        return (int)63L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG() {
        return (int)64L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE() {
        return (int)65L;
    }
    public static int SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS() {
        return (int)66L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS() {
        return (int)67L;
    }
    public static int SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS() {
        return (int)68L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS() {
        return (int)69L;
    }
    public static int SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP() {
        return (int)70L;
    }
    public static int SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP() {
        return (int)71L;
    }
    public static int SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB() {
        return (int)72L;
    }
    public static int SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB() {
        return (int)75L;
    }
    public static int SSL_CTRL_SET_SRP_VERIFY_PARAM_CB() {
        return (int)76L;
    }
    public static int SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB() {
        return (int)77L;
    }
    public static int SSL_CTRL_SET_SRP_ARG() {
        return (int)78L;
    }
    public static int SSL_CTRL_SET_TLS_EXT_SRP_USERNAME() {
        return (int)79L;
    }
    public static int SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH() {
        return (int)80L;
    }
    public static int SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD() {
        return (int)81L;
    }
    public static int DTLS_CTRL_GET_TIMEOUT() {
        return (int)73L;
    }
    public static int DTLS_CTRL_HANDLE_TIMEOUT() {
        return (int)74L;
    }
    public static int SSL_CTRL_GET_RI_SUPPORT() {
        return (int)76L;
    }
    public static int SSL_CTRL_CLEAR_MODE() {
        return (int)78L;
    }
    public static int SSL_CTRL_SET_NOT_RESUMABLE_SESS_CB() {
        return (int)79L;
    }
    public static int SSL_CTRL_GET_EXTRA_CHAIN_CERTS() {
        return (int)82L;
    }
    public static int SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS() {
        return (int)83L;
    }
    public static int SSL_CTRL_CHAIN() {
        return (int)88L;
    }
    public static int SSL_CTRL_CHAIN_CERT() {
        return (int)89L;
    }
    public static int SSL_CTRL_GET_GROUPS() {
        return (int)90L;
    }
}


