// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$867 {

    static final FunctionDescriptor SSL_CTX_get_security_callback$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_get_security_callback$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_get_security_callback",
        constants$867.SSL_CTX_get_security_callback$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_set0_security_ex_data$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_set0_security_ex_data$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_set0_security_ex_data",
        constants$867.SSL_CTX_set0_security_ex_data$FUNC, false
    );
    static final FunctionDescriptor SSL_CTX_get0_security_ex_data$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle SSL_CTX_get0_security_ex_data$MH = RuntimeHelper.downcallHandle(
        "SSL_CTX_get0_security_ex_data",
        constants$867.SSL_CTX_get0_security_ex_data$FUNC, false
    );
    static final FunctionDescriptor OPENSSL_init_ssl$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle OPENSSL_init_ssl$MH = RuntimeHelper.downcallHandle(
        "OPENSSL_init_ssl",
        constants$867.OPENSSL_init_ssl$FUNC, false
    );
    static final FunctionDescriptor SSL_free_buffers$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_free_buffers$MH = RuntimeHelper.downcallHandle(
        "SSL_free_buffers",
        constants$867.SSL_free_buffers$FUNC, false
    );
    static final FunctionDescriptor SSL_alloc_buffers$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle SSL_alloc_buffers$MH = RuntimeHelper.downcallHandle(
        "SSL_alloc_buffers",
        constants$867.SSL_alloc_buffers$FUNC, false
    );
}


