// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$732 {

    static final FunctionDescriptor ERR_load_ASYNC_strings$FUNC = FunctionDescriptor.of(JAVA_INT);
    static final MethodHandle ERR_load_ASYNC_strings$MH = RuntimeHelper.downcallHandle(
        "ERR_load_ASYNC_strings",
        constants$732.ERR_load_ASYNC_strings$FUNC, false
    );
    static final FunctionDescriptor ASYNC_init_thread$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_LONG,
        JAVA_LONG
    );
    static final MethodHandle ASYNC_init_thread$MH = RuntimeHelper.downcallHandle(
        "ASYNC_init_thread",
        constants$732.ASYNC_init_thread$FUNC, false
    );
    static final FunctionDescriptor ASYNC_cleanup_thread$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle ASYNC_cleanup_thread$MH = RuntimeHelper.downcallHandle(
        "ASYNC_cleanup_thread",
        constants$732.ASYNC_cleanup_thread$FUNC, false
    );
    static final FunctionDescriptor ASYNC_WAIT_CTX_new$FUNC = FunctionDescriptor.of(ADDRESS);
    static final MethodHandle ASYNC_WAIT_CTX_new$MH = RuntimeHelper.downcallHandle(
        "ASYNC_WAIT_CTX_new",
        constants$732.ASYNC_WAIT_CTX_new$FUNC, false
    );
    static final FunctionDescriptor ASYNC_WAIT_CTX_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS
    );
    static final MethodHandle ASYNC_WAIT_CTX_free$MH = RuntimeHelper.downcallHandle(
        "ASYNC_WAIT_CTX_free",
        constants$732.ASYNC_WAIT_CTX_free$FUNC, false
    );
    static final FunctionDescriptor ASYNC_WAIT_CTX_set_wait_fd$cleanup$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
}


