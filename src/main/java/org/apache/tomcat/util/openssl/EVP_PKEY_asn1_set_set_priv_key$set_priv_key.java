// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface EVP_PKEY_asn1_set_set_priv_key$set_priv_key {

    int apply(jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, long x2);
    static NativeSymbol allocate(EVP_PKEY_asn1_set_set_priv_key$set_priv_key fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(EVP_PKEY_asn1_set_set_priv_key$set_priv_key.class, fi, constants$343.EVP_PKEY_asn1_set_set_priv_key$set_priv_key$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I", scope);
    }
    static EVP_PKEY_asn1_set_set_priv_key$set_priv_key ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("EVP_PKEY_asn1_set_set_priv_key$set_priv_key::" + Long.toHexString(addr.toRawLongValue()), addr, scope);return (jdk.incubator.foreign.MemoryAddress x0, jdk.incubator.foreign.MemoryAddress x1, long x2) -> {
            try {
                return (int)constants$343.EVP_PKEY_asn1_set_set_priv_key$set_priv_key$MH.invokeExact(symbol, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


