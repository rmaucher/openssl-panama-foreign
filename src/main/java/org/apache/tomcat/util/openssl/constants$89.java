// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$89 {

    static final FunctionDescriptor pthread_mutex_lock$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_lock$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_lock",
        constants$89.pthread_mutex_lock$FUNC, false
    );
    static final FunctionDescriptor pthread_mutex_timedlock$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_timedlock$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_timedlock",
        constants$89.pthread_mutex_timedlock$FUNC, false
    );
    static final FunctionDescriptor pthread_mutex_unlock$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_unlock$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_unlock",
        constants$89.pthread_mutex_unlock$FUNC, false
    );
    static final FunctionDescriptor pthread_mutex_getprioceiling$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_getprioceiling$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_getprioceiling",
        constants$89.pthread_mutex_getprioceiling$FUNC, false
    );
    static final FunctionDescriptor pthread_mutex_setprioceiling$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_setprioceiling$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_setprioceiling",
        constants$89.pthread_mutex_setprioceiling$FUNC, false
    );
    static final FunctionDescriptor pthread_mutex_consistent$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle pthread_mutex_consistent$MH = RuntimeHelper.downcallHandle(
        "pthread_mutex_consistent",
        constants$89.pthread_mutex_consistent$FUNC, false
    );
}


