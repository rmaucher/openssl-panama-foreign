// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$27 {

    static final FunctionDescriptor fflush_unlocked$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle fflush_unlocked$MH = RuntimeHelper.downcallHandle(
        "fflush_unlocked",
        constants$27.fflush_unlocked$FUNC, false
    );
    static final FunctionDescriptor fopen$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle fopen$MH = RuntimeHelper.downcallHandle(
        "fopen",
        constants$27.fopen$FUNC, false
    );
    static final FunctionDescriptor freopen$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle freopen$MH = RuntimeHelper.downcallHandle(
        "freopen",
        constants$27.freopen$FUNC, false
    );
    static final FunctionDescriptor fdopen$FUNC = FunctionDescriptor.of(ADDRESS,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle fdopen$MH = RuntimeHelper.downcallHandle(
        "fdopen",
        constants$27.fdopen$FUNC, false
    );
    static final FunctionDescriptor fmemopen$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle fmemopen$MH = RuntimeHelper.downcallHandle(
        "fmemopen",
        constants$27.fmemopen$FUNC, false
    );
    static final FunctionDescriptor open_memstream$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle open_memstream$MH = RuntimeHelper.downcallHandle(
        "open_memstream",
        constants$27.open_memstream$FUNC, false
    );
}


