// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$246 {

    static final FunctionDescriptor ASN1_item_new$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_item_new$MH = RuntimeHelper.downcallHandle(
        "ASN1_item_new",
        constants$246.ASN1_item_new$FUNC, false
    );
    static final FunctionDescriptor ASN1_item_free$FUNC = FunctionDescriptor.ofVoid(
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_item_free$MH = RuntimeHelper.downcallHandle(
        "ASN1_item_free",
        constants$246.ASN1_item_free$FUNC, false
    );
    static final FunctionDescriptor ASN1_item_d2i$FUNC = FunctionDescriptor.of(ADDRESS,
        ADDRESS,
        ADDRESS,
        JAVA_LONG,
        ADDRESS
    );
    static final MethodHandle ASN1_item_d2i$MH = RuntimeHelper.downcallHandle(
        "ASN1_item_d2i",
        constants$246.ASN1_item_d2i$FUNC, false
    );
    static final FunctionDescriptor ASN1_item_i2d$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_item_i2d$MH = RuntimeHelper.downcallHandle(
        "ASN1_item_i2d",
        constants$246.ASN1_item_i2d$FUNC, false
    );
    static final FunctionDescriptor ASN1_item_ndef_i2d$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle ASN1_item_ndef_i2d$MH = RuntimeHelper.downcallHandle(
        "ASN1_item_ndef_i2d",
        constants$246.ASN1_item_ndef_i2d$FUNC, false
    );
    static final FunctionDescriptor ASN1_add_oid_module$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle ASN1_add_oid_module$MH = RuntimeHelper.downcallHandle(
        "ASN1_add_oid_module",
        constants$246.ASN1_add_oid_module$FUNC, false
    );
}


