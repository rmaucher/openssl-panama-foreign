// Generated by jextract

package org.apache.tomcat.util.openssl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$30 {

    static final FunctionDescriptor vdprintf$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle vdprintf$MH = RuntimeHelper.downcallHandle(
        "vdprintf",
        constants$30.vdprintf$FUNC, false
    );
    static final FunctionDescriptor dprintf$FUNC = FunctionDescriptor.of(JAVA_INT,
        JAVA_INT,
        ADDRESS
    );
    static final MethodHandle dprintf$MH = RuntimeHelper.downcallHandle(
        "dprintf",
        constants$30.dprintf$FUNC, true
    );
    static final FunctionDescriptor fscanf$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle fscanf$MH = RuntimeHelper.downcallHandle(
        "fscanf",
        constants$30.fscanf$FUNC, true
    );
    static final FunctionDescriptor scanf$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS
    );
    static final MethodHandle scanf$MH = RuntimeHelper.downcallHandle(
        "scanf",
        constants$30.scanf$FUNC, true
    );
    static final FunctionDescriptor sscanf$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle sscanf$MH = RuntimeHelper.downcallHandle(
        "sscanf",
        constants$30.sscanf$FUNC, true
    );
    static final FunctionDescriptor vfscanf$FUNC = FunctionDescriptor.of(JAVA_INT,
        ADDRESS,
        ADDRESS,
        ADDRESS
    );
    static final MethodHandle vfscanf$MH = RuntimeHelper.downcallHandle(
        "vfscanf",
        constants$30.vfscanf$FUNC, false
    );
}


